[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my blog where I will provide professional content about R, machine learning, biomaterials and bioinformatics, among others, and also personal content about the glorious São Paulo Futebol Clube.\nThis blog is my first adventure using Quarto!\nYou can find me on the social networks below (Important: My twitter is for mostly personal content, please don’t take me seriously!)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Do Marcel",
    "section": "",
    "text": "30 days chart challenge - day 15\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\npositive/negative\n\n\n\n\n\n\nApr 15, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 14\n\n\n\n\n\n\n\nObservable\n\n\nJavaScript\n\n\nDataviz\n\n\n\n\nnew tool\n\n\n\n\n\n\nApr 14, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 13\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\npop culture\n\n\n\n\n\n\nApr 13, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 12\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\ntheme:BBC News\n\n\n\n\n\n\nApr 12, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 11\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\ncircle\n\n\n\n\n\n\nApr 11, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 09\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\nhigh/low\n\n\n\n\n\n\nApr 9, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 05\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\nslope\n\n\n\n\n\n\nApr 5, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 04\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\nhistorical\n\n\n\n\n\n\nApr 4, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 03\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\nfauna/flora\n\n\n\n\n\n\nApr 3, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 02\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\nwaffles plot\n\n\n\n\n\n\nApr 2, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\n30 days chart challenge - day 01\n\n\n\n\n\n\n\nR\n\n\nDataviz\n\n\n\n\npart to whole\n\n\n\n\n\n\nApr 1, 2023\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nOperations with vectors\n\n\n\n\n\n\n\nR\n\n\nbase\n\n\n\n\nNumeric operations\n\n\n\n\n\n\nSep 5, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nR objects 3\n\n\n\n\n\n\n\nR\n\n\nbase\n\n\n\n\nLists\n\n\n\n\n\n\nAug 28, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nR objects 2\n\n\n\n\n\n\n\nR\n\n\nbase\n\n\n\n\nTwo dimensional objects\n\n\n\n\n\n\nAug 24, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nR objects\n\n\n\n\n\n\n\nR\n\n\nbase\n\n\n\n\n\n\n\n\n\n\n\nAug 12, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nMy first R package\n\n\n\n\n\n\n\nnews\n\n\nR\n\n\nFTIR\n\n\nbiomaterials\n\n\n\n\n\n\n\n\n\n\n\nAug 11, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 10, 2022\n\n\nMarcel Ferreira\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Operations-with-vector/index.html",
    "href": "posts/Operations-with-vector/index.html",
    "title": "Operations with vectors",
    "section": "",
    "text": "In previous posts we have talked about object types and their atomic classes, among them vectors, which are the basis for the other objects. In this post I will begin to demonstrate how the main operations with vectors work, today focusing on numerical operations."
  },
  {
    "objectID": "posts/Operations-with-vector/index.html#numeric-vectors",
    "href": "posts/Operations-with-vector/index.html#numeric-vectors",
    "title": "Operations with vectors",
    "section": "Numeric vectors",
    "text": "Numeric vectors\nAs said before, vectors are one-dimensional objects composed of a set of elements, where the order does not necessarily have a meaning, serving only to locate the element in the vector. Let’s look at the example of vector v1 below:\n\\[\nv_1 = \\{1,2,3,4,5\\}\n\\]\nv1 represents the sequence of integers from 1 to 5. In R we can create any vector with the c() function, as we saw earlier. But it is not the only way. We can create sequences with the : operator, for integers, and the seq() function for general cases. So let’s create v1 as an object in R in these three different ways. But first a hint, when creating an object in R we can do it inside () and the generated object will be printed automatically.\n\n#created with c()\n(v1_1 <- c(1,2,3,4,5))\n\n[1] 1 2 3 4 5\n\n#created with :\n(v1_2 <- 1:5)\n\n[1] 1 2 3 4 5\n\n#created with seq()\n(v1_3 <- seq(from = 1, to = 5, by = 1))\n\n[1] 1 2 3 4 5\n\n\nWhen we choose a fractional value in the argument by, the seq() function can generate any number sequence (Arithmetic Progressions)."
  },
  {
    "objectID": "posts/Operations-with-vector/index.html#math-using-vectors",
    "href": "posts/Operations-with-vector/index.html#math-using-vectors",
    "title": "Operations with vectors",
    "section": "Math using vectors",
    "text": "Math using vectors\nThe basic mathematical operations in R, addition, subtraction, multiplication, division, etc, are contained in the table below:\n\nMath operations\n\n\n\n\n\n\n\n\nMath\nOperator\nCode\nExample\n\n\n\n\naddtion\n+\n2+2\n\\(2+2 =4\\)\n\n\nsubtraction\n-\n4-2\n\\(4-2=2\\)\n\n\nmultiplication\n*\n2*2\n\\(2\\times2=4\\)\n\n\ndivision\n/\n4/2\n\\(\\frac{4}{2} = 2\\)\n\n\npower\n^ or **\n2^2\n\\(2^2=4\\)\n\n\nsquare root\nsqrt()\nsqrt(4)\n\\(\\sqrt{4} = 2\\)\n\n\nexponential\nexp()\nexp(-4)\n\\(e^{-4} = 0.0183\\)\n\n\nlog\nlog(), log2 or log10\nlog(0.0183)\n\\(\\ln(0.0183) \\simeq -4\\)\n\n\n\nThere are others, but I believe that these will be the most used in our day to day. These operations in R work element by element. For example, when we add two vectors (\\(v_1=\\{1,2,3,4,5\\} v_2 = \\{2,3,4,5,6\\}\\)), R will add element 1 of v1 to 1 of v2, 2 of v1 to 2 of v2, and so on.\n\\[\nv_1+v_2=\\{1+2,2+3,3+4,4+5,5+6\\}\n\\]\n\\[\nv_1+v_2=\\{3,5,7,9,11\\}\n\\]\nSubtraction, multiplication, division, and potentiation follow the same principle.\n\nv1 <- 1:5\nv2 <- 2:6\n#add\nv1+v2\n\n[1]  3  5  7  9 11\n\n#sub\nv1-v2\n\n[1] -1 -1 -1 -1 -1\n\n#multiplication\nv1*v2\n\n[1]  2  6 12 20 30\n\n#division\nv1/v2\n\n[1] 0.5000000 0.6666667 0.7500000 0.8000000 0.8333333\n\n#power\nv1^v2\n\n[1]     1     8    81  1024 15625\n\n\nFrom this we can infer that it is necessary in R that vectors contain the same number of elements (or the same length), but in practice this is not what happens. In case of vectors of different lengths R will recycle the vector with the smallest number of elements to match and thus perform the math. Consider the vectors \\(v_1 = \\{1,2,3,4,5\\}\\) and \\(v_3 = \\{0,2,1\\}\\), Let’s see how R performs subtraction.\n\\[\nv_1-v_3 = \\{1-0,2-2,3-1,4-0,5-2\\}\n\\]\n\\[\nv_1-v_3 = \\{1,0,2,4,3\\}\n\\]\nAgain, the operations addition, multiplication, division and power work equally in R.\n\nv1 <- 1:5\nv3 <- c(0,2,1)\n#add\nv1+v3\n\nWarning in v1 + v3: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n\n\n[1] 1 4 4 4 7\n\n#sub\nv1-v3\n\nWarning in v1 - v3: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n\n\n[1] 1 0 2 4 3\n\n#multiplication\nv1*v3\n\nWarning in v1 * v3: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n\n\n[1]  0  4  3  0 10\n\n#division\nv1/v3\n\nWarning in v1/v3: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n\n\n[1] Inf 1.0 3.0 Inf 2.5\n\n#power\nv1^v3\n\nWarning in v1^v3: comprimento do objeto maior não é múltiplo do comprimento do\nobjeto menor\n\n\n[1]  1  4  3  1 25\n\n\nNotice that a warning is displayed that the vectors have different sizes and that when we divide by 0 an Inf value relative to infinity is displayed. R’s recycling behavior may seem strange at first, but it is useful for performing scalar operations with vectors (remembering that in practice in R there are no scalars, only unit vectors).\n\\[\n5+v_1 = \\{5+1,5+2,5+3,5+4,5+5\\}\n\\]\n\\[\n5+v1 = \\{6,7,8,9,10\\}\n\\]\n\nv1 <- 1:5\n#add\nv1+5\n\n[1]  6  7  8  9 10\n\n#sub\nv1-5\n\n[1] -4 -3 -2 -1  0\n\n#multiplication\nv1*5\n\n[1]  5 10 15 20 25\n\n#division\nv1/5\n\n[1] 0.2 0.4 0.6 0.8 1.0\n\n#power\nv1^5\n\n[1]    1   32  243 1024 3125\n\n\nSimilarly, functions are also applied element by element. Let’s look at the same v1 being calculated its square root, exponential and logarithm.\n\nv1 <- 1:5\n#square root\nsqrt(v1)\n\n[1] 1.000000 1.414214 1.732051 2.000000 2.236068\n\n#exponential\nexp(v1)\n\n[1]   2.718282   7.389056  20.085537  54.598150 148.413159\n\n#log\nlog(v1)\n\n[1] 0.0000000 0.6931472 1.0986123 1.3862944 1.6094379\n\n\nR also contains periodic functions like sine (sin()), cosine (cos()) and tangent (tan()), and an inner object to represent pi.\n\npi\n\n[1] 3.141593\n\n#sine\nsin(pi)\n\n[1] 1.224606e-16\n\n#cossine\ncos(pi)\n\n[1] -1\n\n#tangent\ntan(pi)\n\n[1] -1.224647e-16\n\n\nIt is important to see that the values calculated by R, although they are infinitesimal, are not exactly the known values.\n\\[\n\\sin(\\pi) = 0\n\\]\n\\[\n\\cos(\\pi) = -1\n\\]\n\\[\n\\tan(\\pi) = 0\n\\]"
  },
  {
    "objectID": "posts/Operations-with-vector/index.html#concluding",
    "href": "posts/Operations-with-vector/index.html#concluding",
    "title": "Operations with vectors",
    "section": "Concluding",
    "text": "Concluding\nWell, there are many more functions and operators that can be applied, but I think we have covered the main ones. We saw how recycling works in operations. That’s it for now. I hope to see you in the next posts!\nSee you there!"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "My first R package",
    "section": "",
    "text": "preliminar hex\n\n\nIn the next few weeks I will be writing the function documentation and then finalizing the package. I am very happy because when I started using R to analyze my FTIR (infrared spectroscopy) data I could not apply tidyverse functions to my pipelines. It took me months of wracking my brains to find a model to leverage the existing packages and connect them to the tidyverse.\nYou can check the github repository.\nEnjoy!"
  },
  {
    "objectID": "posts/R-objects/index.html",
    "href": "posts/R-objects/index.html",
    "title": "R objects",
    "section": "",
    "text": "R is an extremely powerful language for data analysis and is used in many different fields. But many users start without taking the time to assimilate the different types of objects, which leads to mistakes that could simply be avoided. This in turn can lead to frustration, which is the gateway to the dark side of the force.\nvia GIPHY\nWhen I started analyzing data with R I was on a very tight deadline and had to skip these steps, and I made a lot of mistakes. Really, a lot!\nSo in this post I will talk about the basic object types, or classes, in R. Basic but effective. I hope it helps you."
  },
  {
    "objectID": "posts/R-objects/index.html#atomic-data",
    "href": "posts/R-objects/index.html#atomic-data",
    "title": "R objects",
    "section": "Atomic data",
    "text": "Atomic data\nThese are the basic data classes in R. More complex objects will always be built using them. There are 6 classes in R: logical, integer, real, complex, string (or character) and raw. logical are values like TRUE or FALSE (Known as Booleans). integer, real and complex are numeric types. character are values like words, in other languages this type of values are call as strings. And about raw I must be honest with you. I have never used it!\n\n#logical\nTRUE\n\n[1] TRUE\n\n#integer\n1L\n\n[1] 1\n\n#real\n1.2\n\n[1] 1.2\n\n#complex\ncomplex(real = 1,imaginary = 2)\n\n[1] 1+2i\n\n#character\n\"String\"\n\n[1] \"String\"\n\n\nYou may have notice that there is special ways to create these objects. We use \"\" to define a character. We add L to the end of a number to make it explicit that it is an integer. We need the complex() function to create a complex number. And logicals are defined by the uppercase words TRUE and FALSE, and their respective initials, T and F."
  },
  {
    "objectID": "posts/R-objects/index.html#vectors",
    "href": "posts/R-objects/index.html#vectors",
    "title": "R objects",
    "section": "Vectors",
    "text": "Vectors\nVectors are one-dimensional objects composed of a set of elements, where the order does not necessarily have a meaning, serving only to locate the element in the vector. The functions c() is used to create vector in R.\n\nv1 <- c(1,3,5)\nv1\n\n[1] 1 3 5\n\nv2 <- c(\"ball\",\"house\")\nv2\n\n[1] \"ball\"  \"house\"\n\nv3 <- c(T,T,F)\nv3\n\n[1]  TRUE  TRUE FALSE\n\n\nThe operator [] can be used to extract the element of certain position in a vector. For example, let’s extract the second element of the vectors v1, v2 and v3.\n\nv1[2]\n\n[1] 3\n\nv2[2]\n\n[1] \"house\"\n\nv3[2]\n\n[1] TRUE\n\n\nPay attention when use this operator to not try access an non existing position in a vector. such as trying to access the fourth element in a vector (v1) with only three elements. This will result in a NA value, which is represent the missing values in R, which are a very important topic that I will cover in the future. Stay tuned!\n\nv1[4]\n\n[1] NA\n\n\nThere are other ways to create vectors in R considering their classes that I will dedicate a separate post for this.\nIn R different classes cannot coexist in the same vector (we will see what a vector is later, for now just trust me) and there is coercion when we put them together. Coercion occurs in the following order:\ncharacter > complex > real > integer > logical\nThis means, if you put a character and a numeric together in a vector, R will coerce the numeric to become a character. If you put a logical in the same vector as a numeric it will be turned into a numeric. The functions class() and typeof() can be used to check the class and type, respectively, of R objects.\n\n#class and typeof usage\nclass(\"ball\")\n\n[1] \"character\"\n\ntypeof(1L)\n\n[1] \"integer\"\n\nclass(1.2)\n\n[1] \"numeric\"\n\n#coercion\nobj1 <-c(\"ball\",1)\nclass(obj1)\n\n[1] \"character\"\n\ntypeof(obj1)\n\n[1] \"character\"\n\nobj2 <-c(TRUE,1)\nclass(obj2)\n\n[1] \"numeric\"\n\ntypeof(obj2)\n\n[1] \"double\"\n\n\nThis behavior is the source of major errors and it is always necessary to check that your objects are of the desired class. After all, it is impossible to perform mathematical operations with character in R, for example.\nHowever, the coercion behavior can be used to our advantage in the case of the trick of using logicals and numeric together. Like in the case where we want to know how many numbers in an vector are greater than a certain value. By using the > (greater than) operator we perform a logical test that returns TRUE/FALSE values. The sum() function, on the other hand, adds up all the elements of a vector and if it receives a logical vector it will transform TRUE into 1 and FALSE into 0.\n\n#a numeric vector\nv1 <- c(1,2,3,2,4,5,8,2,1)\n\n\n#logical test\nv1 > 3\n\n[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n\n#use sum to get how many numbers are grater than 3\nsum(v1 > 3)\n\n[1] 3\n\n\nThe post is getting long, so that’s it for now! In the next one we will talk about objects with larger dimensions like matrix and data.frame.\nI’m waiting for you!"
  },
  {
    "objectID": "posts/R-objects-2/index.html",
    "href": "posts/R-objects-2/index.html",
    "title": "R objects 2",
    "section": "",
    "text": "In the last post (R objects) we have seen the atomic classes and vectors, which are one-dimensional arrangements of these classes. But, as you can imagine, it’s not always possible to represent our data using one-dimensional object. When talking about two-dimensional objects tables are something extremely common in our daily lives. R has two types of objects for representing tables (2D objects): matrix and data.frames, very similar objects, but with one very important difference: matrix only accept ONE atomic class, while data.frames accept ONE per column."
  },
  {
    "objectID": "posts/R-objects-2/index.html#matrix",
    "href": "posts/R-objects-2/index.html#matrix",
    "title": "R objects 2",
    "section": "Matrix",
    "text": "Matrix\nTo create a matrix we need a vector (Yes, a vector) and the function matrix(). This function takes the vector and arrange in a object containing the number of rows and columns that we specify in the arguments nrow and ncol.\n\nv1 <- c(1,2,3,1,2,3)\n\nMat1 <- matrix(data = v1,\n               nrow = 2,\n               ncol = 3)\nMat1\n\n     [,1] [,2] [,3]\n[1,]    1    3    2\n[2,]    2    1    3\n\n\nIt’s possible to control the order of the elements in the matrix using the argument byrow, which controls whether the elements will be filled by rows or columns (default).\n\nmatrix(data = v1,\n       nrow = 2,\n       ncol = 3,\n       byrow = T)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    1    2    3\n\nmatrix(data = v1,\n       nrow = 2,\n       ncol = 3,\n       byrow = F)\n\n     [,1] [,2] [,3]\n[1,]    1    3    2\n[2,]    2    1    3\n\n\nThe last argument, dimnames, allows us to choose names for the dimensions (rows and columns), but for this argument we need to use lists, and since we haven’t talked about this object class yet, I will show you how to achieve the same results using functions. The functions rownames() and colnames() are used to extract the row and column names, respectively. We can use an vector of characters, equal in length to the number of rows or columns, to choose their names.\n\n#Columns\ncolnames(Mat1)\n\nNULL\n\ncolnames(Mat1) <- c(\"Col1\",\"Col2\",\"Col3\")\ncolnames(Mat1)\n\n[1] \"Col1\" \"Col2\" \"Col3\"\n\n#Rows\nrownames(Mat1)\n\nNULL\n\nrownames(Mat1) <- c(\"Row1\",\"Row2\")\nrownames(Mat1)\n\n[1] \"Row1\" \"Row2\"\n\n\nSimilar to vectors, we can extract the elements using squarebrackets, but now we have to pass the indices to rows and columns.\n\n#Extract the 2nd row\nMat1[2,]\n\nCol1 Col2 Col3 \n   2    1    3 \n\n#Extract the 1st and 3rd columns\nMat1[,c(1,3)]\n\n     Col1 Col3\nRow1    1    2\nRow2    2    3\n\n#Extract the element row = 2 column = 2\nMat1[2,2]\n\n[1] 1"
  },
  {
    "objectID": "posts/R-objects-2/index.html#data-frames",
    "href": "posts/R-objects-2/index.html#data-frames",
    "title": "R objects 2",
    "section": "Data frames",
    "text": "Data frames\nData frames are objects design to store data tables in R. Similar to matrix, data frames are 2D objects but as said before, different columns can have different classes. In practice we can think of each column as being a different vector, and the $ operator allows us to extract this vector. Thinking about data analysis, in a data frame each column is a variable and each row is an observation.\nWe build data.frames with the function data.frame\n\ndf1 <- data.frame(var1 = c(1,2,3,4),\n                  var2 = c(\"a\",\"b\",\"c\",\"d\"),\n                  var3 = c(T,T,T,F))\ndf1\n\n  var1 var2  var3\n1    1    a  TRUE\n2    2    b  TRUE\n3    3    c  TRUE\n4    4    d FALSE\n\n\nExtracting vectors\n\ndf1$var1\n\n[1] 1 2 3 4\n\ndf1$var2\n\n[1] \"a\" \"b\" \"c\" \"d\"\n\ndf1$var3\n\n[1]  TRUE  TRUE  TRUE FALSE\n\n\nAs for matrix, we can use squartebrackets to extract elements (although I recommend extracting using the $ operator first).\n\n#Using squarebrackets\ndf1[2,2]\n\n[1] \"b\"\n\n#Using the $\ndf1$var2[2]\n\n[1] \"b\"\n\n\nThe names of columns (or variable) can be used in the squarebracket to extract the column.\n\ndf1[,\"var1\"]\n\n[1] 1 2 3 4\n\n\nFor matrix and for data.frames we can find the sizes of the dimensions with the functions nrow(), ncol(), and dim(), which return the number of rows, columns, and both, respectively.\n\n#number of rows\nnrow(df1)\n\n[1] 4\n\n#number of columns\nncol(df1)\n\n[1] 3\n\n#length of dimensions\ndim(df1)\n\n[1] 4 3\n\n\nSo far, so good. In the next post I will deal with that list I talked about here, and we will see how powerful they are.\nI’ll be waiting for you!"
  },
  {
    "objectID": "posts/R-objects-3/index.html",
    "href": "posts/R-objects-3/index.html",
    "title": "R objects 3",
    "section": "",
    "text": "It is popularly known the curse of the third movie. Alien 3, Return of the Jedi, X-men: The Last Stand, Spider-Man 3, The Godfather 3, among others (MANY OTHERS) have suffered from this curse. However, MARVEL has overcome this curse recently with films like Infinity War, Thor Ragnarok, and Spider-Man with No Way Home. Inspired by her, we will conclude our trilogy of basic R objects. In this post we will look at Lists."
  },
  {
    "objectID": "posts/R-objects-3/index.html#lists",
    "href": "posts/R-objects-3/index.html#lists",
    "title": "R objects 3",
    "section": "Lists",
    "text": "Lists\nLists are objects similar to vectors, but each element can be a different object. That is, a list can contain a vector in one element, a matrix or data.frame in another, and even a list in a given element. That’s right, lists within lists.\n\n\n\n\nvia GIPHY\n\n\n\nThe function list() is used to create a list in R:\n\nv1 <- c(1,3,5,7)\nv2 <- c(\"a\",\"b\")\ndf1 <- data.frame(var1 = c(1,2,3,4),\n                  var2 = c(\"a\",\"b\",\"c\",\"d\"),\n                  var3 = c(T,T,T,F))\n\nl1 <- list(v1,v2,df1)\nl1\n\n[[1]]\n[1] 1 3 5 7\n\n[[2]]\n[1] \"a\" \"b\"\n\n[[3]]\n  var1 var2  var3\n1    1    a  TRUE\n2    2    b  TRUE\n3    3    c  TRUE\n4    4    d FALSE\n\n\nWe can see that the output of a list contains differences from the others that we have seen. Each element number on a list is printed by R with double square brackets. Then R will print the elements as we have seen for each class.\nThis is something important to note when talking about how we extract elements from lists. If we use the single bracket operator the output will be a list, but only containing the element of that index.\n\n#Single square bracket\nl1[2]\n\n[[1]]\n[1] \"a\" \"b\"\n\n#Double square bracket\nl1[[2]]\n\n[1] \"a\" \"b\"\n\n\nWe can use the class() function to check the output classes.\n\n#Single square bracket\nclass(l1[2])\n\n[1] \"list\"\n\n#Double square bracket\nclass(l1[[2]])\n\n[1] \"character\"\n\n\nWhen working with lists we can access elements internal to a given list element. To do this we use a double square bracket followed by a single square bracket. Example, let’s extract the third element contained in the first element of the list l1.\n\n# The third element in the first list element\nl1[[1]][3]\n\n[1] 5\n\n\nThe third element of l1 is a data.frame, we can extract its columns or rows in a similar way.\n\n#The first column of the data.frame in the third list element\nl1[[3]][,1]\n\n[1] 1 2 3 4\n\n#The rows number 2 and 3 in the data.frame in the third list element\nl1[[3]][2:3,]\n\n  var1 var2 var3\n2    2    b TRUE\n3    3    c TRUE\n\n\nJust as we can name columns and rows in data.frames/matrix, we can name each element in a list. This is done using the names() function.\n\n#unamed list\nnames(l1)\n\nNULL\n\nnames(l1) <- c(\"element1\",\"element2\",\"element3\")\n\n#named list\nnames(l1)\n\n[1] \"element1\" \"element2\" \"element3\"\n\n\nAnd, as you may be wondering, we can use these names to extract elements from the list by passing them in the single or double square bracket operators.\n\nl1\n\n$element1\n[1] 1 3 5 7\n\n$element2\n[1] \"a\" \"b\"\n\n$element3\n  var1 var2  var3\n1    1    a  TRUE\n2    2    b  TRUE\n3    3    c  TRUE\n4    4    d FALSE\n\n#Single square bracket\nl1[c(\"element1\",\"element3\")]\n\n$element1\n[1] 1 3 5 7\n\n$element3\n  var1 var2  var3\n1    1    a  TRUE\n2    2    b  TRUE\n3    3    c  TRUE\n4    4    d FALSE\n\n#Double square bracket\nl1[[\"element1\"]]\n\n[1] 1 3 5 7"
  },
  {
    "objectID": "posts/R-objects-3/index.html#concluding",
    "href": "posts/R-objects-3/index.html#concluding",
    "title": "R objects 3",
    "section": "Concluding",
    "text": "Concluding\nIn this three posts we have seen the main objects that form the basis of R. There are others, of course, but with these well understood we can solve the vast majority of challenges when working with R.\nI will soon create content showing operations with these objects in practice. That’s it for now. See you around!"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Mee"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day01/index.html",
    "href": "posts/30-days-charts-challenge-day01/index.html",
    "title": "30 days chart challenge - day 01",
    "section": "",
    "text": "The data that I choose to this challenge was the Marvel Chracters (https://www.kaggle.com/datasets/syedasimalishah/marvel-chracters).\n\nlibrary(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(ggsankey)\nlibrary(extrafont)\n\nRegistering fonts with R\n\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\n\ndata <- read_csv(file = \"Marvel Movies.csv\")\n\nRows: 16376 Columns: 11\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (9): name, ID, ALIGN, EYE, HAIR, SEX, GSM, ALIVE, FIRST APPEARANCE\ndbl (2): APPEARANCES, Year\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCheck the NA’s\n\ndata %>% \n  mutate(\n    across(everything(),is.na)\n    ) %>%\n  summarise(\n    across(everything(),sum)\n    )\n\n# A tibble: 1 x 11\n   name    ID ALIGN   EYE  HAIR   SEX   GSM ALIVE APPEARANCES FIRST APPE~1  Year\n  <int> <int> <int> <int> <int> <int> <int> <int>       <int>        <int> <int>\n1     0  3770  2812  9767  4264   854 16286     3        1096          815   815\n# ... with abbreviated variable name 1: `FIRST APPEARANCE`\n\n\n\ndata %>%\n  map(.f = \\(x) length(unique(x)))\n\n$name\n[1] 16376\n\n$ID\n[1] 5\n\n$ALIGN\n[1] 4\n\n$EYE\n[1] 25\n\n$HAIR\n[1] 26\n\n$SEX\n[1] 5\n\n$GSM\n[1] 7\n\n$ALIVE\n[1] 3\n\n$APPEARANCES\n[1] 359\n\n$`FIRST APPEARANCE`\n[1] 833\n\n$Year\n[1] 76\n\n\n\ndata %>% \n  group_by(HAIR) %>%\n  count(sort = TRUE) %>%\n  mutate(prop = 100*n/nrow(data))\n\n# A tibble: 26 x 3\n# Groups:   HAIR [26]\n   HAIR           n   prop\n   <chr>      <int>  <dbl>\n 1 <NA>        4264 26.0  \n 2 Black Hair  3755 22.9  \n 3 Brown Hair  2339 14.3  \n 4 Blond Hair  1582  9.66 \n 5 No Hair     1176  7.18 \n 6 Bald         838  5.12 \n 7 White Hair   754  4.60 \n 8 Red Hair     620  3.79 \n 9 Grey Hair    531  3.24 \n10 Green Hair   117  0.714\n# ... with 16 more rows\n\n\n\ndata %>% \n    group_by(EYE) %>%\n  count(sort = TRUE) %>%\n  mutate(prop = 100*n/nrow(data))\n\n# A tibble: 25 x 3\n# Groups:   EYE [25]\n   EYE             n   prop\n   <chr>       <int>  <dbl>\n 1 <NA>         9767 59.6  \n 2 Blue Eyes    1962 12.0  \n 3 Brown Eyes   1924 11.7  \n 4 Green Eyes    613  3.74 \n 5 Black Eyes    555  3.39 \n 6 Red Eyes      508  3.10 \n 7 White Eyes    400  2.44 \n 8 Yellow Eyes   256  1.56 \n 9 Grey Eyes      95  0.580\n10 Hazel Eyes     76  0.464\n# ... with 15 more rows\n\n\n\n\n\n(df_ex <- data %>%\n  slice_sample(n = 20) %>%\n    mutate(across(where(is.character),.f = \\(x) replace_na(x,\"No Info\"))) %>%\n  make_long(\"ID\",\"SEX\",\"EYE\",\"HAIR\",\"ALIGN\",\"ALIVE\"))\n\n# A tibble: 120 x 4\n   x     node              next_x next_node         \n   <fct> <chr>             <fct>  <chr>             \n 1 ID    No Info           SEX    Male Characters   \n 2 SEX   Male Characters   EYE    No Info           \n 3 EYE   No Info           HAIR   Grey Hair         \n 4 HAIR  Grey Hair         ALIGN  Good Characters   \n 5 ALIGN Good Characters   ALIVE  Living Characters \n 6 ALIVE Living Characters <NA>   <NA>              \n 7 ID    Secret Identity   SEX    Female Characters \n 8 SEX   Female Characters EYE    No Info           \n 9 EYE   No Info           HAIR   Blond Hair        \n10 HAIR  Blond Hair        ALIGN  Neutral Characters\n# ... with 110 more rows\n\n\n\n(\n  p1 <- df_ex %>%\n  ggplot(aes(x = x,\n             next_x = next_x,\n             node = node,\n             next_node = next_node,\n             fill = factor(node),\n             label = node)) +\n  geom_sankey(flow.alpha = .5, color = \"black\") +\n  geom_sankey_label(size = 3.5, color = 1, fill = \"white\",family = \"Segoe UI\") +\n  viridis::scale_fill_viridis(option = \"A\",discrete = TRUE) + \n  theme_void() +\n  labs(title =\"Marvel movie characters\") +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"#e8e6d1\",linewidth = 0),\n    panel.background = element_rect(fill = \"#e8e6d1\",linewidth = 0,linetype = \"blank\"),\n    text = element_text(family = \"Segoe UI\"),\n    plot.title = element_text(family = \"Segoe UI\",face = \"bold\",size = 30,hjust = .5))\n  )\n\n\n\n\n\nggdraw(p1) +\n  draw_label(label = \"@marceelrf\",x = .1, y = 0.05,fontfamily = \"Segoe UI\") +\n  draw_image(image = \"Marvel_Logo.svg\",x = .85,y = .01,width = 0.13, height = 0.2)\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): métrica da\nfonte desconhecida para caractere 0x4d\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x67\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x6a\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x70\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x71\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x79\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x51"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day01/index.html#final-plot",
    "href": "posts/30-days-charts-challenge-day01/index.html#final-plot",
    "title": "30 days chart challenge - day 01",
    "section": "Final plot",
    "text": "Final plot\n\n(plot_final <- \n    data %>%\n    mutate(across(where(is.character),.f = \\(x) replace_na(x,\"No Info\"))) %>%\n    mutate(HAIR = fct_lump_prop(HAIR, 0.05),\n           EYE = fct_lump_prop(EYE, 0.05)) %>%\n  make_long(\"ID\",\"SEX\",\"EYE\",\"HAIR\",\"ALIGN\",\"ALIVE\") %>%\n    ggplot(aes(x = x,\n             next_x = next_x,\n             node = node,\n             next_node = next_node,\n             fill = factor(node),\n             label = node)) +\n  geom_sankey(flow.alpha = .5, color = \"black\") +\n  geom_sankey_label(size = 3.5, color = 1, fill = \"white\",family = \"Segoe UI\") +\n  viridis::scale_fill_viridis(option = \"A\",discrete = TRUE) + \n  theme_void() +\n  labs(title = \"Marvel movie characters\",\n       subtitle = \"Source: https://www.kaggle.com/datasets/syedasimalishah/marvel-chracters\") +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"#e8e6d1\",linewidth = 0),\n    panel.background = element_rect(fill = \"#e8e6d1\",linewidth = 0,linetype = \"blank\"), plot.subtitle = element_text(family = \"Segoe UI\",face = \"italic\",size = 8,hjust = .1),\n    text = element_text(family = \"Segoe UI\"),\n    plot.title = element_text(family = \"Segoe UI\",face = \"bold\",size = 30,hjust = .5))\n  )\n\nWarning: attributes are not identical across measure variables; they will be\ndropped\n\n\n\n\nggdraw(plot_final) +\n  draw_label(label = \"@marceelrf\",x = .1, y = 0.025,fontfamily = \"Segoe UI\") +\n  draw_image(image = \"Marvel_Logo.svg\",x = .85,y = 0.00001,\n             width = 0.13, height = 0.2,vjust = .25)\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): métrica da\nfonte desconhecida para caractere 0x4d\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x67\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x6a\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x70\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x71\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x79\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com\nlargura desconhecida para caractere 0x51\n\n\n\n\n\n\nggsave(filename = \"day01_finalplot.png\",width = 10,height = 7,dpi = 600)"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day02/index.html",
    "href": "posts/30-days-charts-challenge-day02/index.html",
    "title": "30 days chart challenge - day 02",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(waffle)\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\nlibrary(extrafont)\n\nRegistering fonts with R"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day02/index.html#data",
    "href": "posts/30-days-charts-challenge-day02/index.html#data",
    "title": "30 days chart challenge - day 02",
    "section": "Data",
    "text": "Data\n\ndata <- read_csv(\"player_stats.csv\")\n\nRows: 2769 Columns: 26\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (6): Player name, Nation, Position, Squad, Compition, Age\ndbl (19): Born year, Match played, Starts, 90s, Goal, Assist, Goal + Assist,...\nnum  (1): MIn\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(data)\n\nRows: 2,769\nColumns: 26\n$ `Player name`                                        <chr> \"Brenden Aaronson~\n$ Nation                                               <chr> \"USA\", \"USA\", \"MA~\n$ Position                                             <chr> \"MF,FW\", \"MF\", \"D~\n$ Squad                                                <chr> \"Leeds United\", \"~\n$ Compition                                            <chr> \"Premier League\",~\n$ Age                                                  <chr> \"22-157\", \"19-214~\n$ `Born year`                                          <dbl> 2000, 2003, 1987,~\n$ `Match played`                                       <dbl> 26, 1, 28, 20, 26~\n$ Starts                                               <dbl> 23, 8, 28, 14, 26~\n$ MIn                                                  <dbl> 1948.0, 0.1, 2520~\n$ `90s`                                                <dbl> 21.6, NA, 28.0, 1~\n$ Goal                                                 <dbl> 1.0, NA, 1.0, 0.9~\n$ Assist                                               <dbl> 2.0, NA, 1.0, 1.0~\n$ `Goal + Assist`                                      <dbl> 3.0, NA, 2.0, 0.9~\n$ `Goal+Penalty kick`                                  <dbl> 1.0, NA, 1.0, 1.9~\n$ `Penalty Kick`                                       <dbl> 0, 0, 0, 0, 0, 0,~\n$ `Penalty Kick Attempted`                             <dbl> 0, 0, 0, 0, 0, 0,~\n$ `Yellow Card`                                        <dbl> 2.0, NA, 3.0, 2.8~\n$ `Red Card`                                           <dbl> 0.00, 0.00, 0.00,~\n$ `Expected Goal`                                      <dbl> 2.9, 0.0, 1.8, 34~\n$ `Non-penalty Expected Goal`                          <dbl> 2.9, 0.0, 1.8, 84~\n$ `Expected Assisted Goal`                             <dbl> 3.7, 0.0, 0.4, 74~\n$ `Non-penalty Expected Goal + Expected Assisted Goal` <dbl> 6.60, 0.00, 2.20,~\n$ `Progressive Carries`                                <dbl> 36.00, 0.00, 20.0~\n$ `Progressive Passes`                                 <dbl> 72.00, 0.00, 147.~\n$ `Progressive Passes Receive`                         <dbl> 120.00, 0.00, 5.0~\n\n\n\nCheck NA’s\n\ndata %>%\n  mutate(across(everything(), is.na)) %>% \n  summarise(across(everything(),sum))\n\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`\n     <int>  <int>   <int> <int>   <int> <int>   <int>   <int>  <int> <int> <int>\n1        0      1       0     0       0     0       0       0      0    30    79\n# ... with 15 more variables: Goal <int>, Assist <int>, `Goal + Assist` <int>,\n#   `Goal+Penalty kick` <int>, `Penalty Kick` <int>,\n#   `Penalty Kick Attempted` <int>, `Yellow Card` <int>, `Red Card` <int>,\n#   `Expected Goal` <int>, `Non-penalty Expected Goal` <int>,\n#   `Expected Assisted Goal` <int>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <int>,\n#   `Progressive Carries` <int>, `Progressive Passes` <int>, ...\n\n\n\ndata %>%\n  filter(is.na(Nation))\n\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3 Age   Born ~4 Match~5 Starts   MIn `90s`\n  <chr>    <chr>  <chr>   <chr> <chr>   <chr>   <dbl>   <dbl>  <dbl> <dbl> <dbl>\n1 David O~ <NA>   FW      Crys~ Premie~ 17-3~    2005       1      1    NA    NA\n# ... with 15 more variables: Goal <dbl>, Assist <dbl>, `Goal + Assist` <dbl>,\n#   `Goal+Penalty kick` <dbl>, `Penalty Kick` <dbl>,\n#   `Penalty Kick Attempted` <dbl>, `Yellow Card` <dbl>, `Red Card` <dbl>,\n#   `Expected Goal` <dbl>, `Non-penalty Expected Goal` <dbl>,\n#   `Expected Assisted Goal` <dbl>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <dbl>,\n#   `Progressive Carries` <dbl>, `Progressive Passes` <dbl>, ...\n\n\n\n\nCheck unique values\n\ndata %>%\n  map_df(.f = \\(x) length(unique(x)))\n\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`\n     <int>  <int>   <int> <int>   <int> <int>   <int>   <int>  <int> <int> <int>\n1     2599    105      10    98       5  2093      27      28    117  1468   272\n# ... with 15 more variables: Goal <int>, Assist <int>, `Goal + Assist` <int>,\n#   `Goal+Penalty kick` <int>, `Penalty Kick` <int>,\n#   `Penalty Kick Attempted` <int>, `Yellow Card` <int>, `Red Card` <int>,\n#   `Expected Goal` <int>, `Non-penalty Expected Goal` <int>,\n#   `Expected Assisted Goal` <int>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <int>,\n#   `Progressive Carries` <int>, `Progressive Passes` <int>, ...\n\n\n\ndata %>%\n  group_by(Nation) %>%\n  count(sort = TRUE) %>%\n  mutate(prop = 100*n/nrow(data))\n\n# A tibble: 105 x 3\n# Groups:   Nation [105]\n   Nation     n  prop\n   <chr>  <int> <dbl>\n 1 ESP      385 13.9 \n 2 FRA      377 13.6 \n 3 GER      231  8.34\n 4 ITA      220  7.95\n 5 ENG      188  6.79\n 6 BRA      106  3.83\n 7 ARG       77  2.78\n 8 POR       72  2.60\n 9 NED       70  2.53\n10 BEL       48  1.73\n# ... with 95 more rows"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day02/index.html#plot-nation-per-league",
    "href": "posts/30-days-charts-challenge-day02/index.html#plot-nation-per-league",
    "title": "30 days chart challenge - day 02",
    "section": "Plot Nation per league",
    "text": "Plot Nation per league\n\ndata %>%\n  select(Nation,\"League\" = Compition) %>%\n  group_by(Nation,League) %>%\n  count(sort = TRUE) %>%\n  filter(n > 20) %>%\n  ggplot(aes(fill = Nation, values = n)) +\n  geom_waffle(\n    aes(colour = Nation),\n    n_rows = 10, \n    size = .5, colour = \"grey50\", \n    flip = TRUE,\n    make_proportional = TRUE\n    ) +\n  facet_wrap(~League, ncol = 5,strip.position = \"bottom\") +\n  #expand_limits(x=c(0,0), y=c(0,0)) +\n  labs(\n    title = \"2022-2023 Top 5 Football Leagues Nationalities\",\n    subtitle = \"Source: https://www.kaggle.com/datasets/joyshil0599/2022-2023-top-5-football-leagues-player-stats\",\n    caption = \"Only countries with more than 20 player in each league\", \n    fill = NULL,\n    colour = NULL) +\n  scale_fill_manual(values = c(\"ALG\" = \"#006331\",\n                               \"ARG\" = \"#70a7d8\",\n                               \"AUT\" =  \"#e62837\",\n                               \"BRA\" = \"#f6d900\",\n                               \"ENG\" = \"white\",\n                               \"ESP\" = \"#c00b1d\",\n                               \"FRA\" = \"#002551\",\n                               \"GER\" = \"black\",\n                               \"ITA\" = \"#0b8dcd\",\n                               \"NED\" = \"orange\",\n                               \"POR\" = \"#e52011\")) + \n  theme_enhance_waffle() +\n  theme_void() +\n  theme(\n    text = element_text(family = \"Segoe UI\"),\n    strip.text.x =  element_text(family = \"Segoe UI\",face = \"italic\",size = 10),\n    strip.background = element_rect(fill = \"grey99\",\n                                    linetype = \"blank\"),\n    plot.title = element_text(family = \"Segoe UI\",hjust = .5,size = 25),\n    plot.subtitle = element_text(family = \"Segoe UI\",hjust = .5,size = 6)\n  )\n\n\n\n\n\nggsave(filename = \"plot_day02.png\",bg = \"white\",dpi = 400,width = 10)\n\nSaving 10 x 5 in image"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day04/index.html",
    "href": "posts/30-days-charts-challenge-day04/index.html",
    "title": "30 days chart challenge - day 04",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(extrafont)\n\nRegistering fonts with R"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day04/index.html#data",
    "href": "posts/30-days-charts-challenge-day04/index.html#data",
    "title": "30 days chart challenge - day 04",
    "section": "Data",
    "text": "Data\n\ndata <- read_csv(\"athlete_events.csv\")\n\nRows: 271116 Columns: 15\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (10): Name, Sex, Team, NOC, Games, Season, City, Sport, Event, Medal\ndbl  (5): ID, Age, Height, Weight, Year\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(data)\n\nRows: 271,116\nColumns: 15\n$ ID     <dbl> 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, ~\n$ Name   <chr> \"A Dijiang\", \"A Lamusi\", \"Gunnar Nielsen Aaby\", \"Edgar Lindenau~\n$ Sex    <chr> \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\"~\n$ Age    <dbl> 24, 23, 24, 34, 21, 21, 25, 25, 27, 27, 31, 31, 31, 31, 33, 33,~\n$ Height <dbl> 180, 170, NA, NA, 185, 185, 185, 185, 185, 185, 188, 188, 188, ~\n$ Weight <dbl> 80, 60, NA, NA, 82, 82, 82, 82, 82, 82, 75, 75, 75, 75, 75, 75,~\n$ Team   <chr> \"China\", \"China\", \"Denmark\", \"Denmark/Sweden\", \"Netherlands\", \"~\n$ NOC    <chr> \"CHN\", \"CHN\", \"DEN\", \"DEN\", \"NED\", \"NED\", \"NED\", \"NED\", \"NED\", ~\n$ Games  <chr> \"1992 Summer\", \"2012 Summer\", \"1920 Summer\", \"1900 Summer\", \"19~\n$ Year   <dbl> 1992, 2012, 1920, 1900, 1988, 1988, 1992, 1992, 1994, 1994, 199~\n$ Season <chr> \"Summer\", \"Summer\", \"Summer\", \"Summer\", \"Winter\", \"Winter\", \"Wi~\n$ City   <chr> \"Barcelona\", \"London\", \"Antwerpen\", \"Paris\", \"Calgary\", \"Calgar~\n$ Sport  <chr> \"Basketball\", \"Judo\", \"Football\", \"Tug-Of-War\", \"Speed Skating\"~\n$ Event  <chr> \"Basketball Men's Basketball\", \"Judo Men's Extra-Lightweight\", ~\n$ Medal  <chr> NA, NA, NA, \"Gold\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,~\n\n\n\n(\n  Brazil_summary <- data %>% \n    filter(Team == \"Brazil\") %>% filter(Season == \"Summer\") %>%\n    distinct(Season, Year, Event, Medal) %>%\n    select(Year,Medal) %>%\n    group_by(Year) %>%\n    count(Medal) %>%\n    pivot_wider(names_from = Medal,values_from = n,values_fill = 0) %>%\n    select(-\"NA\") %>%\n    pivot_longer(cols = -Year,\n                 names_to = \"Medal\",\n                 values_to = \"n\")\n  )\n\n# A tibble: 69 x 3\n# Groups:   Year [23]\n    Year Medal      n\n   <dbl> <chr>  <int>\n 1  1900 Bronze     0\n 2  1900 Gold       0\n 3  1900 Silver     0\n 4  1920 Bronze     1\n 5  1920 Gold       1\n 6  1920 Silver     1\n 7  1924 Bronze     0\n 8  1924 Gold       0\n 9  1924 Silver     0\n10  1932 Bronze     0\n# ... with 59 more rows\n\n\n\n#Data\nBrazil_summary %>%\n  mutate(Medal = factor(Medal,levels = c(\"Gold\",\"Silver\",\"Bronze\"))) %>%\n  #Aesthetics + Geometries\n  ggplot(aes(x = Year, y = n, col = Medal, group = Medal)) +\n  geom_point(size = 4) + \n  geom_line(size = 2) +\n  #Scales customizations\n  scale_x_continuous(breaks = seq(from = 1896,\n                                  to = 2016,\n                                  by = 8)) +\n  scale_y_continuous(breaks = 0:11) +\n  scale_color_manual(values = c(\"#FFD700\",\n                                \"#C0C0C0\",\n                                \"#cd7f32\")) + \n  #Annotations 1\n  annotate(geom = \"text\",\n           label = \"No athletes\\nin the first games\",\n           x = 1918,y = 6,\n           size = 9,\n           family = \"Berlin Sans FB\") +\n  annotate(geom = \"curve\",\n           x = 1905,xend = 1896,\n           y = 6, yend = .5,\n           arrow = arrow()) +\n  annotate(geom = \"rect\",\n           xmin = 2014,xmax = 2018,\n           ymin = 0,ymax = 9,\n           fill = \"green\",alpha = .2\n           ) +\n  annotate(geom = \"text\",\n           label = \"Rio\\n2016\",\n           x = 2016,y = 1.5,\n           family = \"Berlin Sans FB\",col = \"navy\",\n           size = 5) +\n  #Labels\n  labs(title = \"Brazil's medals in the Olympics (1896-2016)\",\n       subtitle = \"Source: https://www.kaggle.com/code/celiomatos/brazil-score-in-olympics/input?select=athlete_events.csv\",\n       y = \"Total of medals\") +\n  #Theme\n  theme(text = element_text(family = \"Berlin Sans FB\"),\n        plot.title = element_text(size = 26,hjust = .5,family = \"Berlin Sans FB\"),\n        plot.subtitle = element_text(size = 9,family = \"Berlin Sans FB\"),\n        panel.background = element_rect(fill = \"white\"),\n        axis.text =  element_text(size = 15),\n        axis.title =  element_text(size = 20))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\ni Please use `linewidth` instead.\n\n\n\n\n\n\nggsave(filename = \"plot_final_day04.png\",width = 12,dpi = 600,bg = \"white\")\n\nSaving 12 x 5 in image"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day03/index.html",
    "href": "posts/30-days-charts-challenge-day03/index.html",
    "title": "30 days chart challenge - day 03",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day03/index.html#data",
    "href": "posts/30-days-charts-challenge-day03/index.html#data",
    "title": "30 days chart challenge - day 03",
    "section": "Data",
    "text": "Data\n\ndata <- read_csv(\"NYC_dogs_clean.csv\")\n\nNew names:\nRows: 121862 Columns: 17\n-- Column specification\n-------------------------------------------------------- Delimiter: \",\" chr\n(9): AnimalName, AnimalGender, AnimalBirthMonth, BreedName, Borough, Cen... dbl\n(8): ...1, X, RowNumber, ZipCode, CommunityDistrict, CityCouncilDistrict...\ni Use `spec()` to retrieve the full column specification for this data. i\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n* `` -> `...1`\n\n\n\nglimpse(data)\n\nRows: 121,862\nColumns: 17\n$ ...1                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,~\n$ X                       <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,~\n$ RowNumber               <dbl> 1753, 2415, 3328, 7537, 8487, 10503, 11682, 12~\n$ AnimalName              <chr> \"SHADOW\", \"ROCCO\", \"LUIGI\", \"PETUNIA\", \"ROMEO\"~\n$ AnimalGender            <chr> \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"~\n$ AnimalBirthMonth        <chr> \"01/01/2000 12:00:00 AM\", \"10/01/2011 12:00:00~\n$ BreedName               <chr> \"Beagle\", \"Boxer\", \"Maltese\", \"Pug\", \"Maltese\"~\n$ Borough                 <chr> \"Brooklyn\", \"Brooklyn\", \"Bronx\", \"Brooklyn\", \"~\n$ ZipCode                 <dbl> 11236, 11210, 10464, 11221, 10451, 11225, 1002~\n$ CommunityDistrict       <dbl> 318, 314, 210, 304, 201, 309, 108, 502, 310, 2~\n$ CensusTract2010         <chr> \"1014\", \"756\", \"516\", \"419\", \"65\", \"800\", \"124~\n$ NTA                     <chr> \"BK50\", \"BK43\", \"BX10\", \"BK78\", \"BX34\", \"BK60\"~\n$ CityCouncilDistrict     <dbl> 46, 45, 13, 34, 17, 40, 5, 50, 43, 14, 2, 22, ~\n$ CongressionalDistrict   <dbl> 8, 9, 14, 7, 15, 9, 12, 11, 11, 13, 12, 14, 8,~\n$ StateSenatorialDistrict <dbl> 19, 17, 34, 18, 32, 20, 28, 23, 22, 33, 28, 12~\n$ LicenseIssuedDate       <chr> \"12/29/2014\", \"01/07/2015\", \"01/17/2015\", \"03/~\n$ LicenseExpiredDate      <chr> \"01/30/2016\", \"01/30/2016\", \"02/02/2016\", \"03/~\n\n\n\ndata %>%\n  group_by(Borough) %>%\n  count(AnimalName,sort = TRUE)\n\n# A tibble: 28,872 x 3\n# Groups:   Borough [5]\n   Borough   AnimalName            n\n   <chr>     <chr>             <int>\n 1 Brooklyn  UNKNOWN             944\n 2 Manhattan UNKNOWN             944\n 3 Queens    NAME NOT PROVIDED   649\n 4 Brooklyn  NAME NOT PROVIDED   462\n 5 Manhattan CHARLIE             390\n 6 Manhattan LUCY                358\n 7 Manhattan LOLA                346\n 8 Queens    UNKNOWN             338\n 9 Manhattan NAME NOT PROVIDED   334\n10 Queens    MAX                 334\n# ... with 28,862 more rows\n\n\n\nnyc_squirrels <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-29/nyc_squirrels.csv\")\n\nRows: 3023 Columns: 36\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (14): unique_squirrel_id, hectare, shift, age, primary_fur_color, highli...\ndbl  (9): long, lat, date, hectare_squirrel_number, zip_codes, community_dis...\nlgl (13): running, chasing, climbing, eating, foraging, kuks, quaas, moans, ...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "posts/30-days-charts-challenge-day11/index.html",
    "href": "posts/30-days-charts-challenge-day11/index.html",
    "title": "30 days chart challenge - day 11",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day11/index.html#data",
    "href": "posts/30-days-charts-challenge-day11/index.html#data",
    "title": "30 days chart challenge - day 11",
    "section": "Data",
    "text": "Data\n\ndata_titles <- read_csv(file = \"titles.csv\")\n\nRows: 3030 Columns: 15\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (8): id, title, type, description, age_certification, genres, production...\ndbl (7): release_year, runtime, seasons, imdb_score, imdb_votes, tmdb_popula...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(data_titles)\n\nRows: 3,030\nColumns: 15\n$ id                   <chr> \"tm77588\", \"tm155702\", \"tm83648\", \"tm3175\", \"ts22~\n$ title                <chr> \"Casablanca\", \"The Wizard of Oz\", \"Citizen Kane\",~\n$ type                 <chr> \"MOVIE\", \"MOVIE\", \"MOVIE\", \"MOVIE\", \"SHOW\", \"MOVI~\n$ description          <chr> \"In Casablanca, Morocco in December 1941, a cynic~\n$ release_year         <dbl> 1943, 1939, 1941, 1945, 1940, 1940, 1946, 1934, 1~\n$ age_certification    <chr> \"PG\", \"G\", \"PG\", NA, NA, \"G\", NA, NA, NA, \"PG-13\"~\n$ runtime              <dbl> 102, 102, 119, 113, 8, 238, 114, 93, 111, 109, 12~\n$ genres               <chr> \"['drama', 'romance', 'war']\", \"['fantasy', 'fami~\n$ production_countries <chr> \"['US']\", \"['US']\", \"['US']\", \"['US']\", \"['US']\",~\n$ seasons              <dbl> NA, NA, NA, NA, 16, NA, NA, NA, NA, NA, NA, NA, N~\n$ imdb_id              <chr> \"tt0034583\", \"tt0032138\", \"tt0033467\", \"tt0037059~\n$ imdb_score           <dbl> 8.5, 8.1, 8.3, 7.5, 7.7, 8.2, 7.9, 7.9, 7.9, 8.3,~\n$ imdb_votes           <dbl> 577842, 406105, 446627, 25589, 859, 319463, 87289~\n$ tmdb_popularity      <dbl> 22.005, 56.631, 19.900, 8.311, 1.400, 27.535, 11.~\n$ tmdb_score           <dbl> 8.167, 7.583, 8.022, 7.000, 10.000, 8.000, 7.700,~"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day11/index.html#analysis",
    "href": "posts/30-days-charts-challenge-day11/index.html#analysis",
    "title": "30 days chart challenge - day 11",
    "section": "Analysis",
    "text": "Analysis\n\ndf <- data_titles %>%\n  filter(type == \"MOVIE\") %>%\n  mutate(genres = str_remove_all(genres, \"\\\\[|\\\\]\")) %>%\n  mutate(genres = str_remove_all(genres,\"\\'\")) %>%\n  separate_longer_delim(genres,\",\") %>%\n  mutate(decade = case_when(\n    release_year < 1910 ~ 1910,\n    release_year < 1920 ~ 1920,\n    release_year < 1930 ~ 1930,\n    release_year < 1940 ~ 1940,\n    release_year < 1950 ~ 1950,\n    release_year < 1960 ~ 1960,\n    release_year < 1970 ~ 1970,\n    release_year < 1980 ~ 1980,\n    release_year < 1990 ~ 1990,\n    release_year < 2000 ~ 2000,\n    release_year < 2010 ~ 2010,\n    release_year < 2020 ~ 2020,\n    release_year < 2030 ~ 2030,\n  )) %>%\n  select(genres, decade)\n\n\ndf %>%\n  mutate(genres = factor(genres)) %>%\n  mutate(genres = fct_lump_min(genres,10,other_level = \"other\")) %>%\n  group_by(genres, decade) %>%\n  count(sort = TRUE)\n\n# A tibble: 340 x 3\n# Groups:   genres, decade [340]\n   genres          decade     n\n   <fct>            <dbl> <int>\n 1 \"documentation\"   2020   212\n 2 \"drama\"           2020   153\n 3 \"documentation\"   2030   125\n 4 \" drama\"          2020   117\n 5 \"comedy\"          2020   107\n 6 \"comedy\"          2010   104\n 7 \"drama\"           2010   100\n 8 \" thriller\"       2020    99\n 9 \" action\"         2020    96\n10 \"drama\"           2000    86\n# ... with 330 more rows\n\n  # ggplot(aes(x = genres, y = n)) +\n  # geom_col() +\n  # facet_wrap(~decade) +\n  # coord_polar() +\n  # theme_void()\n\n\npdata <- data_titles %>%\n  filter(type == \"MOVIE\") %>%\n  mutate(genres = str_remove_all(genres, \"\\\\[|\\\\]\")) %>%\n  mutate(genres = str_remove_all(genres,\"\\'\")) %>%\n  mutate(genres = str_remove_all(genres, \" \")) %>%\n  separate_longer_delim(genres,\",\") %>%\n  mutate(genres = factor(genres)) %>%\n  mutate(genres = fct_lump_n(genres,10,other_level = \"other\")) %>% \n  filter(genres != \"other\") %>%\n  mutate(genres = fct_drop(genres,\"other\")) %>%\n  mutate(genres = fct_infreq(genres,ordered = NA)) %>%\n  mutate(genres = fct_rev(genres)) %>%\n  group_by(genres) %>%\n  count()\n\n\n gg <- pdata %>%\n  ggplot(aes(x = genres, y = n, fill = genres)) +\n  geom_col(alpha = .75) +\n  geom_text(aes(label = n), family = \"serif\",\n            fontface = \"bold\",nudge_y = 25,nudge_x = .1) +\n  scale_y_continuous(limits = c(0,2194)) +\n  coord_polar(theta = \"y\",clip = \"off\") +\n  scale_fill_manual(values = c(\"#10154c\",\n                        \"#2b2684\",\n                        \"#3c56b7\",\n                        \"#7587d9\",\n                        \"#bf9ee3\",\n                        \"#a569cb\",\n                        \"#a8278b\",\n                        \"#90309b\",\n                        \"#663795\",\n                        \"#4f1f5b\")) +\n  labs(title = \"Top 10 movie genres available on HBOmax\",\n       subtitle = \"source: https://www.kaggle.com/datasets/dgoenrique/hbo-max-movies-and-tv-shows\",\n       caption = \"@marceelrf\") +\n  theme_void() +\n  theme(text = element_text(family = \"serif\"),\n        plot.title = element_text(face = \"bold\",size = 25,hjust = .5),\n        plot.subtitle = element_text(face = \"italic\",size = 10),\n        plot.caption = element_text(face = \"bold.italic\",size = 15),\n       plot.background = element_rect(fill = \"#e8e6d1\",linewidth = 0),\n       panel.background = element_rect(fill = \"#e8e6d1\",linewidth = 0,linetype = \"blank\"))\n\n\nggdraw(gg) +\n  draw_image(image = \"squaresociallogo400x400_0.png\",\n             x = .00,y = .25,\n             width = .4,\n             height = .4)\n\n\n\n\n\nggsave(filename = \"day11_finalplot.png\",dpi = 600,bg = \"#e8e6d1\",width = 10)\n\nSaving 10 x 5 in image"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day12/index.html",
    "href": "posts/30-days-charts-challenge-day12/index.html",
    "title": "30 days chart challenge - day 12",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(quantmod)\n\nCarregando pacotes exigidos: xts\nCarregando pacotes exigidos: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nAttaching package: 'xts'\n\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n\nCarregando pacotes exigidos: TTR\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day12/index.html#data",
    "href": "posts/30-days-charts-challenge-day12/index.html#data",
    "title": "30 days chart challenge - day 12",
    "section": "Data",
    "text": "Data\n\ngetSymbols(Symbols = \"TUP\",\n                  src = 'yahoo',\n                  from = \"2018-05-01\",\n                  to = \"2023-04-12\")\n\n[1] \"TUP\"\n\n\n\ndata.frame(TUP$TUP.Adjusted) %>%\n  rownames_to_column(\"Date\") %>%\n  rename(\"Price\" = TUP.Adjusted) %>%\n  mutate(Date = as.Date(Date)) %>%\n  ggplot(aes(x = Date, y = Price)) +\n  geom_line(col = \"#237795\") +\n  geom_area(fill = \"#237795\",alpha = .5) +\n  scale_y_continuous(labels = scales::dollar_format(),\n                     expand = c(0,0)) +\n  scale_x_date(expand = expansion(mult = c(0,0),\n                                  add = c(0,100))) + \n  labs(title = \"Tupperware shares at an all-time low\",\n       subtitle = \"Share price in US dollar\",\n       y = \"\",\n       x = \"\",\n       caption = \"Source: yahoo finance via {quantmod}\") +\n  annotate(geom = \"point\",\n           x = as.Date(\"2023-04-11\"),\n           y = 1.3,\n           col = \"#237795\",\n           size = 2) + \n  annotate(geom = \"text\",label = \"11 Apr\\n$1.30\",\n           x = as.Date(\"2023-07-15\"),\n           y = 3,\n           col = \"#237795\",\n           family = \"serif\", fontface = \"bold\",\n           size = 5) +\n  theme(panel.background = element_rect(fill = \"white\"),\n        panel.grid.major.y = element_line(colour = \"grey50\"),\n        panel.grid.major.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.x = element_line(linewidth = 1),\n        text = element_text(family = \"serif\"),\n        axis.text = element_text(size = 15),\n        plot.title = element_text(face = \"bold\",\n                                  family = \"serif\",size = 25),\n        plot.subtitle = element_text(family = \"serif\",size = 15),\n        plot.caption = element_text(hjust = 0,family = \"serif\",size = 13))\n\n\n\n\n\nggsave(filename = \"day12_finalplot.png\",dpi = 300,bg = \"white\",width = 10)\n\nSaving 10 x 5 in image"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day05/index.html",
    "href": "posts/30-days-charts-challenge-day05/index.html",
    "title": "30 days chart challenge - day 05",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day05/index.html#data",
    "href": "posts/30-days-charts-challenge-day05/index.html#data",
    "title": "30 days chart challenge - day 05",
    "section": "Data",
    "text": "Data\n\ndata <- read_csv(\"gdp.csv\")\n\nRows: 266 Columns: 12\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (12): Country Name, Country Code, 2012, 2013, 2014, 2015, 2016, 2017, 20...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ndata %>%\n  pivot_longer(cols = `2012`:`2021`,\n               names_to = \"Year\",values_to = \"GDP\") %>%\n   mutate(Year = as.numeric(Year),\n          GDP = as.numeric(GDP)) %>% \n  ggplot(aes(x = Year, y = GDP)) +\n  geom_point()\n\nWarning: There was 1 warning in `mutate()`.\ni In argument: `GDP = as.numeric(GDP)`.\nCaused by warning:\n! NAs introduzidos por coerção\n\n\nWarning: Removed 132 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "posts/30-days-charts-challenge-day13/index.html",
    "href": "posts/30-days-charts-challenge-day13/index.html",
    "title": "30 days chart challenge - day 13",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day13/index.html#data",
    "href": "posts/30-days-charts-challenge-day13/index.html#data",
    "title": "30 days chart challenge - day 13",
    "section": "Data",
    "text": "Data\n\nmusics <- read_csv(\"Spotify_Youtube.csv\")\n\nNew names:\nRows: 20718 Columns: 28\n-- Column specification\n-------------------------------------------------------- Delimiter: \",\" chr\n(10): Artist, Url_spotify, Track, Album, Album_type, Uri, Url_youtube, T... dbl\n(16): ...1, Danceability, Energy, Key, Loudness, Speechiness, Acousticne... lgl\n(2): Licensed, official_video\ni Use `spec()` to retrieve the full column specification for this data. i\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n* `` -> `...1`"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day13/index.html#count-nas",
    "href": "posts/30-days-charts-challenge-day13/index.html#count-nas",
    "title": "30 days chart challenge - day 13",
    "section": "Count NA’s",
    "text": "Count NA’s\n\nmusics %>% \n  mutate(across(everything(), is.na)) %>%\n  summary(across(everything(), sum))\n\n    ...1           Artist        Url_spotify       Track        \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:20718     FALSE:20718     FALSE:20718     FALSE:20718    \n                                                                \n   Album         Album_type         Uri          Danceability   \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:20718     FALSE:20718     FALSE:20718     FALSE:20716    \n                                                 TRUE :2        \n   Energy           Key           Loudness       Speechiness    \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:20716     FALSE:20716     FALSE:20716     FALSE:20716    \n TRUE :2         TRUE :2         TRUE :2         TRUE :2        \n Acousticness    Instrumentalness  Liveness        Valence       \n Mode :logical   Mode :logical    Mode :logical   Mode :logical  \n FALSE:20716     FALSE:20716      FALSE:20716     FALSE:20716    \n TRUE :2         TRUE :2          TRUE :2         TRUE :2        \n   Tempo         Duration_ms     Url_youtube       Title        \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:20716     FALSE:20716     FALSE:20248     FALSE:20248    \n TRUE :2         TRUE :2         TRUE :470       TRUE :470      \n  Channel          Views           Likes          Comments      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:20248     FALSE:20248     FALSE:20177     FALSE:20149    \n TRUE :470       TRUE :470       TRUE :541       TRUE :569      \n Description      Licensed       official_video    Stream       \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:19728     FALSE:20248     FALSE:20248     FALSE:20142    \n TRUE :990       TRUE :470       TRUE :470       TRUE :576      \n\n\n\nmrf_songs <- musics %>%\n  filter(str_detect(Artist, \"Kings of Leon|The Killers|M83|Dua Lipa|Fleetwood Mac\"))\n\n\nmrf_songs %>%\n  select(Artist,Track,Danceability:Duration_ms) %>%\n  pivot_longer(cols = Danceability:Duration_ms,\n               names_to = \"Params\",\n               values_to = \"Vals\") %>%\n  ggplot(aes(x = Artist, y = Vals, col = Artist)) +\n  geom_jitter(size = 3, alpha = .8) +\n  facet_wrap(~Params,scales = \"free\") +\n  labs(title = \"Spotify statistic about the top 10 songs of my top 5 favorite artists.\",\n       subtitle = \"Source: https://www.kaggle.com/datasets/salvatorerastelli/spotify-and-youtube\",\n       x = \"\",\n       y = \"\") +\n  #scale_y_continuous(expand = c(0,0)) +\n  scale_color_manual(values = c(\"#e187a8\",\n                                \"#efd893\",\n                                \"#749e97\",\n                                \"#2880bc\",\n                                \"#ab4841\")) +\n  theme(text = element_text(family = \"serif\"),\n        plot.title = element_text(family = \"serif\",face = \"bold\",size = 18,hjust = .5),\n        plot.subtitle = element_text(family = \"serif\",face = \"italic\",size = 8),\n        plot.background = element_rect(fill = \"white\"),\n        panel.background = element_rect(fill = \"white\"),\n        strip.text = element_text(face = \"bold\",size = 12),\n        panel.grid.major.y = element_line(colour = \"grey85\"),\n        panel.grid.major.x = element_blank(),\n        axis.text.y = element_text(size = 10,colour = \"black\"),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_text(face = \"bold\",size = 12),\n        legend.text = element_text(face = \"italic\",size = 10))\n\n\n\n\n\nggsave(filename = \"day13_finalplot.png\",dpi = 600,bg = \"white\",width = 10)\n\nSaving 10 x 5 in image"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day14/index.html",
    "href": "posts/30-days-charts-challenge-day14/index.html",
    "title": "30 days chart challenge - day 14",
    "section": "",
    "text": "In this day I used Observablehq as a new tool.\nCheck this link to full code:\nhttps://observablehq.com/d/587382c0bf1914c0\nSee you!"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day15/index.html",
    "href": "posts/30-days-charts-challenge-day15/index.html",
    "title": "30 days chart challenge - day 15",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(brasileirao)\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nlibrary(extrafont)\n\nRegistering fonts with R"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day15/index.html#data",
    "href": "posts/30-days-charts-challenge-day15/index.html#data",
    "title": "30 days chart challenge - day 15",
    "section": "Data",
    "text": "Data\n\nurl <- \"https://en.wikipedia.org/wiki/2019_Campeonato_Brasileiro_S%C3%A9rie_A\"\n\n\n\n\nurl %>% \n  read_html() %>% \n  html_node(xpath = '//*[@id=\"mw-content-text\"]/div[1]/table[7]') %>% \n  html_table(fill = TRUE)\n\n# A tibble: 20 x 11\n     Pos Team              Pld     W     D     L    GF    GA GD      Pts Quali~1\n   <int> <chr>           <int> <int> <int> <int> <int> <int> <chr> <int> <chr>  \n 1     1 Flamengo (C)       38    28     6     4    86    37 +49      90 \"Quali~\n 2     2 Santos             38    22     8     8    60    33 +27      74 \"Quali~\n 3     3 Palmeiras          38    21    11     6    61    32 +29      74 \"Quali~\n 4     4 Grêmio             38    19     8    11    64    39 +25      65 \"Quali~\n 5     5 Athletico Para~    38    18    10    10    51    32 +19      64 \"Quali~\n 6     6 São Paulo          38    17    12     9    39    30 +9       63 \"Quali~\n 7     7 Internacional      38    16     9    13    44    39 +5       57 \"Quali~\n 8     8 Corinthians        38    14    14    10    42    34 +8       56 \"Quali~\n 9     9 Fortaleza          38    15     8    15    50    49 +1       53 \"Quali~\n10    10 Goiás              38    15     7    16    46    64 -18      52 \"Quali~\n11    11 Bahia              38    12    13    13    44    43 +1       49 \"Quali~\n12    12 Vasco da Gama      38    12    13    13    39    45 -6       49 \"Quali~\n13    13 Atlético Minei~    38    13     9    16    45    49 -4       48 \"Quali~\n14    14 Fluminense         38    12    10    16    38    46 -8       46 \"Quali~\n15    15 Botafogo           38    13     4    21    31    45 -14      43 \"\"     \n16    16 Ceará              38    10     9    19    36    41 -5       39 \"\"     \n17    17 Cruzeiro (R)       38     7    15    16    27    46 -19      36 \"Releg~\n18    18 CSA (R)            38     8     8    22    24    58 -34      32 \"Releg~\n19    19 Chapecoense (R)    38     7    11    20    31    52 -21      32 \"Releg~\n20    20 Avaí (R)           38     3    11    24    18    62 -44      20 \"Releg~\n# ... with abbreviated variable name 1: `Qualification or relegation`\n\nfinal_table <- list()\ntindex <- c(2,2,3,4,4,5,5,\n            6,6,6,9,9,8,7,7,7,7)\n\nfor(i in 1:17){\n  j <- 2005 + i\n  url <- glue::glue(\"https://en.wikipedia.org/wiki/{j}_Campeonato_Brasileiro_S%C3%A9rie_A\")\n  p1 <- tindex[i]\n  \n  \n  final_table[[i]] <- url %>% \n    read_html() %>% \n    html_node(xpath = glue::glue('//*[@id=\"mw-content-text\"]/div[1]/table[{p1}]')) %>% \n    html_table(fill = TRUE)\n  \n  print(j)\n}\n\n[1] 2006\n[1] 2007\n[1] 2008\n[1] 2009\n[1] 2010\n[1] 2011\n[1] 2012\n[1] 2013\n[1] 2014\n[1] 2015\n[1] 2016\n[1] 2017\n[1] 2018\n[1] 2019\n[1] 2020\n[1] 2021\n[1] 2022\n\n\n\nnames(final_table) <- 2006:2022\n\n(tab <- final_table %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\(C\\\\)\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\(R\\\\)\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\[c\\\\]\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace_all(Team, \" \",\"_\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = fix_names(Team))) %>%\n  map(.f = \\(x) x %>% select(Team,GD)) %>%\n  map_df(~as.data.frame(.x),.id = \"id\") %>% \n  #Fix teams names\n  mutate(Team = str_replace(Team,\"América_Mineiro_\",\"América_Mineiro\")) %>%\n  mutate(Team = str_replace(Team,\"Athletico_Paranaense|\nAtlético_Paranaense\",\"Athletico PR\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Goianiense_\",\"Atlético_Goianiense\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Mineiro_\",\"Atlético_Mineiro\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Goianiense_\",\"Atlético_Goianiense\")) %>%\n  mutate(Team = str_replace(Team,\"Avaí_\",\"Avaí\")) %>%\n  mutate(Team = str_replace(Team,\"Bahia_\",\"Bahia\")) %>%\n  mutate(Team = str_replace(Team,\"Botafogo_\",\"Botafogo\")) %>%\n  mutate(Team = str_replace(Team,\"CSA_\",\"CSA\")) %>%\n  mutate(Team = str_replace(Team,\"Ceará_\",\"Ceará\")) %>%\n  mutate(Team = str_replace(Team,\"Chapecoense_\",\"Chapecoense\")) %>%\n  mutate(Team = str_replace(Team,\"Corinthians_\",\"Corinthians\")) %>%\n  mutate(Team = str_replace(Team,\"Coritiba_\",\"Coritiba\")) %>%\n  mutate(Team = str_replace(Team,\"Vasco_da_Gama_\",\"Vasco\")) %>%\n  mutate(Team = str_replace(Team,\"Vasco_da_Gama\",\"Vasco\")) %>%\n  mutate(Team = str_replace(Team,\"Sport_do_Recife\",\"Sport\")) %>%\n  mutate(Team = str_replace(Team,\"Sport_Recife\",\"Sport\")) %>%\n  mutate(Team = str_replace(Team, \"_$\",\"\")) %>%\n  mutate(Team = str_replace_all(Team, \"_\",\" \")) %>%\n  mutate(GD = str_replace(GD, pattern = \"\\\\+\",\"\")) %>%\n  mutate(GD = str_replace(GD,\n                          pattern = regex(\"\\\\D+\",negate = TRUE),\n                          replacement = \"-\")) %>%\n    mutate(GD = as.numeric(GD))\n  )\n\nWarning: There was 1 warning in `mutate()`.\ni In argument: `GD = str_replace(GD, pattern = regex(\"\\\\D+\", negate = TRUE),\n  replacement = \"-\")`.\nCaused by warning in `stri_opts_regex()`:\n! Unknown option to `stri_opts_regex`.\n\n\n      id                Team  GD\n1   2006           São Paulo  34\n2   2006       Internacional  16\n3   2006              Grêmio  19\n4   2006              Santos  21\n5   2006              Paraná   7\n6   2006               Vasco   7\n7   2006         Figueirense  13\n8   2006               Goiás  14\n9   2006         Corinthians  -5\n10  2006            Cruzeiro   7\n11  2006            Flamengo  -4\n12  2006            Botafogo   2\n13  2006        Athletico PR  -1\n14  2006           Juventude -10\n15  2006          Fluminense -10\n16  2006           Palmeiras -12\n17  2006         Ponte Preta -20\n18  2006           Fortaleza -23\n19  2006         São Caetano -16\n20  2006          Santa Cruz -34\n21  2007           São Paulo  36\n22  2007              Santos  10\n23  2007            Flamengo   6\n24  2007          Fluminense  18\n25  2007            Cruzeiro  14\n26  2007              Grêmio   1\n27  2007           Palmeiras   1\n28  2007    Atlético Mineiro  12\n29  2007            Botafogo   4\n30  2007               Vasco  11\n31  2007       Internacional   5\n32  2007 Atlético Paranaense   1\n33  2007         Figueirense   1\n34  2007               Sport  -1\n35  2007             Náutico   3\n36  2007               Goiás -13\n37  2007         Corinthians -10\n38  2007              Paraná -22\n39  2007           Juventude -22\n40  2007          América RN -56\n41  2008           São Paulo  30\n42  2008              Grêmio  24\n43  2008            Cruzeiro  15\n44  2008           Palmeiras  10\n45  2008            Flamengo  19\n46  2008       Internacional   1\n47  2008            Botafogo   7\n48  2008               Goiás  10\n49  2008            Coritiba   7\n50  2008             Vitória   4\n51  2008               Sport   3\n52  2008    Atlético Mineiro -11\n53  2008 Atlético Paranaense  -9\n54  2008          Fluminense   1\n55  2008              Santos  -9\n56  2008             Náutico -10\n57  2008         Figueirense -23\n58  2008               Vasco -16\n59  2008          Portuguesa -22\n60  2008            Ipatinga -29\n61  2009            Flamengo  14\n62  2009       Internacional  21\n63  2009           São Paulo  15\n64  2009            Cruzeiro   5\n65  2009           Palmeiras  13\n66  2009                Avaí   9\n67  2009    Atlético Mineiro  -1\n68  2009              Grêmio  21\n69  2009               Goiás  -1\n70  2009         Corinthians  -4\n71  2009             Barueri   7\n72  2009              Santos   0\n73  2009             Vitória  -6\n74  2009 Atlético Paranaense  -7\n75  2009            Botafogo  -6\n76  2009          Fluminense  -7\n77  2009            Coritiba -12\n78  2009         Santo André -15\n79  2009             Náutico -23\n80  2009               Sport -23\n81  2010          Fluminense  26\n82  2010            Cruzeiro  15\n83  2010         Corinthians  24\n84  2010              Grêmio  25\n85  2010 Atlético Paranaense  -2\n86  2010            Botafogo  12\n87  2010       Internacional   7\n88  2010              Santos  13\n89  2010           São Paulo   0\n90  2010           Palmeiras  -1\n91  2010               Vasco  -2\n92  2010               Ceará  -9\n93  2010    Atlético Mineiro -12\n94  2010            Flamengo  -3\n95  2010                Avaí  -9\n96  2010 Atlético Goianiense  -6\n97  2010             Vitória  -6\n98  2010             Guarani -20\n99  2010               Goiás -27\n100 2010             Barueri -25\n101 2011         Corinthians  17\n102 2011               Vasco  17\n103 2011          Fluminense   9\n104 2011            Flamengo  12\n105 2011       Internacional  14\n106 2011           São Paulo  11\n107 2011         Figueirense   1\n108 2011            Coritiba  16\n109 2011            Botafogo   3\n110 2011              Santos   0\n111 2011           Palmeiras   4\n112 2011              Grêmio  -8\n113 2011 Atlético Goianiense   5\n114 2011               Bahia  -6\n115 2011    Atlético Mineiro -10\n116 2011            Cruzeiro  -3\n117 2011 Atlético Paranaense -17\n118 2011               Ceará -17\n119 2011     América Mineiro -18\n120 2011                Avaí -30\n121 2012          Fluminense  28\n122 2012    Atlético Mineiro  27\n123 2012              Grêmio  23\n124 2012           São Paulo  22\n125 2012               Vasco   1\n126 2012         Corinthians  12\n127 2012            Botafogo  10\n128 2012              Santos   6\n129 2012            Cruzeiro  -4\n130 2012       Internacional   4\n131 2012            Flamengo  -7\n132 2012             Náutico  -7\n133 2012            Coritiba  -7\n134 2012         Ponte Preta  -7\n135 2012               Bahia  -4\n136 2012          Portuguesa  -2\n137 2012               Sport -17\n138 2012           Palmeiras -15\n139 2012 Atlético Goianiense -30\n140 2012         Figueirense -33\n141 2013            Cruzeiro  40\n142 2013              Grêmio   7\n143 2013 Atlético Paranaense  16\n144 2013            Botafogo  14\n145 2013             Vitória   6\n146 2013               Goiás   4\n147 2013              Santos  13\n148 2013    Atlético Mineiro  11\n149 2013           São Paulo  -1\n150 2013         Corinthians   5\n151 2013            Coritiba  -3\n152 2013               Bahia  -8\n153 2013       Internacional  -1\n154 2013            Criciúma -14\n155 2013          Fluminense  -4\n156 2013            Flamengo  -3\n157 2013          Portuguesa   4\n158 2013               Vasco -11\n159 2013         Ponte Preta -18\n160 2013             Náutico -57\n161 2014            Cruzeiro  29\n162 2014           São Paulo  19\n163 2014       Internacional  12\n164 2014         Corinthians  18\n165 2014    Atlético Mineiro  13\n166 2014          Fluminense  19\n167 2014              Grêmio  12\n168 2014 Atlético Paranaense   1\n169 2014              Santos   7\n170 2014            Flamengo  -1\n171 2014               Sport -10\n172 2014               Goiás  -2\n173 2014         Figueirense -10\n174 2014            Coritiba  -3\n175 2014         Chapecoense  -5\n176 2014           Palmeiras -25\n177 2014             Vitória -17\n178 2014               Bahia -12\n179 2014            Botafogo -17\n180 2014            Criciúma -28\n181 2015         Corinthians  40\n182 2015    Atlético Mineiro  18\n183 2015              Grêmio  20\n184 2015           São Paulo   6\n185 2015       Internacional   1\n186 2015               Sport  15\n187 2015              Santos  18\n188 2015            Cruzeiro   9\n189 2015           Palmeiras   9\n190 2015 Atlético Paranaense  -5\n191 2015         Ponte Preta   1\n192 2015            Flamengo  -8\n193 2015          Fluminense  -9\n194 2015         Chapecoense -10\n195 2015            Coritiba -11\n196 2015         Figueirense -14\n197 2015                Avaí -22\n198 2015               Vasco -26\n199 2015               Goiás -10\n200 2015           Joinville -22\n201 2016           Palmeiras  30\n202 2016              Santos  24\n203 2016            Flamengo  17\n204 2016    Atlético Mineiro   8\n205 2016            Botafogo   4\n206 2016 Atlético Paranaense   6\n207 2016         Corinthians   6\n208 2016         Ponte Preta  -4\n209 2016              Grêmio  -3\n210 2016           São Paulo   8\n211 2016         Chapecoense  -7\n212 2016            Cruzeiro  -1\n213 2016          Fluminense   0\n214 2016               Sport  -6\n215 2016            Coritiba  -1\n216 2016             Vitória  -2\n217 2016       Internacional  -6\n218 2016         Figueirense -20\n219 2016          Santa Cruz -24\n220 2016     América Mineiro -35\n221 2017         Corinthians  20\n222 2017           Palmeiras  16\n223 2017              Santos  10\n224 2017              Grêmio  19\n225 2017            Cruzeiro   8\n226 2017            Flamengo  11\n227 2017               Vasco  -7\n228 2017         Chapecoense  -2\n229 2017    Atlético Mineiro   3\n230 2017            Botafogo   3\n231 2017 Atlético Paranaense   2\n232 2017               Bahia   2\n233 2017           São Paulo  -1\n234 2017          Fluminense  -3\n235 2017               Sport -12\n236 2017             Vitória  -8\n237 2017            Coritiba  -9\n238 2017                Avaí -19\n239 2017         Ponte Preta -15\n240 2017 Atlético Goianiense -18\n241 2018           Palmeiras  38\n242 2018            Flamengo  30\n243 2018       Internacional  22\n244 2018              Grêmio  21\n245 2018           São Paulo  12\n246 2018    Atlético Mineiro  13\n247 2018 Atlético Paranaense  17\n248 2018            Cruzeiro   0\n249 2018            Botafogo  -8\n250 2018              Santos   6\n251 2018               Bahia  -2\n252 2018          Fluminense -14\n253 2018         Corinthians  -1\n254 2018         Chapecoense -16\n255 2018               Ceará  -6\n256 2018               Vasco  -7\n257 2018     América Mineiro -17\n258 2018               Sport -22\n259 2018             Vitória -27\n260 2018              Paraná -39\n261 2019            Flamengo  49\n262 2019              Santos  27\n263 2019           Palmeiras  29\n264 2019              Grêmio  25\n265 2019        Athletico PR  19\n266 2019           São Paulo   9\n267 2019       Internacional   5\n268 2019         Corinthians   8\n269 2019           Fortaleza   1\n270 2019               Goiás -18\n271 2019               Bahia   1\n272 2019               Vasco  -6\n273 2019    Atlético Mineiro  -4\n274 2019          Fluminense  -8\n275 2019            Botafogo -14\n276 2019               Ceará  -5\n277 2019            Cruzeiro -19\n278 2019                 CSA -34\n279 2019         Chapecoense -21\n280 2019                Avaí -44\n281 2020            Flamengo  20\n282 2020       Internacional  26\n283 2020    Atlético Mineiro  19\n284 2020           São Paulo  18\n285 2020          Fluminense  13\n286 2020              Grêmio  13\n287 2020           Palmeiras  14\n288 2020              Santos   1\n289 2020        Athletico PR   2\n290 2020 Red Bull Bragantino  10\n291 2020               Ceará   3\n292 2020         Corinthians   0\n293 2020 Atlético Goianiense  -5\n294 2020               Bahia -11\n295 2020               Sport -19\n296 2020           Fortaleza -10\n297 2020               Vasco -19\n298 2020               Goiás -22\n299 2020            Coritiba -23\n300 2020            Botafogo -30\n301 2021    Atlético Mineiro  33\n302 2021            Flamengo  33\n303 2021           Palmeiras  15\n304 2021           Fortaleza  -1\n305 2021         Corinthians   4\n306 2021 Red Bull Bragantino   9\n307 2021          Fluminense   0\n308 2021     América Mineiro   4\n309 2021 Atlético Goianiense  -3\n310 2021              Santos  -5\n311 2021               Ceará   1\n312 2021       Internacional   2\n313 2021           São Paulo  -8\n314 2021        Athletico PR  -4\n315 2021              Cuiabá  -3\n316 2021           Juventude  -8\n317 2021              Grêmio  -7\n318 2021               Bahia  -9\n319 2021               Sport -13\n320 2021         Chapecoense -40\n321 2022           Palmeiras  39\n322 2022       Internacional  27\n323 2022          Fluminense  22\n324 2022         Corinthians   8\n325 2022            Flamengo  21\n326 2022        Athletico PR   0\n327 2022    Atlético Mineiro   8\n328 2022           Fortaleza   7\n329 2022           São Paulo  13\n330 2022     América Mineiro   0\n331 2022            Botafogo  -2\n332 2022              Santos   3\n333 2022               Goiás -13\n334 2022 Red Bull Bragantino -10\n335 2022            Coritiba -21\n336 2022              Cuiabá -11\n337 2022               Ceará  -7\n338 2022 Atlético Goianiense -18\n339 2022                Avaí -26\n340 2022           Juventude -40\n\n\n\nTeam_oreder <- tab %>%\n  group_by(Team) %>%\n  count(sort = TRUE) %>%\n  pull(Team)\n\ncol1 <- c(\"#DE3939\", \"#948E8E\", \"#0357D6\", \"#FEFFE5\")\n\ntab %>%\n  mutate(Team = factor(Team, levels = rev(Team_oreder)),\n         Class = case_when(\n           GD > 0 ~ \"positive\",\n           GD < 0 ~ \"negative\",\n           TRUE ~ \"neutral\"\n         )) %>%\n  # mutate(Diff = abs(Pos_max - Pos_min)) %>%\n  # mutate(Team = fct_reorder2(Team, (Diff),(Pos_max))) %>%\n  ggplot(aes(x = (id), y = Team, fill = Class))+\n  geom_tile(col = \"black\") +\n  scale_fill_manual(values = c(\"positive\" = col1[1],\n                               \"negative\" = col1[3],\n                               \"neutral\" = col1[2])) +\n  labs(x = \"\",y= \"\",\n       title = \"Did your team have a positive goal difference?\",\n       subtitle = \"Gol differences of the teams in the Brazilian Serie A (2006~2022). Data from wikipedia.\") +\n  theme_bw() +\n  theme(text = element_text(family = \"Book Antiqua\"),\n        panel.grid.minor = element_blank(),\n        axis.text = element_text(face = \"bold\",size = 10),\n        plot.title = element_text(face = \"bold\",size = 22),\n        panel.grid.major = element_blank(),\n        axis.ticks = element_blank(),\n        plot.background = element_rect(fill = col1[4]),\n        legend.background = element_rect(fill = col1[4]),\n        legend.title = element_blank())\n\n\n\n\n\nggsave(filename = \"day15_finalplot.png\",dpi = 600,width = 12,height = 10)"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day15/test.html",
    "href": "posts/30-days-charts-challenge-day15/test.html",
    "title": "30 days chart challenge - day 15",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(brasileirao)\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day15/test.html#data",
    "href": "posts/30-days-charts-challenge-day15/test.html#data",
    "title": "30 days chart challenge - day 15",
    "section": "Data",
    "text": "Data\n\nurl <- \"https://en.wikipedia.org/wiki/2019_Campeonato_Brasileiro_S%C3%A9rie_A\"\n\n\n\n\nurl %>% \n  read_html() %>% \n  html_node(xpath = '//*[@id=\"mw-content-text\"]/div[1]/table[7]') %>% \n  html_table(fill = TRUE)\n\n# A tibble: 20 x 11\n     Pos Team              Pld     W     D     L    GF    GA GD      Pts Quali~1\n   <int> <chr>           <int> <int> <int> <int> <int> <int> <chr> <int> <chr>  \n 1     1 Flamengo (C)       38    28     6     4    86    37 +49      90 \"Quali~\n 2     2 Santos             38    22     8     8    60    33 +27      74 \"Quali~\n 3     3 Palmeiras          38    21    11     6    61    32 +29      74 \"Quali~\n 4     4 Grêmio             38    19     8    11    64    39 +25      65 \"Quali~\n 5     5 Athletico Para~    38    18    10    10    51    32 +19      64 \"Quali~\n 6     6 São Paulo          38    17    12     9    39    30 +9       63 \"Quali~\n 7     7 Internacional      38    16     9    13    44    39 +5       57 \"Quali~\n 8     8 Corinthians        38    14    14    10    42    34 +8       56 \"Quali~\n 9     9 Fortaleza          38    15     8    15    50    49 +1       53 \"Quali~\n10    10 Goiás              38    15     7    16    46    64 -18      52 \"Quali~\n11    11 Bahia              38    12    13    13    44    43 +1       49 \"Quali~\n12    12 Vasco da Gama      38    12    13    13    39    45 -6       49 \"Quali~\n13    13 Atlético Minei~    38    13     9    16    45    49 -4       48 \"Quali~\n14    14 Fluminense         38    12    10    16    38    46 -8       46 \"Quali~\n15    15 Botafogo           38    13     4    21    31    45 -14      43 \"\"     \n16    16 Ceará              38    10     9    19    36    41 -5       39 \"\"     \n17    17 Cruzeiro (R)       38     7    15    16    27    46 -19      36 \"Releg~\n18    18 CSA (R)            38     8     8    22    24    58 -34      32 \"Releg~\n19    19 Chapecoense (R)    38     7    11    20    31    52 -21      32 \"Releg~\n20    20 Avaí (R)           38     3    11    24    18    62 -44      20 \"Releg~\n# ... with abbreviated variable name 1: `Qualification or relegation`\n\nfinal_table <- list()\ntindex <- c(2,2,3,4,4,5,5,\n            6,6,6,9,9,8,7,7,7,7)\n\nfor(i in 1:17){\n  j <- 2005 + i\n  url <- glue::glue(\"https://en.wikipedia.org/wiki/{j}_Campeonato_Brasileiro_S%C3%A9rie_A\")\n  p1 <- tindex[i]\n  \n  \n  final_table[[i]] <- url %>% \n    read_html() %>% \n    html_node(xpath = glue::glue('//*[@id=\"mw-content-text\"]/div[1]/table[{p1}]')) %>% \n    html_table(fill = TRUE)\n  \n  print(j)\n}\n\n[1] 2006\n[1] 2007\n[1] 2008\n[1] 2009\n[1] 2010\n[1] 2011\n[1] 2012\n[1] 2013\n[1] 2014\n[1] 2015\n[1] 2016\n[1] 2017\n[1] 2018\n[1] 2019\n[1] 2020\n[1] 2021\n[1] 2022\n\n\n\ntab <- final_table %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\(C\\\\)\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = fix_names(Team))) %>%\n  map(.f = \\(x) x %>% select(Pos,Team)) %>%\n  reduce(.f = bind_rows)"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day09/index.html",
    "href": "posts/30-days-charts-challenge-day09/index.html",
    "title": "30 days chart challenge - day 09",
    "section": "",
    "text": "library(tidyverse)\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(brasileirao)\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nlibrary(extrafont)\n\nRegistering fonts with R"
  },
  {
    "objectID": "posts/30-days-charts-challenge-day09/index.html#data",
    "href": "posts/30-days-charts-challenge-day09/index.html#data",
    "title": "30 days chart challenge - day 09",
    "section": "Data",
    "text": "Data\n\nurl <- \"https://en.wikipedia.org/wiki/2019_Campeonato_Brasileiro_S%C3%A9rie_A\"\n\n\n\n\nurl %>% \n  read_html() %>% \n  html_node(xpath = '//*[@id=\"mw-content-text\"]/div[1]/table[7]') %>% \n  html_table(fill = TRUE)\n\n# A tibble: 20 x 11\n     Pos Team              Pld     W     D     L    GF    GA GD      Pts Quali~1\n   <int> <chr>           <int> <int> <int> <int> <int> <int> <chr> <int> <chr>  \n 1     1 Flamengo (C)       38    28     6     4    86    37 +49      90 \"Quali~\n 2     2 Santos             38    22     8     8    60    33 +27      74 \"Quali~\n 3     3 Palmeiras          38    21    11     6    61    32 +29      74 \"Quali~\n 4     4 Grêmio             38    19     8    11    64    39 +25      65 \"Quali~\n 5     5 Athletico Para~    38    18    10    10    51    32 +19      64 \"Quali~\n 6     6 São Paulo          38    17    12     9    39    30 +9       63 \"Quali~\n 7     7 Internacional      38    16     9    13    44    39 +5       57 \"Quali~\n 8     8 Corinthians        38    14    14    10    42    34 +8       56 \"Quali~\n 9     9 Fortaleza          38    15     8    15    50    49 +1       53 \"Quali~\n10    10 Goiás              38    15     7    16    46    64 -18      52 \"Quali~\n11    11 Bahia              38    12    13    13    44    43 +1       49 \"Quali~\n12    12 Vasco da Gama      38    12    13    13    39    45 -6       49 \"Quali~\n13    13 Atlético Minei~    38    13     9    16    45    49 -4       48 \"Quali~\n14    14 Fluminense         38    12    10    16    38    46 -8       46 \"Quali~\n15    15 Botafogo           38    13     4    21    31    45 -14      43 \"\"     \n16    16 Ceará              38    10     9    19    36    41 -5       39 \"\"     \n17    17 Cruzeiro (R)       38     7    15    16    27    46 -19      36 \"Releg~\n18    18 CSA (R)            38     8     8    22    24    58 -34      32 \"Releg~\n19    19 Chapecoense (R)    38     7    11    20    31    52 -21      32 \"Releg~\n20    20 Avaí (R)           38     3    11    24    18    62 -44      20 \"Releg~\n# ... with abbreviated variable name 1: `Qualification or relegation`\n\nfinal_table <- list()\ntindex <- c(2,2,3,4,4,5,5,\n            6,6,6,9,9,8,7,7,7,7)\n\nfor(i in 1:17){\n  j <- 2005 + i\n  url <- glue::glue(\"https://en.wikipedia.org/wiki/{j}_Campeonato_Brasileiro_S%C3%A9rie_A\")\n  p1 <- tindex[i]\n  \n  \n  final_table[[i]] <- url %>% \n    read_html() %>% \n    html_node(xpath = glue::glue('//*[@id=\"mw-content-text\"]/div[1]/table[{p1}]')) %>% \n    html_table(fill = TRUE)\n  \n  print(j)\n}\n\n[1] 2006\n[1] 2007\n[1] 2008\n[1] 2009\n[1] 2010\n[1] 2011\n[1] 2012\n[1] 2013\n[1] 2014\n[1] 2015\n[1] 2016\n[1] 2017\n[1] 2018\n[1] 2019\n[1] 2020\n[1] 2021\n[1] 2022\n\n\n\ntab <- final_table %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\(C\\\\)\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\(R\\\\)\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace(Team, \"\\\\[c\\\\]\",\"\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = str_replace_all(Team, \" \",\"_\"))) %>%\n  map(.f = \\(x) x %>% mutate(Team = fix_names(Team))) %>%\n  map(.f = \\(x) x %>% select(Pos,Team)) %>%\n  reduce(.f = bind_rows) %>%\n  #Fix teams names\n  mutate(Team = str_replace(Team,\"América_Mineiro_\",\"América_Mineiro\")) %>%\n  mutate(Team = str_replace(Team,\"Athletico_Paranaense| \nAtlético_Paranaense\",\"Athletico PR\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Goianiense_\",\"Atlético_Goianiense\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Mineiro_\",\"Atlético_Mineiro\")) %>%\n  mutate(Team = str_replace(Team,\"Atlético_Goianiense_\",\"Atlético_Goianiense\")) %>%\n  mutate(Team = str_replace(Team,\"Avaí_\",\"Avaí\")) %>%\n  mutate(Team = str_replace(Team,\"Bahia_\",\"Bahia\")) %>%\n  mutate(Team = str_replace(Team,\"Botafogo_\",\"Botafogo\")) %>%\n  mutate(Team = str_replace(Team,\"CSA_\",\"CSA\")) %>%\n  mutate(Team = str_replace(Team,\"Ceará_\",\"Ceará\")) %>%\n  mutate(Team = str_replace(Team,\"Chapecoense_\",\"Chapecoense\")) %>%\n  mutate(Team = str_replace(Team,\"Corinthians_\",\"Corinthians\")) %>%\n  mutate(Team = str_replace(Team,\"Coritiba_\",\"Coritiba\")) %>%\n  mutate(Team = str_replace(Team,\"Vasco_da_Gama_\",\"Vasco\")) %>%\n  mutate(Team = str_replace(Team,\"Vasco_da_Gama\",\"Vasco\")) %>%\n  mutate(Team = str_replace(Team,\"Sport_do_Recife\",\"Sport\")) %>%\n  mutate(Team = str_replace(Team,\"Sport_Recife\",\"Sport\")) %>%\n  mutate(Team = str_replace(Team, \"_$\",\"\")) %>%\n  mutate(Team = str_replace_all(Team, \"_\",\" \"))\n\n\ntab %>%\n  group_by(Team) %>%\n  summarise(Pos_min = max(Pos),\n            Pos_max = min(Pos)) %>%\n  mutate(Team = factor(Team)) %>%\n  mutate(Diff = abs(Pos_max - Pos_min)) %>%\n  mutate(Team = fct_reorder2(Team, (Diff),(Pos_max))) %>%\n  ggplot(aes(x = (Team))) +\n  geom_linerange(aes(ymin = Pos_min, ymax = Pos_max),\n                 size = 2, alpha = 0.25) +\n  geom_point(aes(y = Pos_min), col = \"dodgerblue\",size = 2,alpha = .75) +\n  geom_point(aes(y = Pos_max), col = \"red\",size = 2,alpha = .75) +\n  scale_y_reverse(n.breaks = 20) +\n  labs(x = \"\",y= \"\",\n       title = \"Range of positions of the teams in the Brazilian Serie A (2006~2022).\",\n       subtitle = \"Data from wikipedia\") +\n  coord_flip() +\n  theme_bw() +\n  theme(text = element_text(family = \"Book Antiqua\"),\n        panel.grid.minor = element_blank(),\n        axis.text = element_text(face = \"bold\",size = 14),\n        plot.title = element_text(face = \"bold\",size = 22),\n        panel.grid.major.y = element_blank(),\n        axis.ticks = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\ni Please use `linewidth` instead.\n\n\n\n\n\n\nggsave(filename = \"day09_finalplot.png\",dpi = 600,width = 12,height = 10)"
  }
]