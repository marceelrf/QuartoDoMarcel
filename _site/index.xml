<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Quarto do Marcel</title>
<link>https://quartodomarcel.netlify.app/index.html</link>
<atom:link href="https://quartodomarcel.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Sat, 15 Apr 2023 03:00:00 GMT</lastBuildDate>
<item>
  <title>30 days chart challenge - day 15</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day15/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(brasileirao)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(rvest)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'rvest'

The following object is masked from 'package:readr':

    guess_encoding</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(extrafont)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registering fonts with R</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">url <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"https://en.wikipedia.org/wiki/2019_Campeonato_Brasileiro_S%C3%A9rie_A"</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5"></span>
<span id="cb7-6">url <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;">read_html</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">html_node</span>(<span class="at" style="color: #657422;">xpath =</span> <span class="st" style="color: #20794D;">'//*[@id="mw-content-text"]/div[1]/table[7]'</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;">html_table</span>(<span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 20 x 11
     Pos Team              Pld     W     D     L    GF    GA GD      Pts Quali~1
   &lt;int&gt; &lt;chr&gt;           &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt;  
 1     1 Flamengo (C)       38    28     6     4    86    37 +49      90 "Quali~
 2     2 Santos             38    22     8     8    60    33 +27      74 "Quali~
 3     3 Palmeiras          38    21    11     6    61    32 +29      74 "Quali~
 4     4 Grêmio             38    19     8    11    64    39 +25      65 "Quali~
 5     5 Athletico Para~    38    18    10    10    51    32 +19      64 "Quali~
 6     6 São Paulo          38    17    12     9    39    30 +9       63 "Quali~
 7     7 Internacional      38    16     9    13    44    39 +5       57 "Quali~
 8     8 Corinthians        38    14    14    10    42    34 +8       56 "Quali~
 9     9 Fortaleza          38    15     8    15    50    49 +1       53 "Quali~
10    10 Goiás              38    15     7    16    46    64 -18      52 "Quali~
11    11 Bahia              38    12    13    13    44    43 +1       49 "Quali~
12    12 Vasco da Gama      38    12    13    13    39    45 -6       49 "Quali~
13    13 Atlético Minei~    38    13     9    16    45    49 -4       48 "Quali~
14    14 Fluminense         38    12    10    16    38    46 -8       46 "Quali~
15    15 Botafogo           38    13     4    21    31    45 -14      43 ""     
16    16 Ceará              38    10     9    19    36    41 -5       39 ""     
17    17 Cruzeiro (R)       38     7    15    16    27    46 -19      36 "Releg~
18    18 CSA (R)            38     8     8    22    24    58 -34      32 "Releg~
19    19 Chapecoense (R)    38     7    11    20    31    52 -21      32 "Releg~
20    20 Avaí (R)           38     3    11    24    18    62 -44      20 "Releg~
# ... with abbreviated variable name 1: `Qualification or relegation`</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">final_table <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>()</span>
<span id="cb9-2">tindex <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb9-3">            <span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">8</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;">for</span>(i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">17</span>){</span>
<span id="cb9-6">  j <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2005</span> <span class="sc" style="color: #5E5E5E;">+</span> i</span>
<span id="cb9-7">  url <span class="ot" style="color: #003B4F;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">"https://en.wikipedia.org/wiki/{j}_Campeonato_Brasileiro_S%C3%A9rie_A"</span>)</span>
<span id="cb9-8">  p1 <span class="ot" style="color: #003B4F;">&lt;-</span> tindex[i]</span>
<span id="cb9-9">  </span>
<span id="cb9-10">  </span>
<span id="cb9-11">  final_table[[i]] <span class="ot" style="color: #003B4F;">&lt;-</span> url <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-12">    <span class="fu" style="color: #4758AB;">read_html</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-13">    <span class="fu" style="color: #4758AB;">html_node</span>(<span class="at" style="color: #657422;">xpath =</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">'//*[@id="mw-content-text"]/div[1]/table[{p1}]'</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-14">    <span class="fu" style="color: #4758AB;">html_table</span>(<span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb9-15">  </span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;">print</span>(j)</span>
<span id="cb9-17">}</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] 2013
[1] 2014
[1] 2015
[1] 2016
[1] 2017
[1] 2018
[1] 2019
[1] 2020
[1] 2021
[1] 2022</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">names</span>(final_table) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2006</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2022</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">(tab <span class="ot" style="color: #003B4F;">&lt;-</span> final_table <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(C</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(R</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">[c</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">]"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace_all</span>(Team, <span class="st" style="color: #20794D;">" "</span>,<span class="st" style="color: #20794D;">"_"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">fix_names</span>(Team))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(Team,GD)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;">map_df</span>(<span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">as.data.frame</span>(.x),<span class="at" style="color: #657422;">.id =</span> <span class="st" style="color: #20794D;">"id"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-11">  <span class="co" style="color: #5E5E5E;">#Fix teams names</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"América_Mineiro_"</span>,<span class="st" style="color: #20794D;">"América_Mineiro"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Athletico_Paranaense|</span></span>
<span id="cb11-14"><span class="st" style="color: #20794D;">Atlético_Paranaense"</span>,<span class="st" style="color: #20794D;">"Athletico PR"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-15">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Goianiense_"</span>,<span class="st" style="color: #20794D;">"Atlético_Goianiense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Mineiro_"</span>,<span class="st" style="color: #20794D;">"Atlético_Mineiro"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Goianiense_"</span>,<span class="st" style="color: #20794D;">"Atlético_Goianiense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-18">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Avaí_"</span>,<span class="st" style="color: #20794D;">"Avaí"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-19">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Bahia_"</span>,<span class="st" style="color: #20794D;">"Bahia"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-20">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Botafogo_"</span>,<span class="st" style="color: #20794D;">"Botafogo"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"CSA_"</span>,<span class="st" style="color: #20794D;">"CSA"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Ceará_"</span>,<span class="st" style="color: #20794D;">"Ceará"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-23">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Chapecoense_"</span>,<span class="st" style="color: #20794D;">"Chapecoense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Corinthians_"</span>,<span class="st" style="color: #20794D;">"Corinthians"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-25">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Coritiba_"</span>,<span class="st" style="color: #20794D;">"Coritiba"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-26">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Vasco_da_Gama_"</span>,<span class="st" style="color: #20794D;">"Vasco"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-27">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Vasco_da_Gama"</span>,<span class="st" style="color: #20794D;">"Vasco"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-28">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Sport_do_Recife"</span>,<span class="st" style="color: #20794D;">"Sport"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-29">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Sport_Recife"</span>,<span class="st" style="color: #20794D;">"Sport"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-30">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"_$"</span>,<span class="st" style="color: #20794D;">""</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-31">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace_all</span>(Team, <span class="st" style="color: #20794D;">"_"</span>,<span class="st" style="color: #20794D;">" "</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-32">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">GD =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(GD, <span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">+"</span>,<span class="st" style="color: #20794D;">""</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-33">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">GD =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(GD,</span>
<span id="cb11-34">                          <span class="at" style="color: #657422;">pattern =</span> <span class="fu" style="color: #4758AB;">regex</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">D+"</span>,<span class="at" style="color: #657422;">negate =</span> <span class="cn" style="color: #8f5902;">TRUE</span>),</span>
<span id="cb11-35">                          <span class="at" style="color: #657422;">replacement =</span> <span class="st" style="color: #20794D;">"-"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-36">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">GD =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(GD))</span>
<span id="cb11-37">  )</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: There was 1 warning in `mutate()`.
i In argument: `GD = str_replace(GD, pattern = regex("\\D+", negate = TRUE),
  replacement = "-")`.
Caused by warning in `stri_opts_regex()`:
! Unknown option to `stri_opts_regex`.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>      id                Team  GD
1   2006           São Paulo  34
2   2006       Internacional  16
3   2006              Grêmio  19
4   2006              Santos  21
5   2006              Paraná   7
6   2006               Vasco   7
7   2006         Figueirense  13
8   2006               Goiás  14
9   2006         Corinthians  -5
10  2006            Cruzeiro   7
11  2006            Flamengo  -4
12  2006            Botafogo   2
13  2006        Athletico PR  -1
14  2006           Juventude -10
15  2006          Fluminense -10
16  2006           Palmeiras -12
17  2006         Ponte Preta -20
18  2006           Fortaleza -23
19  2006         São Caetano -16
20  2006          Santa Cruz -34
21  2007           São Paulo  36
22  2007              Santos  10
23  2007            Flamengo   6
24  2007          Fluminense  18
25  2007            Cruzeiro  14
26  2007              Grêmio   1
27  2007           Palmeiras   1
28  2007    Atlético Mineiro  12
29  2007            Botafogo   4
30  2007               Vasco  11
31  2007       Internacional   5
32  2007 Atlético Paranaense   1
33  2007         Figueirense   1
34  2007               Sport  -1
35  2007             Náutico   3
36  2007               Goiás -13
37  2007         Corinthians -10
38  2007              Paraná -22
39  2007           Juventude -22
40  2007          América RN -56
41  2008           São Paulo  30
42  2008              Grêmio  24
43  2008            Cruzeiro  15
44  2008           Palmeiras  10
45  2008            Flamengo  19
46  2008       Internacional   1
47  2008            Botafogo   7
48  2008               Goiás  10
49  2008            Coritiba   7
50  2008             Vitória   4
51  2008               Sport   3
52  2008    Atlético Mineiro -11
53  2008 Atlético Paranaense  -9
54  2008          Fluminense   1
55  2008              Santos  -9
56  2008             Náutico -10
57  2008         Figueirense -23
58  2008               Vasco -16
59  2008          Portuguesa -22
60  2008            Ipatinga -29
61  2009            Flamengo  14
62  2009       Internacional  21
63  2009           São Paulo  15
64  2009            Cruzeiro   5
65  2009           Palmeiras  13
66  2009                Avaí   9
67  2009    Atlético Mineiro  -1
68  2009              Grêmio  21
69  2009               Goiás  -1
70  2009         Corinthians  -4
71  2009             Barueri   7
72  2009              Santos   0
73  2009             Vitória  -6
74  2009 Atlético Paranaense  -7
75  2009            Botafogo  -6
76  2009          Fluminense  -7
77  2009            Coritiba -12
78  2009         Santo André -15
79  2009             Náutico -23
80  2009               Sport -23
81  2010          Fluminense  26
82  2010            Cruzeiro  15
83  2010         Corinthians  24
84  2010              Grêmio  25
85  2010 Atlético Paranaense  -2
86  2010            Botafogo  12
87  2010       Internacional   7
88  2010              Santos  13
89  2010           São Paulo   0
90  2010           Palmeiras  -1
91  2010               Vasco  -2
92  2010               Ceará  -9
93  2010    Atlético Mineiro -12
94  2010            Flamengo  -3
95  2010                Avaí  -9
96  2010 Atlético Goianiense  -6
97  2010             Vitória  -6
98  2010             Guarani -20
99  2010               Goiás -27
100 2010             Barueri -25
101 2011         Corinthians  17
102 2011               Vasco  17
103 2011          Fluminense   9
104 2011            Flamengo  12
105 2011       Internacional  14
106 2011           São Paulo  11
107 2011         Figueirense   1
108 2011            Coritiba  16
109 2011            Botafogo   3
110 2011              Santos   0
111 2011           Palmeiras   4
112 2011              Grêmio  -8
113 2011 Atlético Goianiense   5
114 2011               Bahia  -6
115 2011    Atlético Mineiro -10
116 2011            Cruzeiro  -3
117 2011 Atlético Paranaense -17
118 2011               Ceará -17
119 2011     América Mineiro -18
120 2011                Avaí -30
121 2012          Fluminense  28
122 2012    Atlético Mineiro  27
123 2012              Grêmio  23
124 2012           São Paulo  22
125 2012               Vasco   1
126 2012         Corinthians  12
127 2012            Botafogo  10
128 2012              Santos   6
129 2012            Cruzeiro  -4
130 2012       Internacional   4
131 2012            Flamengo  -7
132 2012             Náutico  -7
133 2012            Coritiba  -7
134 2012         Ponte Preta  -7
135 2012               Bahia  -4
136 2012          Portuguesa  -2
137 2012               Sport -17
138 2012           Palmeiras -15
139 2012 Atlético Goianiense -30
140 2012         Figueirense -33
141 2013            Cruzeiro  40
142 2013              Grêmio   7
143 2013 Atlético Paranaense  16
144 2013            Botafogo  14
145 2013             Vitória   6
146 2013               Goiás   4
147 2013              Santos  13
148 2013    Atlético Mineiro  11
149 2013           São Paulo  -1
150 2013         Corinthians   5
151 2013            Coritiba  -3
152 2013               Bahia  -8
153 2013       Internacional  -1
154 2013            Criciúma -14
155 2013          Fluminense  -4
156 2013            Flamengo  -3
157 2013          Portuguesa   4
158 2013               Vasco -11
159 2013         Ponte Preta -18
160 2013             Náutico -57
161 2014            Cruzeiro  29
162 2014           São Paulo  19
163 2014       Internacional  12
164 2014         Corinthians  18
165 2014    Atlético Mineiro  13
166 2014          Fluminense  19
167 2014              Grêmio  12
168 2014 Atlético Paranaense   1
169 2014              Santos   7
170 2014            Flamengo  -1
171 2014               Sport -10
172 2014               Goiás  -2
173 2014         Figueirense -10
174 2014            Coritiba  -3
175 2014         Chapecoense  -5
176 2014           Palmeiras -25
177 2014             Vitória -17
178 2014               Bahia -12
179 2014            Botafogo -17
180 2014            Criciúma -28
181 2015         Corinthians  40
182 2015    Atlético Mineiro  18
183 2015              Grêmio  20
184 2015           São Paulo   6
185 2015       Internacional   1
186 2015               Sport  15
187 2015              Santos  18
188 2015            Cruzeiro   9
189 2015           Palmeiras   9
190 2015 Atlético Paranaense  -5
191 2015         Ponte Preta   1
192 2015            Flamengo  -8
193 2015          Fluminense  -9
194 2015         Chapecoense -10
195 2015            Coritiba -11
196 2015         Figueirense -14
197 2015                Avaí -22
198 2015               Vasco -26
199 2015               Goiás -10
200 2015           Joinville -22
201 2016           Palmeiras  30
202 2016              Santos  24
203 2016            Flamengo  17
204 2016    Atlético Mineiro   8
205 2016            Botafogo   4
206 2016 Atlético Paranaense   6
207 2016         Corinthians   6
208 2016         Ponte Preta  -4
209 2016              Grêmio  -3
210 2016           São Paulo   8
211 2016         Chapecoense  -7
212 2016            Cruzeiro  -1
213 2016          Fluminense   0
214 2016               Sport  -6
215 2016            Coritiba  -1
216 2016             Vitória  -2
217 2016       Internacional  -6
218 2016         Figueirense -20
219 2016          Santa Cruz -24
220 2016     América Mineiro -35
221 2017         Corinthians  20
222 2017           Palmeiras  16
223 2017              Santos  10
224 2017              Grêmio  19
225 2017            Cruzeiro   8
226 2017            Flamengo  11
227 2017               Vasco  -7
228 2017         Chapecoense  -2
229 2017    Atlético Mineiro   3
230 2017            Botafogo   3
231 2017 Atlético Paranaense   2
232 2017               Bahia   2
233 2017           São Paulo  -1
234 2017          Fluminense  -3
235 2017               Sport -12
236 2017             Vitória  -8
237 2017            Coritiba  -9
238 2017                Avaí -19
239 2017         Ponte Preta -15
240 2017 Atlético Goianiense -18
241 2018           Palmeiras  38
242 2018            Flamengo  30
243 2018       Internacional  22
244 2018              Grêmio  21
245 2018           São Paulo  12
246 2018    Atlético Mineiro  13
247 2018 Atlético Paranaense  17
248 2018            Cruzeiro   0
249 2018            Botafogo  -8
250 2018              Santos   6
251 2018               Bahia  -2
252 2018          Fluminense -14
253 2018         Corinthians  -1
254 2018         Chapecoense -16
255 2018               Ceará  -6
256 2018               Vasco  -7
257 2018     América Mineiro -17
258 2018               Sport -22
259 2018             Vitória -27
260 2018              Paraná -39
261 2019            Flamengo  49
262 2019              Santos  27
263 2019           Palmeiras  29
264 2019              Grêmio  25
265 2019        Athletico PR  19
266 2019           São Paulo   9
267 2019       Internacional   5
268 2019         Corinthians   8
269 2019           Fortaleza   1
270 2019               Goiás -18
271 2019               Bahia   1
272 2019               Vasco  -6
273 2019    Atlético Mineiro  -4
274 2019          Fluminense  -8
275 2019            Botafogo -14
276 2019               Ceará  -5
277 2019            Cruzeiro -19
278 2019                 CSA -34
279 2019         Chapecoense -21
280 2019                Avaí -44
281 2020            Flamengo  20
282 2020       Internacional  26
283 2020    Atlético Mineiro  19
284 2020           São Paulo  18
285 2020          Fluminense  13
286 2020              Grêmio  13
287 2020           Palmeiras  14
288 2020              Santos   1
289 2020        Athletico PR   2
290 2020 Red Bull Bragantino  10
291 2020               Ceará   3
292 2020         Corinthians   0
293 2020 Atlético Goianiense  -5
294 2020               Bahia -11
295 2020               Sport -19
296 2020           Fortaleza -10
297 2020               Vasco -19
298 2020               Goiás -22
299 2020            Coritiba -23
300 2020            Botafogo -30
301 2021    Atlético Mineiro  33
302 2021            Flamengo  33
303 2021           Palmeiras  15
304 2021           Fortaleza  -1
305 2021         Corinthians   4
306 2021 Red Bull Bragantino   9
307 2021          Fluminense   0
308 2021     América Mineiro   4
309 2021 Atlético Goianiense  -3
310 2021              Santos  -5
311 2021               Ceará   1
312 2021       Internacional   2
313 2021           São Paulo  -8
314 2021        Athletico PR  -4
315 2021              Cuiabá  -3
316 2021           Juventude  -8
317 2021              Grêmio  -7
318 2021               Bahia  -9
319 2021               Sport -13
320 2021         Chapecoense -40
321 2022           Palmeiras  39
322 2022       Internacional  27
323 2022          Fluminense  22
324 2022         Corinthians   8
325 2022            Flamengo  21
326 2022        Athletico PR   0
327 2022    Atlético Mineiro   8
328 2022           Fortaleza   7
329 2022           São Paulo  13
330 2022     América Mineiro   0
331 2022            Botafogo  -2
332 2022              Santos   3
333 2022               Goiás -13
334 2022 Red Bull Bragantino -10
335 2022            Coritiba -21
336 2022              Cuiabá -11
337 2022               Ceará  -7
338 2022 Atlético Goianiense -18
339 2022                Avaí -26
340 2022           Juventude -40</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">Team_oreder <span class="ot" style="color: #003B4F;">&lt;-</span> tab <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">group_by</span>(Team) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">pull</span>(Team)</span>
<span id="cb14-5"></span>
<span id="cb14-6">col1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#DE3939"</span>, <span class="st" style="color: #20794D;">"#948E8E"</span>, <span class="st" style="color: #20794D;">"#0357D6"</span>, <span class="st" style="color: #20794D;">"#FEFFE5"</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8">tab <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">factor</span>(Team, <span class="at" style="color: #657422;">levels =</span> <span class="fu" style="color: #4758AB;">rev</span>(Team_oreder)),</span>
<span id="cb14-10">         <span class="at" style="color: #657422;">Class =</span> <span class="fu" style="color: #4758AB;">case_when</span>(</span>
<span id="cb14-11">           GD <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"positive"</span>,</span>
<span id="cb14-12">           GD <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">0</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"negative"</span>,</span>
<span id="cb14-13">           <span class="cn" style="color: #8f5902;">TRUE</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"neutral"</span></span>
<span id="cb14-14">         )) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-15">  <span class="co" style="color: #5E5E5E;"># mutate(Diff = abs(Pos_max - Pos_min)) %&gt;%</span></span>
<span id="cb14-16">  <span class="co" style="color: #5E5E5E;"># mutate(Team = fct_reorder2(Team, (Diff),(Pos_max))) %&gt;%</span></span>
<span id="cb14-17">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> (id), <span class="at" style="color: #657422;">y =</span> Team, <span class="at" style="color: #657422;">fill =</span> Class))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;">geom_tile</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"black"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-19">  <span class="fu" style="color: #4758AB;">scale_fill_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"positive"</span> <span class="ot" style="color: #003B4F;">=</span> col1[<span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb14-20">                               <span class="st" style="color: #20794D;">"negative"</span> <span class="ot" style="color: #003B4F;">=</span> col1[<span class="dv" style="color: #AD0000;">3</span>],</span>
<span id="cb14-21">                               <span class="st" style="color: #20794D;">"neutral"</span> <span class="ot" style="color: #003B4F;">=</span> col1[<span class="dv" style="color: #AD0000;">2</span>])) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-22">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">""</span>,<span class="at" style="color: #657422;">y=</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb14-23">       <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Did your team have a positive goal difference?"</span>,</span>
<span id="cb14-24">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Gol differences of the teams in the Brazilian Serie A (2006~2022). Data from wikipedia."</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-25">  <span class="fu" style="color: #4758AB;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-26">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Book Antiqua"</span>),</span>
<span id="cb14-27">        <span class="at" style="color: #657422;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb14-28">        <span class="at" style="color: #657422;">axis.text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb14-29">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">22</span>),</span>
<span id="cb14-30">        <span class="at" style="color: #657422;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb14-31">        <span class="at" style="color: #657422;">axis.ticks =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb14-32">        <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> col1[<span class="dv" style="color: #AD0000;">4</span>]),</span>
<span id="cb14-33">        <span class="at" style="color: #657422;">legend.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> col1[<span class="dv" style="color: #AD0000;">4</span>]),</span>
<span id="cb14-34">        <span class="at" style="color: #657422;">legend.title =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day15/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day15_finalplot.png"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">12</span>,<span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day15/index.html</guid>
  <pubDate>Sat, 15 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day15/Campeonato_Brasileiro_Série_A_logo.png" medium="image" type="image/png" height="159" width="144"/>
</item>
<item>
  <title>30 days chart challenge - day 14</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day14/index.html</link>
  <description><![CDATA[ 




<p>In this day I used <a href="https://observablehq.com/">Observablehq</a> as a new tool.</p>
<p>Check this link to full code:</p>
<p><a href="https://observablehq.com/d/587382c0bf1914c0" class="uri">https://observablehq.com/d/587382c0bf1914c0</a></p>
<p>See you!</p>



 ]]></description>
  <category>Observable</category>
  <category>JavaScript</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day14/index.html</guid>
  <pubDate>Fri, 14 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day14/chart.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>30 days chart challenge - day 13</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day13/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">musics <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"Spotify_Youtube.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>New names:
Rows: 20718 Columns: 28
-- Column specification
-------------------------------------------------------- Delimiter: "," chr
(10): Artist, Url_spotify, Track, Album, Album_type, Uri, Url_youtube, T... dbl
(16): ...1, Danceability, Energy, Key, Loudness, Speechiness, Acousticne... lgl
(2): Licensed, official_video
i Use `spec()` to retrieve the full column specification for this data. i
Specify the column types or set `show_col_types = FALSE` to quiet this message.
* `` -&gt; `...1`</code></pre>
</div>
</div>
</section>
<section id="count-nas" class="level2">
<h2 class="anchored" data-anchor-id="count-nas">Count NA’s</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">musics <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(), is.na)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">summary</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(), sum))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    ...1           Artist        Url_spotify       Track        
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:20718     FALSE:20718     FALSE:20718     FALSE:20718    
                                                                
   Album         Album_type         Uri          Danceability   
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:20718     FALSE:20718     FALSE:20718     FALSE:20716    
                                                 TRUE :2        
   Energy           Key           Loudness       Speechiness    
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:20716     FALSE:20716     FALSE:20716     FALSE:20716    
 TRUE :2         TRUE :2         TRUE :2         TRUE :2        
 Acousticness    Instrumentalness  Liveness        Valence       
 Mode :logical   Mode :logical    Mode :logical   Mode :logical  
 FALSE:20716     FALSE:20716      FALSE:20716     FALSE:20716    
 TRUE :2         TRUE :2          TRUE :2         TRUE :2        
   Tempo         Duration_ms     Url_youtube       Title        
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:20716     FALSE:20716     FALSE:20248     FALSE:20248    
 TRUE :2         TRUE :2         TRUE :470       TRUE :470      
  Channel          Views           Likes          Comments      
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:20248     FALSE:20248     FALSE:20177     FALSE:20149    
 TRUE :470       TRUE :470       TRUE :541       TRUE :569      
 Description      Licensed       official_video    Stream       
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:19728     FALSE:20248     FALSE:20248     FALSE:20142    
 TRUE :990       TRUE :470       TRUE :470       TRUE :576      </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">mrf_songs <span class="ot" style="color: #003B4F;">&lt;-</span> musics <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">str_detect</span>(Artist, <span class="st" style="color: #20794D;">"Kings of Leon|The Killers|M83|Dua Lipa|Fleetwood Mac"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">mrf_songs <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">select</span>(Artist,Track,Danceability<span class="sc" style="color: #5E5E5E;">:</span>Duration_ms) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> Danceability<span class="sc" style="color: #5E5E5E;">:</span>Duration_ms,</span>
<span id="cb8-4">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"Params"</span>,</span>
<span id="cb8-5">               <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"Vals"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Artist, <span class="at" style="color: #657422;">y =</span> Vals, <span class="at" style="color: #657422;">col =</span> Artist)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;">geom_jitter</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">8</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>Params,<span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Spotify statistic about the top 10 songs of my top 5 favorite artists."</span>,</span>
<span id="cb8-10">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Source: https://www.kaggle.com/datasets/salvatorerastelli/spotify-and-youtube"</span>,</span>
<span id="cb8-11">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb8-12">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">""</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-13">  <span class="co" style="color: #5E5E5E;">#scale_y_continuous(expand = c(0,0)) +</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;">scale_color_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#e187a8"</span>,</span>
<span id="cb8-15">                                <span class="st" style="color: #20794D;">"#efd893"</span>,</span>
<span id="cb8-16">                                <span class="st" style="color: #20794D;">"#749e97"</span>,</span>
<span id="cb8-17">                                <span class="st" style="color: #20794D;">"#2880bc"</span>,</span>
<span id="cb8-18">                                <span class="st" style="color: #20794D;">"#ab4841"</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-19">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>),</span>
<span id="cb8-20">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">18</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb8-21">        <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">8</span>),</span>
<span id="cb8-22">        <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>),</span>
<span id="cb8-23">        <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>),</span>
<span id="cb8-24">        <span class="at" style="color: #657422;">strip.text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">12</span>),</span>
<span id="cb8-25">        <span class="at" style="color: #657422;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;">element_line</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey85"</span>),</span>
<span id="cb8-26">        <span class="at" style="color: #657422;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb8-27">        <span class="at" style="color: #657422;">axis.text.y =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">10</span>,<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"black"</span>),</span>
<span id="cb8-28">        <span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb8-29">        <span class="at" style="color: #657422;">axis.ticks.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb8-30">        <span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"bottom"</span>,</span>
<span id="cb8-31">        <span class="at" style="color: #657422;">legend.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">12</span>),</span>
<span id="cb8-32">        <span class="at" style="color: #657422;">legend.text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">10</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day13/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day13_finalplot.png"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>,<span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"white"</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Saving 10 x 5 in image</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day13/index.html</guid>
  <pubDate>Thu, 13 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day13/shoes-2804823_1920.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>30 days chart challenge - day 12</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day12/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(quantmod)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Carregando pacotes exigidos: xts
Carregando pacotes exigidos: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Attaching package: 'xts'

The following objects are masked from 'package:dplyr':

    first, last

Carregando pacotes exigidos: TTR
Registered S3 method overwritten by 'quantmod':
  method            from
  as.zoo.data.frame zoo </code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">getSymbols</span>(<span class="at" style="color: #657422;">Symbols =</span> <span class="st" style="color: #20794D;">"TUP"</span>,</span>
<span id="cb5-2">                  <span class="at" style="color: #657422;">src =</span> <span class="st" style="color: #20794D;">'yahoo'</span>,</span>
<span id="cb5-3">                  <span class="at" style="color: #657422;">from =</span> <span class="st" style="color: #20794D;">"2018-05-01"</span>,</span>
<span id="cb5-4">                  <span class="at" style="color: #657422;">to =</span> <span class="st" style="color: #20794D;">"2023-04-12"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "TUP"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">data.frame</span>(TUP<span class="sc" style="color: #5E5E5E;">$</span>TUP.Adjusted) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">rownames_to_column</span>(<span class="st" style="color: #20794D;">"Date"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">rename</span>(<span class="st" style="color: #20794D;">"Price"</span> <span class="ot" style="color: #003B4F;">=</span> TUP.Adjusted) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Date =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(Date)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Date, <span class="at" style="color: #657422;">y =</span> Price)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"#237795"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;">geom_area</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#237795"</span>,<span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dollar_format</span>(),</span>
<span id="cb7-9">                     <span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">0</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;">scale_x_date</span>(<span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">expansion</span>(<span class="at" style="color: #657422;">mult =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">0</span>),</span>
<span id="cb7-11">                                  <span class="at" style="color: #657422;">add =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">100</span>))) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Tupperware shares at an all-time low"</span>,</span>
<span id="cb7-13">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Share price in US dollar"</span>,</span>
<span id="cb7-14">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb7-15">       <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb7-16">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Source: yahoo finance via {quantmod}"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-17">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"point"</span>,</span>
<span id="cb7-18">           <span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2023-04-11"</span>),</span>
<span id="cb7-19">           <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">1.3</span>,</span>
<span id="cb7-20">           <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"#237795"</span>,</span>
<span id="cb7-21">           <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb7-22">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"text"</span>,<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"11 Apr</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">$1.30"</span>,</span>
<span id="cb7-23">           <span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2023-07-15"</span>),</span>
<span id="cb7-24">           <span class="at" style="color: #657422;">y =</span> <span class="dv" style="color: #AD0000;">3</span>,</span>
<span id="cb7-25">           <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"#237795"</span>,</span>
<span id="cb7-26">           <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>, <span class="at" style="color: #657422;">fontface =</span> <span class="st" style="color: #20794D;">"bold"</span>,</span>
<span id="cb7-27">           <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-28">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>),</span>
<span id="cb7-29">        <span class="at" style="color: #657422;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;">element_line</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey50"</span>),</span>
<span id="cb7-30">        <span class="at" style="color: #657422;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb7-31">        <span class="at" style="color: #657422;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb7-32">        <span class="at" style="color: #657422;">axis.line.x =</span> <span class="fu" style="color: #4758AB;">element_line</span>(<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb7-33">        <span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>),</span>
<span id="cb7-34">        <span class="at" style="color: #657422;">axis.text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb7-35">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,</span>
<span id="cb7-36">                                  <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">25</span>),</span>
<span id="cb7-37">        <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb7-38">        <span class="at" style="color: #657422;">plot.caption =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">hjust =</span> <span class="dv" style="color: #AD0000;">0</span>,<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">13</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day12/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day12_finalplot.png"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">300</span>,<span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"white"</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Saving 10 x 5 in image</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day12/index.html</guid>
  <pubDate>Wed, 12 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day12/BBC_News_2019.svg.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>30 days chart challenge - day 11</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day11/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(cowplot)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'cowplot'

The following object is masked from 'package:lubridate':

    stamp</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">data_titles <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"titles.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 3030 Columns: 15
-- Column specification --------------------------------------------------------
Delimiter: ","
chr (8): id, title, type, description, age_certification, genres, production...
dbl (7): release_year, runtime, seasons, imdb_score, imdb_votes, tmdb_popula...

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">glimpse</span>(data_titles)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 3,030
Columns: 15
$ id                   &lt;chr&gt; "tm77588", "tm155702", "tm83648", "tm3175", "ts22~
$ title                &lt;chr&gt; "Casablanca", "The Wizard of Oz", "Citizen Kane",~
$ type                 &lt;chr&gt; "MOVIE", "MOVIE", "MOVIE", "MOVIE", "SHOW", "MOVI~
$ description          &lt;chr&gt; "In Casablanca, Morocco in December 1941, a cynic~
$ release_year         &lt;dbl&gt; 1943, 1939, 1941, 1945, 1940, 1940, 1946, 1934, 1~
$ age_certification    &lt;chr&gt; "PG", "G", "PG", NA, NA, "G", NA, NA, NA, "PG-13"~
$ runtime              &lt;dbl&gt; 102, 102, 119, 113, 8, 238, 114, 93, 111, 109, 12~
$ genres               &lt;chr&gt; "['drama', 'romance', 'war']", "['fantasy', 'fami~
$ production_countries &lt;chr&gt; "['US']", "['US']", "['US']", "['US']", "['US']",~
$ seasons              &lt;dbl&gt; NA, NA, NA, NA, 16, NA, NA, NA, NA, NA, NA, NA, N~
$ imdb_id              &lt;chr&gt; "tt0034583", "tt0032138", "tt0033467", "tt0037059~
$ imdb_score           &lt;dbl&gt; 8.5, 8.1, 8.3, 7.5, 7.7, 8.2, 7.9, 7.9, 7.9, 8.3,~
$ imdb_votes           &lt;dbl&gt; 577842, 406105, 446627, 25589, 859, 319463, 87289~
$ tmdb_popularity      &lt;dbl&gt; 22.005, 56.631, 19.900, 8.311, 1.400, 27.535, 11.~
$ tmdb_score           &lt;dbl&gt; 8.167, 7.583, 8.022, 7.000, 10.000, 8.000, 7.700,~</code></pre>
</div>
</div>
</section>
<section id="analysis" class="level2">
<h2 class="anchored" data-anchor-id="analysis">Analysis</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">df <span class="ot" style="color: #003B4F;">&lt;-</span> data_titles <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">filter</span>(type <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"MOVIE"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">str_remove_all</span>(genres, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">[|</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">]"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">str_remove_all</span>(genres,<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\'</span><span class="st" style="color: #20794D;">"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">separate_longer_delim</span>(genres,<span class="st" style="color: #20794D;">","</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">decade =</span> <span class="fu" style="color: #4758AB;">case_when</span>(</span>
<span id="cb9-7">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1910</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1910</span>,</span>
<span id="cb9-8">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1920</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1920</span>,</span>
<span id="cb9-9">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1930</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1930</span>,</span>
<span id="cb9-10">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1940</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1940</span>,</span>
<span id="cb9-11">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1950</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1950</span>,</span>
<span id="cb9-12">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1960</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1960</span>,</span>
<span id="cb9-13">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1970</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1970</span>,</span>
<span id="cb9-14">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1980</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1980</span>,</span>
<span id="cb9-15">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1990</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">1990</span>,</span>
<span id="cb9-16">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">2000</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">2000</span>,</span>
<span id="cb9-17">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">2010</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">2010</span>,</span>
<span id="cb9-18">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">2020</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">2020</span>,</span>
<span id="cb9-19">    release_year <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">2030</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="dv" style="color: #AD0000;">2030</span>,</span>
<span id="cb9-20">  )) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-21">  <span class="fu" style="color: #4758AB;">select</span>(genres, decade)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">factor</span>(genres)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">fct_lump_min</span>(genres,<span class="dv" style="color: #AD0000;">10</span>,<span class="at" style="color: #657422;">other_level =</span> <span class="st" style="color: #20794D;">"other"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">group_by</span>(genres, decade) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 340 x 3
# Groups:   genres, decade [340]
   genres          decade     n
   &lt;fct&gt;            &lt;dbl&gt; &lt;int&gt;
 1 "documentation"   2020   212
 2 "drama"           2020   153
 3 "documentation"   2030   125
 4 " drama"          2020   117
 5 "comedy"          2020   107
 6 "comedy"          2010   104
 7 "drama"           2010   100
 8 " thriller"       2020    99
 9 " action"         2020    96
10 "drama"           2000    86
# ... with 330 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">  <span class="co" style="color: #5E5E5E;"># ggplot(aes(x = genres, y = n)) +</span></span>
<span id="cb12-2">  <span class="co" style="color: #5E5E5E;"># geom_col() +</span></span>
<span id="cb12-3">  <span class="co" style="color: #5E5E5E;"># facet_wrap(~decade) +</span></span>
<span id="cb12-4">  <span class="co" style="color: #5E5E5E;"># coord_polar() +</span></span>
<span id="cb12-5">  <span class="co" style="color: #5E5E5E;"># theme_void()</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">pdata <span class="ot" style="color: #003B4F;">&lt;-</span> data_titles <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">filter</span>(type <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"MOVIE"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">str_remove_all</span>(genres, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">[|</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">]"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">str_remove_all</span>(genres,<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\'</span><span class="st" style="color: #20794D;">"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">str_remove_all</span>(genres, <span class="st" style="color: #20794D;">" "</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;">separate_longer_delim</span>(genres,<span class="st" style="color: #20794D;">","</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">factor</span>(genres)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">fct_lump_n</span>(genres,<span class="dv" style="color: #AD0000;">10</span>,<span class="at" style="color: #657422;">other_level =</span> <span class="st" style="color: #20794D;">"other"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;">filter</span>(genres <span class="sc" style="color: #5E5E5E;">!=</span> <span class="st" style="color: #20794D;">"other"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">fct_drop</span>(genres,<span class="st" style="color: #20794D;">"other"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">fct_infreq</span>(genres,<span class="at" style="color: #657422;">ordered =</span> <span class="cn" style="color: #8f5902;">NA</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">genres =</span> <span class="fu" style="color: #4758AB;">fct_rev</span>(genres)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;">group_by</span>(genres) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;">count</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"> gg <span class="ot" style="color: #003B4F;">&lt;-</span> pdata <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> genres, <span class="at" style="color: #657422;">y =</span> n, <span class="at" style="color: #657422;">fill =</span> genres)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">geom_col</span>(<span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">75</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">geom_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">label =</span> n), <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>,</span>
<span id="cb14-5">            <span class="at" style="color: #657422;">fontface =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">nudge_y =</span> <span class="dv" style="color: #AD0000;">25</span>,<span class="at" style="color: #657422;">nudge_x =</span> .<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">limits =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2194</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;">coord_polar</span>(<span class="at" style="color: #657422;">theta =</span> <span class="st" style="color: #20794D;">"y"</span>,<span class="at" style="color: #657422;">clip =</span> <span class="st" style="color: #20794D;">"off"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;">scale_fill_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#10154c"</span>,</span>
<span id="cb14-9">                        <span class="st" style="color: #20794D;">"#2b2684"</span>,</span>
<span id="cb14-10">                        <span class="st" style="color: #20794D;">"#3c56b7"</span>,</span>
<span id="cb14-11">                        <span class="st" style="color: #20794D;">"#7587d9"</span>,</span>
<span id="cb14-12">                        <span class="st" style="color: #20794D;">"#bf9ee3"</span>,</span>
<span id="cb14-13">                        <span class="st" style="color: #20794D;">"#a569cb"</span>,</span>
<span id="cb14-14">                        <span class="st" style="color: #20794D;">"#a8278b"</span>,</span>
<span id="cb14-15">                        <span class="st" style="color: #20794D;">"#90309b"</span>,</span>
<span id="cb14-16">                        <span class="st" style="color: #20794D;">"#663795"</span>,</span>
<span id="cb14-17">                        <span class="st" style="color: #20794D;">"#4f1f5b"</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Top 10 movie genres available on HBOmax"</span>,</span>
<span id="cb14-19">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"source: https://www.kaggle.com/datasets/dgoenrique/hbo-max-movies-and-tv-shows"</span>,</span>
<span id="cb14-20">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"@marceelrf"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-21">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-22">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"serif"</span>),</span>
<span id="cb14-23">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">25</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb14-24">        <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb14-25">        <span class="at" style="color: #657422;">plot.caption =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold.italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb14-26">       <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>),</span>
<span id="cb14-27">       <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>,<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"blank"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">ggdraw</span>(gg) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">draw_image</span>(<span class="at" style="color: #657422;">image =</span> <span class="st" style="color: #20794D;">"squaresociallogo400x400_0.png"</span>,</span>
<span id="cb15-3">             <span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">00</span>,<span class="at" style="color: #657422;">y =</span> .<span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb15-4">             <span class="at" style="color: #657422;">width =</span> .<span class="dv" style="color: #AD0000;">4</span>,</span>
<span id="cb15-5">             <span class="at" style="color: #657422;">height =</span> .<span class="dv" style="color: #AD0000;">4</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day11/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day11_finalplot.png"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>,<span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Saving 10 x 5 in image</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day11/index.html</guid>
  <pubDate>Tue, 11 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day11/squaresociallogo400x400_0.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>30 days chart challenge - day 09</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day09/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(brasileirao)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(rvest)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'rvest'

The following object is masked from 'package:readr':

    guess_encoding</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(extrafont)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registering fonts with R</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">url <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"https://en.wikipedia.org/wiki/2019_Campeonato_Brasileiro_S%C3%A9rie_A"</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5"></span>
<span id="cb7-6">url <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;">read_html</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">html_node</span>(<span class="at" style="color: #657422;">xpath =</span> <span class="st" style="color: #20794D;">'//*[@id="mw-content-text"]/div[1]/table[7]'</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;">html_table</span>(<span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 20 x 11
     Pos Team              Pld     W     D     L    GF    GA GD      Pts Quali~1
   &lt;int&gt; &lt;chr&gt;           &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt;  
 1     1 Flamengo (C)       38    28     6     4    86    37 +49      90 "Quali~
 2     2 Santos             38    22     8     8    60    33 +27      74 "Quali~
 3     3 Palmeiras          38    21    11     6    61    32 +29      74 "Quali~
 4     4 Grêmio             38    19     8    11    64    39 +25      65 "Quali~
 5     5 Athletico Para~    38    18    10    10    51    32 +19      64 "Quali~
 6     6 São Paulo          38    17    12     9    39    30 +9       63 "Quali~
 7     7 Internacional      38    16     9    13    44    39 +5       57 "Quali~
 8     8 Corinthians        38    14    14    10    42    34 +8       56 "Quali~
 9     9 Fortaleza          38    15     8    15    50    49 +1       53 "Quali~
10    10 Goiás              38    15     7    16    46    64 -18      52 "Quali~
11    11 Bahia              38    12    13    13    44    43 +1       49 "Quali~
12    12 Vasco da Gama      38    12    13    13    39    45 -6       49 "Quali~
13    13 Atlético Minei~    38    13     9    16    45    49 -4       48 "Quali~
14    14 Fluminense         38    12    10    16    38    46 -8       46 "Quali~
15    15 Botafogo           38    13     4    21    31    45 -14      43 ""     
16    16 Ceará              38    10     9    19    36    41 -5       39 ""     
17    17 Cruzeiro (R)       38     7    15    16    27    46 -19      36 "Releg~
18    18 CSA (R)            38     8     8    22    24    58 -34      32 "Releg~
19    19 Chapecoense (R)    38     7    11    20    31    52 -21      32 "Releg~
20    20 Avaí (R)           38     3    11    24    18    62 -44      20 "Releg~
# ... with abbreviated variable name 1: `Qualification or relegation`</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">final_table <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>()</span>
<span id="cb9-2">tindex <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb9-3">            <span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">8</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;">for</span>(i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">17</span>){</span>
<span id="cb9-6">  j <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2005</span> <span class="sc" style="color: #5E5E5E;">+</span> i</span>
<span id="cb9-7">  url <span class="ot" style="color: #003B4F;">&lt;-</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">"https://en.wikipedia.org/wiki/{j}_Campeonato_Brasileiro_S%C3%A9rie_A"</span>)</span>
<span id="cb9-8">  p1 <span class="ot" style="color: #003B4F;">&lt;-</span> tindex[i]</span>
<span id="cb9-9">  </span>
<span id="cb9-10">  </span>
<span id="cb9-11">  final_table[[i]] <span class="ot" style="color: #003B4F;">&lt;-</span> url <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-12">    <span class="fu" style="color: #4758AB;">read_html</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-13">    <span class="fu" style="color: #4758AB;">html_node</span>(<span class="at" style="color: #657422;">xpath =</span> glue<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glue</span>(<span class="st" style="color: #20794D;">'//*[@id="mw-content-text"]/div[1]/table[{p1}]'</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-14">    <span class="fu" style="color: #4758AB;">html_table</span>(<span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb9-15">  </span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;">print</span>(j)</span>
<span id="cb9-17">}</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] 2013
[1] 2014
[1] 2015
[1] 2016
[1] 2017
[1] 2018
[1] 2019
[1] 2020
[1] 2021
[1] 2022</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">tab <span class="ot" style="color: #003B4F;">&lt;-</span> final_table <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(C</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(R</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">[c</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">]"</span>,<span class="st" style="color: #20794D;">""</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace_all</span>(Team, <span class="st" style="color: #20794D;">" "</span>,<span class="st" style="color: #20794D;">"_"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">fix_names</span>(Team))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) x <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(Pos,Team)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;">reduce</span>(<span class="at" style="color: #657422;">.f =</span> bind_rows) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-9">  <span class="co" style="color: #5E5E5E;">#Fix teams names</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"América_Mineiro_"</span>,<span class="st" style="color: #20794D;">"América_Mineiro"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Athletico_Paranaense| </span></span>
<span id="cb11-12"><span class="st" style="color: #20794D;">Atlético_Paranaense"</span>,<span class="st" style="color: #20794D;">"Athletico PR"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Goianiense_"</span>,<span class="st" style="color: #20794D;">"Atlético_Goianiense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Mineiro_"</span>,<span class="st" style="color: #20794D;">"Atlético_Mineiro"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-15">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Atlético_Goianiense_"</span>,<span class="st" style="color: #20794D;">"Atlético_Goianiense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Avaí_"</span>,<span class="st" style="color: #20794D;">"Avaí"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Bahia_"</span>,<span class="st" style="color: #20794D;">"Bahia"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-18">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Botafogo_"</span>,<span class="st" style="color: #20794D;">"Botafogo"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-19">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"CSA_"</span>,<span class="st" style="color: #20794D;">"CSA"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-20">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Ceará_"</span>,<span class="st" style="color: #20794D;">"Ceará"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Chapecoense_"</span>,<span class="st" style="color: #20794D;">"Chapecoense"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Corinthians_"</span>,<span class="st" style="color: #20794D;">"Corinthians"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-23">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Coritiba_"</span>,<span class="st" style="color: #20794D;">"Coritiba"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Vasco_da_Gama_"</span>,<span class="st" style="color: #20794D;">"Vasco"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-25">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Vasco_da_Gama"</span>,<span class="st" style="color: #20794D;">"Vasco"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-26">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Sport_do_Recife"</span>,<span class="st" style="color: #20794D;">"Sport"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-27">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team,<span class="st" style="color: #20794D;">"Sport_Recife"</span>,<span class="st" style="color: #20794D;">"Sport"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-28">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(Team, <span class="st" style="color: #20794D;">"_$"</span>,<span class="st" style="color: #20794D;">""</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-29">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">str_replace_all</span>(Team, <span class="st" style="color: #20794D;">"_"</span>,<span class="st" style="color: #20794D;">" "</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">tab <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">group_by</span>(Team) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">Pos_min =</span> <span class="fu" style="color: #4758AB;">max</span>(Pos),</span>
<span id="cb12-4">            <span class="at" style="color: #657422;">Pos_max =</span> <span class="fu" style="color: #4758AB;">min</span>(Pos)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">factor</span>(Team)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Diff =</span> <span class="fu" style="color: #4758AB;">abs</span>(Pos_max <span class="sc" style="color: #5E5E5E;">-</span> Pos_min)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Team =</span> <span class="fu" style="color: #4758AB;">fct_reorder2</span>(Team, (Diff),(Pos_max))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> (Team))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;">geom_linerange</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">ymin =</span> Pos_min, <span class="at" style="color: #657422;">ymax =</span> Pos_max),</span>
<span id="cb12-10">                 <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.25</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> Pos_min), <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"dodgerblue"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>,<span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">75</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-12">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> Pos_max), <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>,<span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">75</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;">scale_y_reverse</span>(<span class="at" style="color: #657422;">n.breaks =</span> <span class="dv" style="color: #AD0000;">20</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">""</span>,<span class="at" style="color: #657422;">y=</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb12-15">       <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Range of positions of the teams in the Brazilian Serie A (2006~2022)."</span>,</span>
<span id="cb12-16">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Data from wikipedia"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-17">  <span class="fu" style="color: #4758AB;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-18">  <span class="fu" style="color: #4758AB;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-19">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Book Antiqua"</span>),</span>
<span id="cb12-20">        <span class="at" style="color: #657422;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb12-21">        <span class="at" style="color: #657422;">axis.text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">14</span>),</span>
<span id="cb12-22">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">22</span>),</span>
<span id="cb12-23">        <span class="at" style="color: #657422;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb12-24">        <span class="at" style="color: #657422;">axis.ticks =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
i Please use `linewidth` instead.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day09/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day09_finalplot.png"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">12</span>,<span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day09/index.html</guid>
  <pubDate>Sun, 09 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day09/Campeonato_Brasileiro_Série_A_logo.png" medium="image" type="image/png" height="159" width="144"/>
</item>
<item>
  <title>30 days chart challenge - day 05</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day05/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"gdp.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 266 Columns: 12
-- Column specification --------------------------------------------------------
Delimiter: ","
chr (12): Country Name, Country Code, 2012, 2013, 2014, 2015, 2016, 2017, 20...

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">2012</span><span class="st" style="color: #20794D;">`</span><span class="sc" style="color: #5E5E5E;">:</span><span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">2021</span><span class="st" style="color: #20794D;">`</span>,</span>
<span id="cb5-3">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"Year"</span>,<span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"GDP"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-4">   <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Year =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(Year),</span>
<span id="cb5-5">          <span class="at" style="color: #657422;">GDP =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(GDP)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Year, <span class="at" style="color: #657422;">y =</span> GDP)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;">geom_point</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: There was 1 warning in `mutate()`.
i In argument: `GDP = as.numeric(GDP)`.
Caused by warning:
! NAs introduzidos por coerção</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Removed 132 rows containing missing values (`geom_point()`).</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day05/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day05/index.html</guid>
  <pubDate>Wed, 05 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day05/piglet-3386356_1920.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>30 days chart challenge - day 04</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day04/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(extrafont)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registering fonts with R</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"athlete_events.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 271116 Columns: 15
-- Column specification --------------------------------------------------------
Delimiter: ","
chr (10): Name, Sex, Team, NOC, Games, Season, City, Sport, Event, Medal
dbl  (5): ID, Age, Height, Weight, Year

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">glimpse</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 271,116
Columns: 15
$ ID     &lt;dbl&gt; 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, ~
$ Name   &lt;chr&gt; "A Dijiang", "A Lamusi", "Gunnar Nielsen Aaby", "Edgar Lindenau~
$ Sex    &lt;chr&gt; "M", "M", "M", "M", "F", "F", "F", "F", "F", "F", "M", "M", "M"~
$ Age    &lt;dbl&gt; 24, 23, 24, 34, 21, 21, 25, 25, 27, 27, 31, 31, 31, 31, 33, 33,~
$ Height &lt;dbl&gt; 180, 170, NA, NA, 185, 185, 185, 185, 185, 185, 188, 188, 188, ~
$ Weight &lt;dbl&gt; 80, 60, NA, NA, 82, 82, 82, 82, 82, 82, 75, 75, 75, 75, 75, 75,~
$ Team   &lt;chr&gt; "China", "China", "Denmark", "Denmark/Sweden", "Netherlands", "~
$ NOC    &lt;chr&gt; "CHN", "CHN", "DEN", "DEN", "NED", "NED", "NED", "NED", "NED", ~
$ Games  &lt;chr&gt; "1992 Summer", "2012 Summer", "1920 Summer", "1900 Summer", "19~
$ Year   &lt;dbl&gt; 1992, 2012, 1920, 1900, 1988, 1988, 1992, 1992, 1994, 1994, 199~
$ Season &lt;chr&gt; "Summer", "Summer", "Summer", "Summer", "Winter", "Winter", "Wi~
$ City   &lt;chr&gt; "Barcelona", "London", "Antwerpen", "Paris", "Calgary", "Calgar~
$ Sport  &lt;chr&gt; "Basketball", "Judo", "Football", "Tug-Of-War", "Speed Skating"~
$ Event  &lt;chr&gt; "Basketball Men's Basketball", "Judo Men's Extra-Lightweight", ~
$ Medal  &lt;chr&gt; NA, NA, NA, "Gold", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,~</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">(</span>
<span id="cb9-2">  Brazil_summary <span class="ot" style="color: #003B4F;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-3">    <span class="fu" style="color: #4758AB;">filter</span>(Team <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Brazil"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(Season <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Summer"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-4">    <span class="fu" style="color: #4758AB;">distinct</span>(Season, Year, Event, Medal) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-5">    <span class="fu" style="color: #4758AB;">select</span>(Year,Medal) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-6">    <span class="fu" style="color: #4758AB;">group_by</span>(Year) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-7">    <span class="fu" style="color: #4758AB;">count</span>(Medal) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-8">    <span class="fu" style="color: #4758AB;">pivot_wider</span>(<span class="at" style="color: #657422;">names_from =</span> Medal,<span class="at" style="color: #657422;">values_from =</span> n,<span class="at" style="color: #657422;">values_fill =</span> <span class="dv" style="color: #AD0000;">0</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-9">    <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="st" style="color: #20794D;">"NA"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-10">    <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="sc" style="color: #5E5E5E;">-</span>Year,</span>
<span id="cb9-11">                 <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"Medal"</span>,</span>
<span id="cb9-12">                 <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"n"</span>)</span>
<span id="cb9-13">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 69 x 3
# Groups:   Year [23]
    Year Medal      n
   &lt;dbl&gt; &lt;chr&gt;  &lt;int&gt;
 1  1900 Bronze     0
 2  1900 Gold       0
 3  1900 Silver     0
 4  1920 Bronze     1
 5  1920 Gold       1
 6  1920 Silver     1
 7  1924 Bronze     0
 8  1924 Gold       0
 9  1924 Silver     0
10  1932 Bronze     0
# ... with 59 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;">#Data</span></span>
<span id="cb11-2">Brazil_summary <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">Medal =</span> <span class="fu" style="color: #4758AB;">factor</span>(Medal,<span class="at" style="color: #657422;">levels =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Gold"</span>,<span class="st" style="color: #20794D;">"Silver"</span>,<span class="st" style="color: #20794D;">"Bronze"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="co" style="color: #5E5E5E;">#Aesthetics + Geometries</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Year, <span class="at" style="color: #657422;">y =</span> n, <span class="at" style="color: #657422;">col =</span> Medal, <span class="at" style="color: #657422;">group =</span> Medal)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">4</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-8">  <span class="co" style="color: #5E5E5E;">#Scales customizations</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="at" style="color: #657422;">from =</span> <span class="dv" style="color: #AD0000;">1896</span>,</span>
<span id="cb11-10">                                  <span class="at" style="color: #657422;">to =</span> <span class="dv" style="color: #AD0000;">2016</span>,</span>
<span id="cb11-11">                                  <span class="at" style="color: #657422;">by =</span> <span class="dv" style="color: #AD0000;">8</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">breaks =</span> <span class="dv" style="color: #AD0000;">0</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">11</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;">scale_color_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#FFD700"</span>,</span>
<span id="cb11-14">                                <span class="st" style="color: #20794D;">"#C0C0C0"</span>,</span>
<span id="cb11-15">                                <span class="st" style="color: #20794D;">"#cd7f32"</span>)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-16">  <span class="co" style="color: #5E5E5E;">#Annotations 1</span></span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"text"</span>,</span>
<span id="cb11-18">           <span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"No athletes</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">in the first games"</span>,</span>
<span id="cb11-19">           <span class="at" style="color: #657422;">x =</span> <span class="dv" style="color: #AD0000;">1918</span>,<span class="at" style="color: #657422;">y =</span> <span class="dv" style="color: #AD0000;">6</span>,</span>
<span id="cb11-20">           <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">9</span>,</span>
<span id="cb11-21">           <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Berlin Sans FB"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"curve"</span>,</span>
<span id="cb11-23">           <span class="at" style="color: #657422;">x =</span> <span class="dv" style="color: #AD0000;">1905</span>,<span class="at" style="color: #657422;">xend =</span> <span class="dv" style="color: #AD0000;">1896</span>,</span>
<span id="cb11-24">           <span class="at" style="color: #657422;">y =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">yend =</span> .<span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb11-25">           <span class="at" style="color: #657422;">arrow =</span> <span class="fu" style="color: #4758AB;">arrow</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-26">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"rect"</span>,</span>
<span id="cb11-27">           <span class="at" style="color: #657422;">xmin =</span> <span class="dv" style="color: #AD0000;">2014</span>,<span class="at" style="color: #657422;">xmax =</span> <span class="dv" style="color: #AD0000;">2018</span>,</span>
<span id="cb11-28">           <span class="at" style="color: #657422;">ymin =</span> <span class="dv" style="color: #AD0000;">0</span>,<span class="at" style="color: #657422;">ymax =</span> <span class="dv" style="color: #AD0000;">9</span>,</span>
<span id="cb11-29">           <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"green"</span>,<span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb11-30">           ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-31">  <span class="fu" style="color: #4758AB;">annotate</span>(<span class="at" style="color: #657422;">geom =</span> <span class="st" style="color: #20794D;">"text"</span>,</span>
<span id="cb11-32">           <span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"Rio</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">2016"</span>,</span>
<span id="cb11-33">           <span class="at" style="color: #657422;">x =</span> <span class="dv" style="color: #AD0000;">2016</span>,<span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">1.5</span>,</span>
<span id="cb11-34">           <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Berlin Sans FB"</span>,<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"navy"</span>,</span>
<span id="cb11-35">           <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-36">  <span class="co" style="color: #5E5E5E;">#Labels</span></span>
<span id="cb11-37">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Brazil's medals in the Olympics (1896-2016)"</span>,</span>
<span id="cb11-38">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Source: https://www.kaggle.com/code/celiomatos/brazil-score-in-olympics/input?select=athlete_events.csv"</span>,</span>
<span id="cb11-39">       <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Total of medals"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-40">  <span class="co" style="color: #5E5E5E;">#Theme</span></span>
<span id="cb11-41">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Berlin Sans FB"</span>),</span>
<span id="cb11-42">        <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">26</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>,<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Berlin Sans FB"</span>),</span>
<span id="cb11-43">        <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">9</span>,<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Berlin Sans FB"</span>),</span>
<span id="cb11-44">        <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>),</span>
<span id="cb11-45">        <span class="at" style="color: #657422;">axis.text =</span>  <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb11-46">        <span class="at" style="color: #657422;">axis.title =</span>  <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">20</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
i Please use `linewidth` instead.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day04/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"plot_final_day04.png"</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">12</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>,<span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"white"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Saving 12 x 5 in image</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day04/index.html</guid>
  <pubDate>Tue, 04 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day04/blue-81847_1920.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>30 days chart challenge - day 03</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day03/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"NYC_dogs_clean.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>New names:
Rows: 121862 Columns: 17
-- Column specification
-------------------------------------------------------- Delimiter: "," chr
(9): AnimalName, AnimalGender, AnimalBirthMonth, BreedName, Borough, Cen... dbl
(8): ...1, X, RowNumber, ZipCode, CommunityDistrict, CityCouncilDistrict...
i Use `spec()` to retrieve the full column specification for this data. i
Specify the column types or set `show_col_types = FALSE` to quiet this message.
* `` -&gt; `...1`</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">glimpse</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 121,862
Columns: 17
$ ...1                    &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,~
$ X                       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,~
$ RowNumber               &lt;dbl&gt; 1753, 2415, 3328, 7537, 8487, 10503, 11682, 12~
$ AnimalName              &lt;chr&gt; "SHADOW", "ROCCO", "LUIGI", "PETUNIA", "ROMEO"~
$ AnimalGender            &lt;chr&gt; "M", "M", "M", "F", "M", "M", "M", "F", "F", "~
$ AnimalBirthMonth        &lt;chr&gt; "01/01/2000 12:00:00 AM", "10/01/2011 12:00:00~
$ BreedName               &lt;chr&gt; "Beagle", "Boxer", "Maltese", "Pug", "Maltese"~
$ Borough                 &lt;chr&gt; "Brooklyn", "Brooklyn", "Bronx", "Brooklyn", "~
$ ZipCode                 &lt;dbl&gt; 11236, 11210, 10464, 11221, 10451, 11225, 1002~
$ CommunityDistrict       &lt;dbl&gt; 318, 314, 210, 304, 201, 309, 108, 502, 310, 2~
$ CensusTract2010         &lt;chr&gt; "1014", "756", "516", "419", "65", "800", "124~
$ NTA                     &lt;chr&gt; "BK50", "BK43", "BX10", "BK78", "BX34", "BK60"~
$ CityCouncilDistrict     &lt;dbl&gt; 46, 45, 13, 34, 17, 40, 5, 50, 43, 14, 2, 22, ~
$ CongressionalDistrict   &lt;dbl&gt; 8, 9, 14, 7, 15, 9, 12, 11, 11, 13, 12, 14, 8,~
$ StateSenatorialDistrict &lt;dbl&gt; 19, 17, 34, 18, 32, 20, 28, 23, 22, 33, 28, 12~
$ LicenseIssuedDate       &lt;chr&gt; "12/29/2014", "01/07/2015", "01/17/2015", "03/~
$ LicenseExpiredDate      &lt;chr&gt; "01/30/2016", "01/30/2016", "02/02/2016", "03/~</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">group_by</span>(Borough) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">count</span>(AnimalName,<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 28,872 x 3
# Groups:   Borough [5]
   Borough   AnimalName            n
   &lt;chr&gt;     &lt;chr&gt;             &lt;int&gt;
 1 Brooklyn  UNKNOWN             944
 2 Manhattan UNKNOWN             944
 3 Queens    NAME NOT PROVIDED   649
 4 Brooklyn  NAME NOT PROVIDED   462
 5 Manhattan CHARLIE             390
 6 Manhattan LUCY                358
 7 Manhattan LOLA                346
 8 Queens    UNKNOWN             338
 9 Manhattan NAME NOT PROVIDED   334
10 Queens    MAX                 334
# ... with 28,862 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">nyc_squirrels <span class="ot" style="color: #003B4F;">&lt;-</span> readr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-29/nyc_squirrels.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 3023 Columns: 36
-- Column specification --------------------------------------------------------
Delimiter: ","
chr (14): unique_squirrel_id, hectare, shift, age, primary_fur_color, highli...
dbl  (9): long, lat, date, hectare_squirrel_number, zip_codes, community_dis...
lgl (13): running, chasing, climbing, eating, foraging, kuks, quaas, moans, ...

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day03/index.html</guid>
  <pubDate>Mon, 03 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day03/brooklyn-nyc-skyline-pav-maxine.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>30 days chart challenge - day 02</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day02/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(waffle)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(cowplot)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'cowplot'

The following object is masked from 'package:lubridate':

    stamp</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(extrafont)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registering fonts with R</code></pre>
</div>
</div>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"player_stats.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 2769 Columns: 26
-- Column specification --------------------------------------------------------
Delimiter: ","
chr  (6): Player name, Nation, Position, Squad, Compition, Age
dbl (19): Born year, Match played, Starts, 90s, Goal, Assist, Goal + Assist,...
num  (1): MIn

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">glimpse</span>(data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2,769
Columns: 26
$ `Player name`                                        &lt;chr&gt; "Brenden Aaronson~
$ Nation                                               &lt;chr&gt; "USA", "USA", "MA~
$ Position                                             &lt;chr&gt; "MF,FW", "MF", "D~
$ Squad                                                &lt;chr&gt; "Leeds United", "~
$ Compition                                            &lt;chr&gt; "Premier League",~
$ Age                                                  &lt;chr&gt; "22-157", "19-214~
$ `Born year`                                          &lt;dbl&gt; 2000, 2003, 1987,~
$ `Match played`                                       &lt;dbl&gt; 26, 1, 28, 20, 26~
$ Starts                                               &lt;dbl&gt; 23, 8, 28, 14, 26~
$ MIn                                                  &lt;dbl&gt; 1948.0, 0.1, 2520~
$ `90s`                                                &lt;dbl&gt; 21.6, NA, 28.0, 1~
$ Goal                                                 &lt;dbl&gt; 1.0, NA, 1.0, 0.9~
$ Assist                                               &lt;dbl&gt; 2.0, NA, 1.0, 1.0~
$ `Goal + Assist`                                      &lt;dbl&gt; 3.0, NA, 2.0, 0.9~
$ `Goal+Penalty kick`                                  &lt;dbl&gt; 1.0, NA, 1.0, 1.9~
$ `Penalty Kick`                                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0,~
$ `Penalty Kick Attempted`                             &lt;dbl&gt; 0, 0, 0, 0, 0, 0,~
$ `Yellow Card`                                        &lt;dbl&gt; 2.0, NA, 3.0, 2.8~
$ `Red Card`                                           &lt;dbl&gt; 0.00, 0.00, 0.00,~
$ `Expected Goal`                                      &lt;dbl&gt; 2.9, 0.0, 1.8, 34~
$ `Non-penalty Expected Goal`                          &lt;dbl&gt; 2.9, 0.0, 1.8, 84~
$ `Expected Assisted Goal`                             &lt;dbl&gt; 3.7, 0.0, 0.4, 74~
$ `Non-penalty Expected Goal + Expected Assisted Goal` &lt;dbl&gt; 6.60, 0.00, 2.20,~
$ `Progressive Carries`                                &lt;dbl&gt; 36.00, 0.00, 20.0~
$ `Progressive Passes`                                 &lt;dbl&gt; 72.00, 0.00, 147.~
$ `Progressive Passes Receive`                         &lt;dbl&gt; 120.00, 0.00, 5.0~</code></pre>
</div>
</div>
<section id="check-nas" class="level3">
<h3 class="anchored" data-anchor-id="check-nas">Check NA’s</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(), is.na)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">summarise</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(),sum))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 26
  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`
     &lt;int&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;
1        0      1       0     0       0     0       0       0      0    30    79
# ... with 15 more variables: Goal &lt;int&gt;, Assist &lt;int&gt;, `Goal + Assist` &lt;int&gt;,
#   `Goal+Penalty kick` &lt;int&gt;, `Penalty Kick` &lt;int&gt;,
#   `Penalty Kick Attempted` &lt;int&gt;, `Yellow Card` &lt;int&gt;, `Red Card` &lt;int&gt;,
#   `Expected Goal` &lt;int&gt;, `Non-penalty Expected Goal` &lt;int&gt;,
#   `Expected Assisted Goal` &lt;int&gt;,
#   `Non-penalty Expected Goal + Expected Assisted Goal` &lt;int&gt;,
#   `Progressive Carries` &lt;int&gt;, `Progressive Passes` &lt;int&gt;, ...</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(Nation))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 26
  Player~1 Nation Posit~2 Squad Compi~3 Age   Born ~4 Match~5 Starts   MIn `90s`
  &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
1 David O~ &lt;NA&gt;   FW      Crys~ Premie~ 17-3~    2005       1      1    NA    NA
# ... with 15 more variables: Goal &lt;dbl&gt;, Assist &lt;dbl&gt;, `Goal + Assist` &lt;dbl&gt;,
#   `Goal+Penalty kick` &lt;dbl&gt;, `Penalty Kick` &lt;dbl&gt;,
#   `Penalty Kick Attempted` &lt;dbl&gt;, `Yellow Card` &lt;dbl&gt;, `Red Card` &lt;dbl&gt;,
#   `Expected Goal` &lt;dbl&gt;, `Non-penalty Expected Goal` &lt;dbl&gt;,
#   `Expected Assisted Goal` &lt;dbl&gt;,
#   `Non-penalty Expected Goal + Expected Assisted Goal` &lt;dbl&gt;,
#   `Progressive Carries` &lt;dbl&gt;, `Progressive Passes` &lt;dbl&gt;, ...</code></pre>
</div>
</div>
</section>
<section id="check-unique-values" class="level3">
<h3 class="anchored" data-anchor-id="check-unique-values">Check unique values</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">map_df</span>(<span class="at" style="color: #657422;">.f =</span> \(x) <span class="fu" style="color: #4758AB;">length</span>(<span class="fu" style="color: #4758AB;">unique</span>(x)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 26
  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`
     &lt;int&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;
1     2599    105      10    98       5  2093      27      28    117  1468   272
# ... with 15 more variables: Goal &lt;int&gt;, Assist &lt;int&gt;, `Goal + Assist` &lt;int&gt;,
#   `Goal+Penalty kick` &lt;int&gt;, `Penalty Kick` &lt;int&gt;,
#   `Penalty Kick Attempted` &lt;int&gt;, `Yellow Card` &lt;int&gt;, `Red Card` &lt;int&gt;,
#   `Expected Goal` &lt;int&gt;, `Non-penalty Expected Goal` &lt;int&gt;,
#   `Expected Assisted Goal` &lt;int&gt;,
#   `Non-penalty Expected Goal + Expected Assisted Goal` &lt;int&gt;,
#   `Progressive Carries` &lt;int&gt;, `Progressive Passes` &lt;int&gt;, ...</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">group_by</span>(Nation) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">prop =</span> <span class="dv" style="color: #AD0000;">100</span><span class="sc" style="color: #5E5E5E;">*</span>n<span class="sc" style="color: #5E5E5E;">/</span><span class="fu" style="color: #4758AB;">nrow</span>(data))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 105 x 3
# Groups:   Nation [105]
   Nation     n  prop
   &lt;chr&gt;  &lt;int&gt; &lt;dbl&gt;
 1 ESP      385 13.9 
 2 FRA      377 13.6 
 3 GER      231  8.34
 4 ITA      220  7.95
 5 ENG      188  6.79
 6 BRA      106  3.83
 7 ARG       77  2.78
 8 POR       72  2.60
 9 NED       70  2.53
10 BEL       48  1.73
# ... with 95 more rows</code></pre>
</div>
</div>
</section>
</section>
<section id="plot-nation-per-league" class="level2">
<h2 class="anchored" data-anchor-id="plot-nation-per-league">Plot Nation per league</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;">select</span>(Nation,<span class="st" style="color: #20794D;">"League"</span> <span class="ot" style="color: #003B4F;">=</span> Compition) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;">group_by</span>(Nation,League) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;">filter</span>(n <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">20</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-6">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">fill =</span> Nation, <span class="at" style="color: #657422;">values =</span> n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;">geom_waffle</span>(</span>
<span id="cb19-8">    <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">colour =</span> Nation),</span>
<span id="cb19-9">    <span class="at" style="color: #657422;">n_rows =</span> <span class="dv" style="color: #AD0000;">10</span>, </span>
<span id="cb19-10">    <span class="at" style="color: #657422;">size =</span> .<span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey50"</span>, </span>
<span id="cb19-11">    <span class="at" style="color: #657422;">flip =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb19-12">    <span class="at" style="color: #657422;">make_proportional =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb19-13">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-14">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span>League, <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">5</span>,<span class="at" style="color: #657422;">strip.position =</span> <span class="st" style="color: #20794D;">"bottom"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-15">  <span class="co" style="color: #5E5E5E;">#expand_limits(x=c(0,0), y=c(0,0)) +</span></span>
<span id="cb19-16">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb19-17">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"2022-2023 Top 5 Football Leagues Nationalities"</span>,</span>
<span id="cb19-18">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Source: https://www.kaggle.com/datasets/joyshil0599/2022-2023-top-5-football-leagues-player-stats"</span>,</span>
<span id="cb19-19">    <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Only countries with more than 20 player in each league"</span>, </span>
<span id="cb19-20">    <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb19-21">    <span class="at" style="color: #657422;">colour =</span> <span class="cn" style="color: #8f5902;">NULL</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-22">  <span class="fu" style="color: #4758AB;">scale_fill_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"ALG"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#006331"</span>,</span>
<span id="cb19-23">                               <span class="st" style="color: #20794D;">"ARG"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#70a7d8"</span>,</span>
<span id="cb19-24">                               <span class="st" style="color: #20794D;">"AUT"</span> <span class="ot" style="color: #003B4F;">=</span>  <span class="st" style="color: #20794D;">"#e62837"</span>,</span>
<span id="cb19-25">                               <span class="st" style="color: #20794D;">"BRA"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#f6d900"</span>,</span>
<span id="cb19-26">                               <span class="st" style="color: #20794D;">"ENG"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"white"</span>,</span>
<span id="cb19-27">                               <span class="st" style="color: #20794D;">"ESP"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#c00b1d"</span>,</span>
<span id="cb19-28">                               <span class="st" style="color: #20794D;">"FRA"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#002551"</span>,</span>
<span id="cb19-29">                               <span class="st" style="color: #20794D;">"GER"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"black"</span>,</span>
<span id="cb19-30">                               <span class="st" style="color: #20794D;">"ITA"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#0b8dcd"</span>,</span>
<span id="cb19-31">                               <span class="st" style="color: #20794D;">"NED"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"orange"</span>,</span>
<span id="cb19-32">                               <span class="st" style="color: #20794D;">"POR"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"#e52011"</span>)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb19-33">  <span class="fu" style="color: #4758AB;">theme_enhance_waffle</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-34">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-35">  <span class="fu" style="color: #4758AB;">theme</span>(</span>
<span id="cb19-36">    <span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>),</span>
<span id="cb19-37">    <span class="at" style="color: #657422;">strip.text.x =</span>  <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb19-38">    <span class="at" style="color: #657422;">strip.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"grey99"</span>,</span>
<span id="cb19-39">                                    <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"blank"</span>),</span>
<span id="cb19-40">    <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">25</span>),</span>
<span id="cb19-41">    <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb19-42">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day02/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"plot_day02.png"</span>,<span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"white"</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">400</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Saving 10 x 5 in image</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day02/index.html</guid>
  <pubDate>Sun, 02 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day02/waffles-1044180_1920.png" medium="image" type="image/png"/>
</item>
<item>
  <title>30 days chart challenge - day 01</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index.html</link>
  <description><![CDATA[ 




<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>The data that I choose to this challenge was the <strong>Marvel Chracters</strong> (https://www.kaggle.com/datasets/syedasimalishah/marvel-chracters).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --
v dplyr     1.1.0     v readr     2.1.4
v forcats   1.0.0     v stringr   1.5.0
v ggplot2   3.4.1     v tibble    3.1.8
v lubridate 1.9.2     v tidyr     1.3.0
v purrr     1.0.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
i Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(ggsankey)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(extrafont)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registering fonts with R</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(cowplot)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'cowplot'

The following object is masked from 'package:lubridate':

    stamp</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"Marvel Movies.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 16376 Columns: 11
-- Column specification --------------------------------------------------------
Delimiter: ","
chr (9): name, ID, ALIGN, EYE, HAIR, SEX, GSM, ALIVE, FIRST APPEARANCE
dbl (2): APPEARANCES, Year

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<p>Check the NA’s</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb9-3">    <span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(),is.na)</span>
<span id="cb9-4">    ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">summarise</span>(</span>
<span id="cb9-6">    <span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">everything</span>(),sum)</span>
<span id="cb9-7">    )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 11
   name    ID ALIGN   EYE  HAIR   SEX   GSM ALIVE APPEARANCES FIRST APPE~1  Year
  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;       &lt;int&gt;        &lt;int&gt; &lt;int&gt;
1     0  3770  2812  9767  4264   854 16286     3        1096          815   815
# ... with abbreviated variable name 1: `FIRST APPEARANCE`</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">map</span>(<span class="at" style="color: #657422;">.f =</span> \(x) <span class="fu" style="color: #4758AB;">length</span>(<span class="fu" style="color: #4758AB;">unique</span>(x)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$name
[1] 16376

$ID
[1] 5

$ALIGN
[1] 4

$EYE
[1] 25

$HAIR
[1] 26

$SEX
[1] 5

$GSM
[1] 7

$ALIVE
[1] 3

$APPEARANCES
[1] 359

$`FIRST APPEARANCE`
[1] 833

$Year
[1] 76</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">group_by</span>(HAIR) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">prop =</span> <span class="dv" style="color: #AD0000;">100</span><span class="sc" style="color: #5E5E5E;">*</span>n<span class="sc" style="color: #5E5E5E;">/</span><span class="fu" style="color: #4758AB;">nrow</span>(data))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 26 x 3
# Groups:   HAIR [26]
   HAIR           n   prop
   &lt;chr&gt;      &lt;int&gt;  &lt;dbl&gt;
 1 &lt;NA&gt;        4264 26.0  
 2 Black Hair  3755 22.9  
 3 Brown Hair  2339 14.3  
 4 Blond Hair  1582  9.66 
 5 No Hair     1176  7.18 
 6 Bald         838  5.12 
 7 White Hair   754  4.60 
 8 Red Hair     620  3.79 
 9 Grey Hair    531  3.24 
10 Green Hair   117  0.714
# ... with 16 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb15-2">    <span class="fu" style="color: #4758AB;">group_by</span>(EYE) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;">count</span>(<span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">prop =</span> <span class="dv" style="color: #AD0000;">100</span><span class="sc" style="color: #5E5E5E;">*</span>n<span class="sc" style="color: #5E5E5E;">/</span><span class="fu" style="color: #4758AB;">nrow</span>(data))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 25 x 3
# Groups:   EYE [25]
   EYE             n   prop
   &lt;chr&gt;       &lt;int&gt;  &lt;dbl&gt;
 1 &lt;NA&gt;         9767 59.6  
 2 Blue Eyes    1962 12.0  
 3 Brown Eyes   1924 11.7  
 4 Green Eyes    613  3.74 
 5 Black Eyes    555  3.39 
 6 Red Eyes      508  3.10 
 7 White Eyes    400  2.44 
 8 Yellow Eyes   256  1.56 
 9 Grey Eyes      95  0.580
10 Hazel Eyes     76  0.464
# ... with 15 more rows</code></pre>
</div>
</div>
<p><br>
</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">(df_ex <span class="ot" style="color: #003B4F;">&lt;-</span> data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">slice_sample</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">20</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-3">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">where</span>(is.character),<span class="at" style="color: #657422;">.f =</span> \(x) <span class="fu" style="color: #4758AB;">replace_na</span>(x,<span class="st" style="color: #20794D;">"No Info"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;">make_long</span>(<span class="st" style="color: #20794D;">"ID"</span>,<span class="st" style="color: #20794D;">"SEX"</span>,<span class="st" style="color: #20794D;">"EYE"</span>,<span class="st" style="color: #20794D;">"HAIR"</span>,<span class="st" style="color: #20794D;">"ALIGN"</span>,<span class="st" style="color: #20794D;">"ALIVE"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 120 x 4
   x     node              next_x next_node         
   &lt;fct&gt; &lt;chr&gt;             &lt;fct&gt;  &lt;chr&gt;             
 1 ID    No Info           SEX    Male Characters   
 2 SEX   Male Characters   EYE    No Info           
 3 EYE   No Info           HAIR   Grey Hair         
 4 HAIR  Grey Hair         ALIGN  Good Characters   
 5 ALIGN Good Characters   ALIVE  Living Characters 
 6 ALIVE Living Characters &lt;NA&gt;   &lt;NA&gt;              
 7 ID    Secret Identity   SEX    Female Characters 
 8 SEX   Female Characters EYE    No Info           
 9 EYE   No Info           HAIR   Blond Hair        
10 HAIR  Blond Hair        ALIGN  Neutral Characters
# ... with 110 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">(</span>
<span id="cb19-2">  p1 <span class="ot" style="color: #003B4F;">&lt;-</span> df_ex <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> x,</span>
<span id="cb19-4">             <span class="at" style="color: #657422;">next_x =</span> next_x,</span>
<span id="cb19-5">             <span class="at" style="color: #657422;">node =</span> node,</span>
<span id="cb19-6">             <span class="at" style="color: #657422;">next_node =</span> next_node,</span>
<span id="cb19-7">             <span class="at" style="color: #657422;">fill =</span> <span class="fu" style="color: #4758AB;">factor</span>(node),</span>
<span id="cb19-8">             <span class="at" style="color: #657422;">label =</span> node)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-9">  <span class="fu" style="color: #4758AB;">geom_sankey</span>(<span class="at" style="color: #657422;">flow.alpha =</span> .<span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-10">  <span class="fu" style="color: #4758AB;">geom_sankey_label</span>(<span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">3.5</span>, <span class="at" style="color: #657422;">color =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>,<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-11">  viridis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_fill_viridis</span>(<span class="at" style="color: #657422;">option =</span> <span class="st" style="color: #20794D;">"A"</span>,<span class="at" style="color: #657422;">discrete =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb19-12">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-13">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span><span class="st" style="color: #20794D;">"Marvel movie characters"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-14">  <span class="fu" style="color: #4758AB;">theme</span>(</span>
<span id="cb19-15">    <span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>,</span>
<span id="cb19-16">    <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>),</span>
<span id="cb19-17">    <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>,<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"blank"</span>),</span>
<span id="cb19-18">    <span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>),</span>
<span id="cb19-19">    <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">30</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb19-20">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">ggdraw</span>(p1) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;">draw_label</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"@marceelrf"</span>,<span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">0.05</span>,<span class="at" style="color: #657422;">fontfamily =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;">draw_image</span>(<span class="at" style="color: #657422;">image =</span> <span class="st" style="color: #20794D;">"Marvel_Logo.svg"</span>,<span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">85</span>,<span class="at" style="color: #657422;">y =</span> .<span class="dv" style="color: #AD0000;">01</span>,<span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.13</span>, <span class="at" style="color: #657422;">height =</span> <span class="fl" style="color: #AD0000;">0.2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): métrica da
fonte desconhecida para caractere 0x4d</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x67</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x6a</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x70</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x71</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x79</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x51</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="final-plot" class="level2">
<h2 class="anchored" data-anchor-id="final-plot">Final plot</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">(plot_final <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb28-2">    data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb28-3">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(<span class="fu" style="color: #4758AB;">where</span>(is.character),<span class="at" style="color: #657422;">.f =</span> \(x) <span class="fu" style="color: #4758AB;">replace_na</span>(x,<span class="st" style="color: #20794D;">"No Info"</span>))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb28-4">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">HAIR =</span> <span class="fu" style="color: #4758AB;">fct_lump_prop</span>(HAIR, <span class="fl" style="color: #AD0000;">0.05</span>),</span>
<span id="cb28-5">           <span class="at" style="color: #657422;">EYE =</span> <span class="fu" style="color: #4758AB;">fct_lump_prop</span>(EYE, <span class="fl" style="color: #AD0000;">0.05</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb28-6">  <span class="fu" style="color: #4758AB;">make_long</span>(<span class="st" style="color: #20794D;">"ID"</span>,<span class="st" style="color: #20794D;">"SEX"</span>,<span class="st" style="color: #20794D;">"EYE"</span>,<span class="st" style="color: #20794D;">"HAIR"</span>,<span class="st" style="color: #20794D;">"ALIGN"</span>,<span class="st" style="color: #20794D;">"ALIVE"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb28-7">    <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> x,</span>
<span id="cb28-8">             <span class="at" style="color: #657422;">next_x =</span> next_x,</span>
<span id="cb28-9">             <span class="at" style="color: #657422;">node =</span> node,</span>
<span id="cb28-10">             <span class="at" style="color: #657422;">next_node =</span> next_node,</span>
<span id="cb28-11">             <span class="at" style="color: #657422;">fill =</span> <span class="fu" style="color: #4758AB;">factor</span>(node),</span>
<span id="cb28-12">             <span class="at" style="color: #657422;">label =</span> node)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-13">  <span class="fu" style="color: #4758AB;">geom_sankey</span>(<span class="at" style="color: #657422;">flow.alpha =</span> .<span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-14">  <span class="fu" style="color: #4758AB;">geom_sankey_label</span>(<span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">3.5</span>, <span class="at" style="color: #657422;">color =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>,<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-15">  viridis<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_fill_viridis</span>(<span class="at" style="color: #657422;">option =</span> <span class="st" style="color: #20794D;">"A"</span>,<span class="at" style="color: #657422;">discrete =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb28-16">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-17">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Marvel movie characters"</span>,</span>
<span id="cb28-18">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Source: https://www.kaggle.com/datasets/syedasimalishah/marvel-chracters"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-19">  <span class="fu" style="color: #4758AB;">theme</span>(</span>
<span id="cb28-20">    <span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>,</span>
<span id="cb28-21">    <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>),</span>
<span id="cb28-22">    <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"#e8e6d1"</span>,<span class="at" style="color: #657422;">linewidth =</span> <span class="dv" style="color: #AD0000;">0</span>,<span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"blank"</span>), <span class="at" style="color: #657422;">plot.subtitle =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"italic"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">8</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb28-23">    <span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>),</span>
<span id="cb28-24">    <span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>,<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>,<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">30</span>,<span class="at" style="color: #657422;">hjust =</span> .<span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb28-25">  )</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: attributes are not identical across measure variables; they will be
dropped</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;">ggdraw</span>(plot_final) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;">draw_label</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"@marceelrf"</span>,<span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">0.025</span>,<span class="at" style="color: #657422;">fontfamily =</span> <span class="st" style="color: #20794D;">"Segoe UI"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;">draw_image</span>(<span class="at" style="color: #657422;">image =</span> <span class="st" style="color: #20794D;">"Marvel_Logo.svg"</span>,<span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">85</span>,<span class="at" style="color: #657422;">y =</span> <span class="fl" style="color: #AD0000;">0.00001</span>,</span>
<span id="cb30-4">             <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">0.13</span>, <span class="at" style="color: #657422;">height =</span> <span class="fl" style="color: #AD0000;">0.2</span>,<span class="at" style="color: #657422;">vjust =</span> .<span class="dv" style="color: #AD0000;">25</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): métrica da
fonte desconhecida para caractere 0x4d</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x67</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x6a</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x70</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x71</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x79</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): fonte com
largura desconhecida para caractere 0x51</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index_files/figure-html/unnamed-chunk-10-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">filename =</span> <span class="st" style="color: #20794D;">"day01_finalplot.png"</span>,<span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">10</span>,<span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">7</span>,<span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">600</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Dataviz</category>
  <guid>https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/index.html</guid>
  <pubDate>Sat, 01 Apr 2023 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/30-days-charts-challenge-day01/Marvel_Logo.png" medium="image" type="image/png" height="58" width="144"/>
</item>
<item>
  <title>Operations with vectors</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/Operations-with-vector/index.html</link>
  <description><![CDATA[ 




<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9124147692602552" crossorigin="anonymous"></script>
<p>In <a href="https://quartodomarcel.netlify.app/posts/r-objects/">previous posts</a> we have talked about object types and their <code>atomic</code> classes, among them <code>vectors</code>, which are the basis for the other objects. In this post I will begin to demonstrate how the main operations with <code>vectors</code> work, today focusing on numerical operations.</p>
<section id="numeric-vectors" class="level2">
<h2 class="anchored" data-anchor-id="numeric-vectors">Numeric vectors</h2>
<p>As said before, <code>vectors</code> are one-dimensional objects composed of a set of elements, where the order does not necessarily have a meaning, serving only to locate the element in the <code>vector</code>. Let’s look at the example of <code>vector</code> <code>v1</code> below:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_1%20=%20%5C%7B1,2,3,4,5%5C%7D%0A"></p>
<p><code>v1</code> represents the sequence of <code>integers</code> from 1 to 5. In R we can create any <code>vector</code> with the <code>c()</code> function, as we saw earlier. But it is not the only way. We can create sequences with the <code>:</code> operator, for <code>integers</code>, and the <code>seq()</code> function for general cases. So let’s create <code>v1</code> as an object in R in these three different ways. But first a hint, when creating an object in R we can do it inside <code>()</code> and the generated object will be printed <strong><em>automatically</em></strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#created with c()</span></span>
<span id="cb1-2">(v1_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;">#created with :</span></span>
<span id="cb3-2">(v1_2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;">#created with seq()</span></span>
<span id="cb5-2">(v1_3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="at" style="color: #657422;">from =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">to =</span> <span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">by =</span> <span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
</div>
<p>When we choose a fractional value in the argument <code>by</code>, the <code>seq()</code> function can generate any number sequence (Arithmetic Progressions).</p>
</section>
<section id="math-using-vectors" class="level2">
<h2 class="anchored" data-anchor-id="math-using-vectors">Math using vectors</h2>
<p>The basic mathematical operations in R, addition, subtraction, multiplication, division, etc, are contained in the table below:</p>
<table class="table">
<caption>Math operations</caption>
<colgroup>
<col style="width: 18%">
<col style="width: 33%">
<col style="width: 18%">
<col style="width: 27%">
</colgroup>
<thead>
<tr class="header">
<th>Math</th>
<th>Operator</th>
<th>Code</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>addtion</td>
<td><code>+</code></td>
<td><code>2+2</code></td>
<td><img src="https://latex.codecogs.com/png.latex?2+2%20=4"></td>
</tr>
<tr class="even">
<td>subtraction</td>
<td><code>-</code></td>
<td><code>4-2</code></td>
<td><img src="https://latex.codecogs.com/png.latex?4-2=2"></td>
</tr>
<tr class="odd">
<td>multiplication</td>
<td><code>*</code></td>
<td><code>2*2</code></td>
<td><img src="https://latex.codecogs.com/png.latex?2%5Ctimes2=4"></td>
</tr>
<tr class="even">
<td>division</td>
<td><code>/</code></td>
<td><code>4/2</code></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B4%7D%7B2%7D%20=%202"></td>
</tr>
<tr class="odd">
<td>power</td>
<td><code>^</code> or <code>**</code></td>
<td><code>2^2</code></td>
<td><img src="https://latex.codecogs.com/png.latex?2%5E2=4"></td>
</tr>
<tr class="even">
<td>square root</td>
<td><code>sqrt()</code></td>
<td><code>sqrt(4)</code></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B4%7D%20=%202"></td>
</tr>
<tr class="odd">
<td>exponential</td>
<td><code>exp()</code></td>
<td><code>exp(-4)</code></td>
<td><img src="https://latex.codecogs.com/png.latex?e%5E%7B-4%7D%20=%200.0183"></td>
</tr>
<tr class="even">
<td>log</td>
<td><p><code>log()</code>, <code>log2</code> or <code>log10</code></p></td>
<td><code>log(0.0183)</code></td>
<td><img src="https://latex.codecogs.com/png.latex?%5Cln(0.0183)%20%5Csimeq%20-4"></td>
</tr>
</tbody>
</table>
<p>There are others, but I believe that these will be the most used in our day to day. These operations in R work element by element. For example, when we add two <code>vectors</code> (<img src="https://latex.codecogs.com/png.latex?v_1=%5C%7B1,2,3,4,5%5C%7D%20v_2%20=%20%5C%7B2,3,4,5,6%5C%7D">), R will add element 1 of <code>v1</code> to 1 of <code>v2</code>, 2 of <code>v1</code> to 2 of <code>v2</code>, and so on.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_1+v_2=%5C%7B1+2,2+3,3+4,4+5,5+6%5C%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_1+v_2=%5C%7B3,5,7,9,11%5C%7D%0A"></p>
<p>Subtraction, multiplication, division, and potentiation follow the same principle.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb7-2">v2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">6</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;">#add</span></span>
<span id="cb7-4">v1<span class="sc" style="color: #5E5E5E;">+</span>v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  3  5  7  9 11</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;">#sub</span></span>
<span id="cb9-2">v1<span class="sc" style="color: #5E5E5E;">-</span>v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -1 -1 -1 -1 -1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;">#multiplication</span></span>
<span id="cb11-2">v1<span class="sc" style="color: #5E5E5E;">*</span>v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  2  6 12 20 30</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;">#division</span></span>
<span id="cb13-2">v1<span class="sc" style="color: #5E5E5E;">/</span>v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5000000 0.6666667 0.7500000 0.8000000 0.8333333</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;">#power</span></span>
<span id="cb15-2">v1<span class="sc" style="color: #5E5E5E;">^</span>v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]     1     8    81  1024 15625</code></pre>
</div>
</div>
<p>From this we can infer that it is necessary in R that <code>vectors</code> contain the same number of elements (or the same <code>length</code>), but in practice this is not what happens. In case of <code>vectors</code> of different <code>lengths</code> R will <code>recycle</code> the <code>vector</code> with the smallest number of elements to match and thus perform the math. Consider the <code>vectors</code> <img src="https://latex.codecogs.com/png.latex?v_1%20=%20%5C%7B1,2,3,4,5%5C%7D"> and <img src="https://latex.codecogs.com/png.latex?v_3%20=%20%5C%7B0,2,1%5C%7D">, Let’s see how R performs subtraction.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_1-v_3%20=%20%5C%7B1-0,2-2,3-1,4-0,5-2%5C%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av_1-v_3%20=%20%5C%7B1,0,2,4,3%5C%7D%0A"></p>
<p>Again, the operations addition, multiplication, division and power work equally in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb17-2">v3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;">#add</span></span>
<span id="cb17-4">v1<span class="sc" style="color: #5E5E5E;">+</span>v3</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in v1 + v3: comprimento do objeto maior não é múltiplo do comprimento do
objeto menor</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 4 4 4 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;">#sub</span></span>
<span id="cb20-2">v1<span class="sc" style="color: #5E5E5E;">-</span>v3</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in v1 - v3: comprimento do objeto maior não é múltiplo do comprimento do
objeto menor</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 0 2 4 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;">#multiplication</span></span>
<span id="cb23-2">v1<span class="sc" style="color: #5E5E5E;">*</span>v3</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in v1 * v3: comprimento do objeto maior não é múltiplo do comprimento do
objeto menor</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  0  4  3  0 10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="co" style="color: #5E5E5E;">#division</span></span>
<span id="cb26-2">v1<span class="sc" style="color: #5E5E5E;">/</span>v3</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in v1/v3: comprimento do objeto maior não é múltiplo do comprimento do
objeto menor</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] Inf 1.0 3.0 Inf 2.5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="co" style="color: #5E5E5E;">#power</span></span>
<span id="cb29-2">v1<span class="sc" style="color: #5E5E5E;">^</span>v3</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in v1^v3: comprimento do objeto maior não é múltiplo do comprimento do
objeto menor</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  1  4  3  1 25</code></pre>
</div>
</div>
<p>Notice that a <code>warning</code> is displayed that the <code>vectors</code> have different sizes and that when we divide by <code>0</code> an <code>Inf</code> value relative to infinity is displayed. R’s recycling behavior may seem strange at first, but it is useful for performing <code>scalar</code> operations with <code>vectors</code> (remembering that in practice in R there are no scalars, only unit <code>vectors</code>).</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A5+v_1%20=%20%5C%7B5+1,5+2,5+3,5+4,5+5%5C%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A5+v1%20=%20%5C%7B6,7,8,9,10%5C%7D%0A"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;">#add</span></span>
<span id="cb32-3">v1<span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  6  7  8  9 10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;">#sub</span></span>
<span id="cb34-2">v1<span class="dv" style="color: #AD0000;">-5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -4 -3 -2 -1  0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="co" style="color: #5E5E5E;">#multiplication</span></span>
<span id="cb36-2">v1<span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  5 10 15 20 25</code></pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="co" style="color: #5E5E5E;">#division</span></span>
<span id="cb38-2">v1<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.2 0.4 0.6 0.8 1.0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="co" style="color: #5E5E5E;">#power</span></span>
<span id="cb40-2">v1<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]    1   32  243 1024 3125</code></pre>
</div>
</div>
<p>Similarly, <code>functions</code> are also applied element by element. Let’s look at the same v1 being calculated its square root, exponential and logarithm.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb42-2"><span class="co" style="color: #5E5E5E;">#square root</span></span>
<span id="cb42-3"><span class="fu" style="color: #4758AB;">sqrt</span>(v1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.000000 1.414214 1.732051 2.000000 2.236068</code></pre>
</div>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="co" style="color: #5E5E5E;">#exponential</span></span>
<span id="cb44-2"><span class="fu" style="color: #4758AB;">exp</span>(v1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]   2.718282   7.389056  20.085537  54.598150 148.413159</code></pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="co" style="color: #5E5E5E;">#log</span></span>
<span id="cb46-2"><span class="fu" style="color: #4758AB;">log</span>(v1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.0000000 0.6931472 1.0986123 1.3862944 1.6094379</code></pre>
</div>
</div>
<p>R also contains periodic functions like sine (<code>sin()</code>), cosine (<code>cos()</code>) and tangent (<code>tan()</code>), and an inner object to represent <code>pi</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1">pi</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3.141593</code></pre>
</div>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="co" style="color: #5E5E5E;">#sine</span></span>
<span id="cb50-2"><span class="fu" style="color: #4758AB;">sin</span>(pi)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.224606e-16</code></pre>
</div>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="co" style="color: #5E5E5E;">#cossine</span></span>
<span id="cb52-2"><span class="fu" style="color: #4758AB;">cos</span>(pi)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="co" style="color: #5E5E5E;">#tangent</span></span>
<span id="cb54-2"><span class="fu" style="color: #4758AB;">tan</span>(pi)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -1.224647e-16</code></pre>
</div>
</div>
<p>It is important to see that the values calculated by R, although they are infinitesimal, are not exactly the known values.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csin(%5Cpi)%20=%200%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ccos(%5Cpi)%20=%20-1%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctan(%5Cpi)%20=%200%0A"></p>
</section>
<section id="concluding" class="level2">
<h2 class="anchored" data-anchor-id="concluding">Concluding</h2>
<p>Well, there are many more functions and operators that can be applied, but I think we have covered the main ones. We saw how <code>recycling</code> works in operations. That’s it for now. I hope to see you in the next posts!</p>
<p>See you there!</p>


</section>

 ]]></description>
  <category>R</category>
  <category>base</category>
  <guid>https://quartodomarcel.netlify.app/posts/Operations-with-vector/index.html</guid>
  <pubDate>Mon, 05 Sep 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/Operations-with-vector/blackboard-gf94387624_1280.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>R objects 3</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/R-objects-3/index.html</link>
  <description><![CDATA[ 




<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9124147692602552" crossorigin="anonymous"></script>
<p>It is popularly known the curse of the third movie. Alien 3, Return of the Jedi, X-men: The Last Stand, Spider-Man 3, The Godfather 3, among others (MANY OTHERS) have suffered from this curse. However, MARVEL has overcome this curse recently with films like Infinity War, Thor Ragnarok, and Spider-Man with No Way Home. Inspired by her, we will conclude our trilogy of basic R objects. In this post we will look at <code>Lists</code>.</p>
<section id="lists" class="level2">
<h2 class="anchored" data-anchor-id="lists">Lists</h2>
<p><code>Lists</code> are objects similar to <code>vectors</code>, but each element can be a different object. That is, a list can contain a <code>vector</code> in one element, a <code>matrix</code> or <code>data.frame</code> in another, and even a <code>list</code> in a given element. That’s right, <code>lists</code> within <code>lists</code>.</p>
<center>
<iframe src="https://giphy.com/embed/13S1lWb5qheNBC" width="480" height="201" frameborder="0" class="giphy-embed" allowfullscreen="">
</iframe>
<p>
<a href="https://giphy.com/gifs/loop-dreaming-13S1lWb5qheNBC">via GIPHY</a>
</p>

</center>
<p>The function <code>list()</code> is used to create a list in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb1-2">v2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>,<span class="st" style="color: #20794D;">"b"</span>)</span>
<span id="cb1-3">df1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">var1 =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>),</span>
<span id="cb1-4">                  <span class="at" style="color: #657422;">var2 =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>,<span class="st" style="color: #20794D;">"b"</span>,<span class="st" style="color: #20794D;">"c"</span>,<span class="st" style="color: #20794D;">"d"</span>),</span>
<span id="cb1-5">                  <span class="at" style="color: #657422;">var3 =</span> <span class="fu" style="color: #4758AB;">c</span>(T,T,T,F))</span>
<span id="cb1-6"></span>
<span id="cb1-7">l1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(v1,v2,df1)</span>
<span id="cb1-8">l1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1 3 5 7

[[2]]
[1] "a" "b"

[[3]]
  var1 var2  var3
1    1    a  TRUE
2    2    b  TRUE
3    3    c  TRUE
4    4    d FALSE</code></pre>
</div>
</div>
<p>We can see that the output of a <code>list</code> contains differences from the others that we have seen. Each element number on a <code>list</code> is printed by R with double square brackets. Then R will print the elements as we have seen for each class.</p>
<p>This is something important to note when talking about how we extract elements from <code>lists</code>. If we use the single bracket operator the output will be a <code>list</code>, but only containing the element of that index.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;">#Single square bracket</span></span>
<span id="cb3-2">l1[<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] "a" "b"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;">#Double square bracket</span></span>
<span id="cb5-2">l1[[<span class="dv" style="color: #AD0000;">2</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a" "b"</code></pre>
</div>
</div>
<p>We can use the <code>class()</code> function to check the output classes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;">#Single square bracket</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">class</span>(l1[<span class="dv" style="color: #AD0000;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "list"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;">#Double square bracket</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">class</span>(l1[[<span class="dv" style="color: #AD0000;">2</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
</div>
<p>When working with <code>lists</code> we can access elements internal to a given <code>list</code> element. To do this we use a double square bracket followed by a single square bracket. Example, let’s extract the third element contained in the first element of the <code>list</code> <code>l1</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># The third element in the first list element</span></span>
<span id="cb11-2">l1[[<span class="dv" style="color: #AD0000;">1</span>]][<span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<p>The third element of <code>l1</code> is a <code>data.frame</code>, we can extract its columns or rows in a similar way.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;">#The first column of the data.frame in the third list element</span></span>
<span id="cb13-2">l1[[<span class="dv" style="color: #AD0000;">3</span>]][,<span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;">#The rows number 2 and 3 in the data.frame in the third list element</span></span>
<span id="cb15-2">l1[[<span class="dv" style="color: #AD0000;">3</span>]][<span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>,]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  var1 var2 var3
2    2    b TRUE
3    3    c TRUE</code></pre>
</div>
</div>
<p>Just as we can name columns and rows in <code>data.frames</code>/<code>matrix</code>, we can name each element in a <code>list</code>. This is done using the <code>names()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;">#unamed list</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;">names</span>(l1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">names</span>(l1) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"element1"</span>,<span class="st" style="color: #20794D;">"element2"</span>,<span class="st" style="color: #20794D;">"element3"</span>)</span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;">#named list</span></span>
<span id="cb19-4"><span class="fu" style="color: #4758AB;">names</span>(l1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "element1" "element2" "element3"</code></pre>
</div>
</div>
<p>And, as you may be wondering, we can use these names to extract elements from the <code>list</code> by passing them in the single or double square bracket operators.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">l1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$element1
[1] 1 3 5 7

$element2
[1] "a" "b"

$element3
  var1 var2  var3
1    1    a  TRUE
2    2    b  TRUE
3    3    c  TRUE
4    4    d FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;">#Single square bracket</span></span>
<span id="cb23-2">l1[<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"element1"</span>,<span class="st" style="color: #20794D;">"element3"</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$element1
[1] 1 3 5 7

$element3
  var1 var2  var3
1    1    a  TRUE
2    2    b  TRUE
3    3    c  TRUE
4    4    d FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;">#Double square bracket</span></span>
<span id="cb25-2">l1[[<span class="st" style="color: #20794D;">"element1"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 3 5 7</code></pre>
</div>
</div>
</section>
<section id="concluding" class="level2">
<h2 class="anchored" data-anchor-id="concluding">Concluding</h2>
<p>In this three posts we have seen the main objects that form the basis of R. There are others, of course, but with these well understood we can solve the vast majority of challenges when working with R.</p>
<p>I will soon create content showing operations with these objects in practice. That’s it for now. See you around!</p>


</section>

 ]]></description>
  <category>R</category>
  <category>base</category>
  <guid>https://quartodomarcel.netlify.app/posts/R-objects-3/index.html</guid>
  <pubDate>Sun, 28 Aug 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/R-objects-3/checklist-gf5b297ead_1920.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>R objects 2</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/R-objects-2/index.html</link>
  <description><![CDATA[ 




<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9124147692602552" crossorigin="anonymous"></script>
<p>In the last post (<a href="https://quartodomarcel.netlify.app/posts/r-objects/"><strong>R objects</strong></a>) we have seen the <code>atomic</code> classes and <code>vectors</code>, which are one-dimensional arrangements of these classes. But, as you can imagine, it’s not always possible to represent our data using one-dimensional object. When talking about two-dimensional objects tables are something extremely common in our daily lives. R has two types of objects for representing tables (2D objects): <code>matrix</code> and <code>data.frames</code>, very similar objects, but with one <strong>very important difference</strong>: <code>matrix</code> only accept <strong>ONE</strong> <code>atomic</code> class, while <code>data.frames</code> accept <strong>ONE</strong> per column.</p>
<section id="matrix" class="level2">
<h2 class="anchored" data-anchor-id="matrix">Matrix</h2>
<p>To create a <code>matrix</code> we need a <code>vector</code> (Yes, a <code>vector</code>) and the function <code>matrix()</code>. This function takes the <code>vector</code> and arrange in a object containing the number of rows and columns that we specify in the arguments <code>nrow</code> and <code>ncol</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3">Mat1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="at" style="color: #657422;">data =</span> v1,</span>
<span id="cb1-4">               <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb1-5">               <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb1-6">Mat1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    3    2
[2,]    2    1    3</code></pre>
</div>
</div>
<p>It’s possible to control the order of the elements in the <code>matrix</code> using the argument <code>byrow</code>, which controls whether the elements will be filled by rows or columns (<strong><em>default</em></strong>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">matrix</span>(<span class="at" style="color: #657422;">data =</span> v1,</span>
<span id="cb3-2">       <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb3-3">       <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>,</span>
<span id="cb3-4">       <span class="at" style="color: #657422;">byrow =</span> T)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">matrix</span>(<span class="at" style="color: #657422;">data =</span> v1,</span>
<span id="cb5-2">       <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb5-3">       <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>,</span>
<span id="cb5-4">       <span class="at" style="color: #657422;">byrow =</span> F)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    3    2
[2,]    2    1    3</code></pre>
</div>
</div>
<p>The last argument, <code>dimnames</code>, allows us to choose names for the dimensions (rows and columns), but for this argument we need to use <code>lists</code>, and since we haven’t talked about this object class yet, I will show you how to achieve the same results using functions. The functions <code>rownames()</code> and <code>colnames()</code> are used to extract the row and column names, respectively. We can use an <code>vector</code> of <code>characters</code>, equal in length to the number of rows or columns, to choose their names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;">#Columns</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">colnames</span>(Mat1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">colnames</span>(Mat1) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Col1"</span>,<span class="st" style="color: #20794D;">"Col2"</span>,<span class="st" style="color: #20794D;">"Col3"</span>)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">colnames</span>(Mat1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Col1" "Col2" "Col3"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;">#Rows</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;">rownames</span>(Mat1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">rownames</span>(Mat1) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Row1"</span>,<span class="st" style="color: #20794D;">"Row2"</span>)</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;">rownames</span>(Mat1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Row1" "Row2"</code></pre>
</div>
</div>
<p>Similar to <code>vectors</code>, we can extract the elements using squarebrackets, but now we have to pass the indices to rows and columns.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;">#Extract the 2nd row</span></span>
<span id="cb15-2">Mat1[<span class="dv" style="color: #AD0000;">2</span>,]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Col1 Col2 Col3 
   2    1    3 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;">#Extract the 1st and 3rd columns</span></span>
<span id="cb17-2">Mat1[,<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">3</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     Col1 Col3
Row1    1    2
Row2    2    3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;">#Extract the element row = 2 column = 2</span></span>
<span id="cb19-2">Mat1[<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
</div>
</section>
<section id="data-frames" class="level2">
<h2 class="anchored" data-anchor-id="data-frames">Data frames</h2>
<p><code>Data frames</code> are objects design to store data tables in R. Similar to <code>matrix</code>, <code>data frames</code> are 2D objects but as said before, different columns can have different classes. In practice we can think of each column as being a different <code>vector</code>, and the <code>$</code> operator allows us to extract this <code>vector</code>. Thinking about data analysis, in a <code>data frame</code> each column is a variable and each row is an observation.</p>
<p>We build <code>data.frames</code> with the function <code>data.frame</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">df1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">var1 =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>),</span>
<span id="cb21-2">                  <span class="at" style="color: #657422;">var2 =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>,<span class="st" style="color: #20794D;">"b"</span>,<span class="st" style="color: #20794D;">"c"</span>,<span class="st" style="color: #20794D;">"d"</span>),</span>
<span id="cb21-3">                  <span class="at" style="color: #657422;">var3 =</span> <span class="fu" style="color: #4758AB;">c</span>(T,T,T,F))</span>
<span id="cb21-4">df1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  var1 var2  var3
1    1    a  TRUE
2    2    b  TRUE
3    3    c  TRUE
4    4    d FALSE</code></pre>
</div>
</div>
<p>Extracting vectors</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">df1<span class="sc" style="color: #5E5E5E;">$</span>var1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">df1<span class="sc" style="color: #5E5E5E;">$</span>var2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a" "b" "c" "d"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">df1<span class="sc" style="color: #5E5E5E;">$</span>var3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  TRUE  TRUE  TRUE FALSE</code></pre>
</div>
</div>
<p>As for <code>matrix</code>, we can use squartebrackets to extract elements (although I recommend extracting using the <code>$</code> operator first).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="co" style="color: #5E5E5E;">#Using squarebrackets</span></span>
<span id="cb29-2">df1[<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "b"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;">#Using the $</span></span>
<span id="cb31-2">df1<span class="sc" style="color: #5E5E5E;">$</span>var2[<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "b"</code></pre>
</div>
</div>
<p>The names of columns (or variable) can be used in the squarebracket to extract the column.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">df1[,<span class="st" style="color: #20794D;">"var1"</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4</code></pre>
</div>
</div>
<p>For <code>matrix</code> and for <code>data.frames</code> we can find the sizes of the dimensions with the functions <code>nrow()</code>, <code>ncol()</code>, and <code>dim()</code>, which return the number of rows, columns, and both, respectively.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="co" style="color: #5E5E5E;">#number of rows</span></span>
<span id="cb35-2"><span class="fu" style="color: #4758AB;">nrow</span>(df1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="co" style="color: #5E5E5E;">#number of columns</span></span>
<span id="cb37-2"><span class="fu" style="color: #4758AB;">ncol</span>(df1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="co" style="color: #5E5E5E;">#length of dimensions</span></span>
<span id="cb39-2"><span class="fu" style="color: #4758AB;">dim</span>(df1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4 3</code></pre>
</div>
</div>
<p>So far, so good. In the next post I will deal with that <code>list</code> I talked about here, and we will see how powerful they are.</p>
<p>I’ll be waiting for you!</p>


</section>

 ]]></description>
  <category>R</category>
  <category>base</category>
  <guid>https://quartodomarcel.netlify.app/posts/R-objects-2/index.html</guid>
  <pubDate>Wed, 24 Aug 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/R-objects-2/matrix-2502954_1280.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>R objects</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/R-objects/index.html</link>
  <description><![CDATA[ 




<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9124147692602552" crossorigin="anonymous"></script>
<p>R is an extremely powerful language for data analysis and is used in many different fields. But many users start without taking the time to assimilate the different types of objects, which leads to mistakes that could simply be avoided. This in turn can lead to frustration, which is the gateway to the dark side of the force.</p>
<center>
<iframe src="https://giphy.com/embed/l3diT8stVH9qImalO" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen="">
</iframe>
</center>
<p>
<a href="https://giphy.com/gifs/starwars-star-wars-revenge-of-the-sith-l3diT8stVH9qImalO">via GIPHY</a>
</p>
<p>When I started analyzing data with R I was on a very tight deadline and had to skip these steps, and I made a lot of mistakes. Really, a lot!</p>
<p>So in this post I will talk about the basic object types, or classes, in R. Basic but effective. I hope it helps you.</p>
<section id="atomic-data" class="level2">
<h2 class="anchored" data-anchor-id="atomic-data">Atomic data</h2>
<p>These are the basic data classes in R. More complex objects will always be built using them. There are 6 classes in R: <code>logical</code>, <code>integer</code>, <code>real</code>, <code>complex</code>, string (or <code>character</code>) and <code>raw</code>. <code>logical</code> are values like <code>TRUE</code> or <code>FALSE</code> (Known as Booleans). <code>integer</code>, <code>real</code> and <code>complex</code> are <code>numeric</code> types. <code>character</code> are values like words, in other languages this type of values are call as <code>strings</code>. And about <code>raw</code> I must be honest with you. I have never used it!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#logical</span></span>
<span id="cb1-2"><span class="cn" style="color: #8f5902;">TRUE</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;">#integer</span></span>
<span id="cb3-2">1L</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;">#real</span></span>
<span id="cb5-2"><span class="fl" style="color: #AD0000;">1.2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;">#complex</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">complex</span>(<span class="at" style="color: #657422;">real =</span> <span class="dv" style="color: #AD0000;">1</span>,<span class="at" style="color: #657422;">imaginary =</span> <span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1+2i</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;">#character</span></span>
<span id="cb9-2"><span class="st" style="color: #20794D;">"String"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "String"</code></pre>
</div>
</div>
<p>You may have notice that there is special ways to create these objects. We use <code>""</code> to define a <code>character</code>. We add <code>L</code> to the end of a number to make it explicit that it is an <code>integer</code>. We need the <code>complex()</code> function to create a <code>complex</code> number. And <code>logical</code>s are defined by the uppercase words <code>TRUE</code> and <code>FALSE</code>, and their respective initials, <code>T</code> and <code>F</code>.</p>
</section>
<section id="vectors" class="level2">
<h2 class="anchored" data-anchor-id="vectors">Vectors</h2>
<p>Vectors are one-dimensional objects composed of a set of elements, where the order does not necessarily have a meaning, serving only to locate the element in the vector. The functions <code>c()</code> is used to create vector in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb11-2">v1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 3 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">v2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"ball"</span>,<span class="st" style="color: #20794D;">"house"</span>)</span>
<span id="cb13-2">v2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "ball"  "house"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">v3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(T,T,F)</span>
<span id="cb15-2">v3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  TRUE  TRUE FALSE</code></pre>
</div>
</div>
<p>The operator <code>[]</code> can be used to extract the element of certain position in a vector. For example, let’s extract the second element of the vectors <code>v1</code>, <code>v2</code> and <code>v3</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">v1[<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">v2[<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "house"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">v3[<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>Pay attention when use this operator to not try access an non existing position in a vector. such as trying to access the fourth element in a vector (<code>v1</code>) with only three elements. This will result in a <code>NA</code> value, which is represent the <strong>missing values</strong> in R, which are a very important topic that I will cover in the future. Stay tuned!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">v1[<span class="dv" style="color: #AD0000;">4</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] NA</code></pre>
</div>
</div>
<p>There are other ways to create vectors in R considering their classes that I will dedicate a separate post for this.</p>
<p>In R different classes cannot coexist in the same vector (we will see what a vector is later, for now just trust me) and there is coercion when we put them together. Coercion occurs in the following order:</p>
<p><code>character &gt; complex &gt; real &gt; integer &gt; logical</code></p>
<p>This means, if you put a <code>character</code> and a <code>numeric</code> together in a <code>vector</code>, R will coerce the <code>numeric</code> to become a <code>character</code>. If you put a <code>logical</code> in the same <code>vector</code> as a <code>numeric</code> it will be turned into a <code>numeric</code>. The functions <code>class()</code> and <code>typeof()</code> can be used to check the class and type, respectively, of R objects.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;">#class and typeof usage</span></span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;">class</span>(<span class="st" style="color: #20794D;">"ball"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;">typeof</span>(1L)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "integer"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">class</span>(<span class="fl" style="color: #AD0000;">1.2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "numeric"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;">#coercion</span></span>
<span id="cb31-2">obj1 <span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"ball"</span>,<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb31-3"><span class="fu" style="color: #4758AB;">class</span>(obj1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;">typeof</span>(obj1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">obj2 <span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">c</span>(<span class="cn" style="color: #8f5902;">TRUE</span>,<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb35-2"><span class="fu" style="color: #4758AB;">class</span>(obj2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "numeric"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;">typeof</span>(obj2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "double"</code></pre>
</div>
</div>
<p>This behavior is the source of major errors and it is always necessary to check that your objects are of the desired class. After all, it is impossible to perform mathematical operations with <code>character</code> in R, for example.</p>
<p>However, the coercion behavior can be used to our advantage in the case of the trick of using <code>logical</code>s and <code>numeric</code> together. Like in the case where we want to know how many numbers in an vector are greater than a certain value. By using the <code>&gt;</code> (greater than) operator we perform a logical test that returns <code>TRUE</code>/<code>FALSE</code> values. The <code>sum()</code> function, on the other hand, adds up all the elements of a <code>vector</code> and if it receives a <code>logical</code> <code>vector</code> it will transform <code>TRUE</code> into <code>1</code> and <code>FALSE</code> into <code>0</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="co" style="color: #5E5E5E;">#a numeric vector</span></span>
<span id="cb39-2">v1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">8</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb39-3"></span>
<span id="cb39-4"></span>
<span id="cb39-5"><span class="co" style="color: #5E5E5E;">#logical test</span></span>
<span id="cb39-6">v1 <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="co" style="color: #5E5E5E;">#use sum to get how many numbers are grater than 3</span></span>
<span id="cb41-2"><span class="fu" style="color: #4758AB;">sum</span>(v1 <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
</div>
<p>The post is getting long, so that’s it for now! In the next one we will talk about objects with larger dimensions like <code>matrix</code> and <code>data.frame</code>.</p>
<p>I’m waiting for you!</p>


</section>

 ]]></description>
  <category>R</category>
  <category>base</category>
  <guid>https://quartodomarcel.netlify.app/posts/R-objects/index.html</guid>
  <pubDate>Fri, 12 Aug 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/R-objects/cubes-g23e20f481_1920.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>My first R package</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/post-with-code/index.html</link>
  <description><![CDATA[ 




<p>Hello everybody, I’m really excited to announce that I have finished (or almost) my first R package. The <code>tidyspec</code>: a package to analyze spectroscopy data using tidy-data philosophy.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://quartodomarcel.netlify.app/posts/post-with-code/tidyspec_prov.png" class="img-fluid figure-img" width="400"></p>
<p></p><figcaption class="figure-caption">preliminar hex</figcaption><p></p>
</figure>
</div>
<p>In the next few weeks I will be writing the function documentation and then finalizing the package. I am very happy because when I started using R to analyze my FTIR (infrared spectroscopy) data I could not apply <code>tidyverse</code> functions to my pipelines. It took me months of wracking my brains to find a model to leverage the existing packages and connect them to the <code>tidyverse</code>.</p>
<p>You can check the <a href="https://github.com/marceelrf/tidyspec">github repository</a>.</p>
<p>Enjoy!</p>



 ]]></description>
  <category>news</category>
  <category>R</category>
  <category>FTIR</category>
  <category>biomaterials</category>
  <guid>https://quartodomarcel.netlify.app/posts/post-with-code/index.html</guid>
  <pubDate>Thu, 11 Aug 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/post-with-code/tidyspec_prov.png" medium="image" type="image/png" height="165" width="144"/>
</item>
<item>
  <title>Welcome To My Blog</title>
  <dc:creator>Marcel Ferreira</dc:creator>
  <link>https://quartodomarcel.netlify.app/posts/welcome/index.html</link>
  <description><![CDATA[ 




<p>This is the first post in a Quarto blog. Welcome!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://quartodomarcel.netlify.app/posts/welcome/images/dreamMarcel.jpg" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Mee</figcaption><p></p>
</figure>
</div>



 ]]></description>
  <category>news</category>
  <guid>https://quartodomarcel.netlify.app/posts/welcome/index.html</guid>
  <pubDate>Wed, 10 Aug 2022 03:00:00 GMT</pubDate>
  <media:content url="https://quartodomarcel.netlify.app/posts/welcome/images/dreamMarcel.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
