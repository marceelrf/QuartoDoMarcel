{
  "hash": "4d6ee105de06e0128325ba7bbe6db704",
  "result": {
    "markdown": "---\ntitle: \"30 days chart challenge - day 02\"\ndescription: \"waffles plot\"\nauthor: \"Marcel Ferreira\"\ndate: \"2023-04-02\"\ncategories: [R, Dataviz]\nimage: \"waffles-1044180_1920.png\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.0     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.1     v tibble    3.1.8\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(waffle)\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(extrafont)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistering fonts with R\n```\n:::\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"player_stats.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2769 Columns: 26\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (6): Player name, Nation, Position, Squad, Compition, Age\ndbl (19): Born year, Match played, Starts, 90s, Goal, Assist, Goal + Assist,...\nnum  (1): MIn\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,769\nColumns: 26\n$ `Player name`                                        <chr> \"Brenden Aaronson~\n$ Nation                                               <chr> \"USA\", \"USA\", \"MA~\n$ Position                                             <chr> \"MF,FW\", \"MF\", \"D~\n$ Squad                                                <chr> \"Leeds United\", \"~\n$ Compition                                            <chr> \"Premier League\",~\n$ Age                                                  <chr> \"22-157\", \"19-214~\n$ `Born year`                                          <dbl> 2000, 2003, 1987,~\n$ `Match played`                                       <dbl> 26, 1, 28, 20, 26~\n$ Starts                                               <dbl> 23, 8, 28, 14, 26~\n$ MIn                                                  <dbl> 1948.0, 0.1, 2520~\n$ `90s`                                                <dbl> 21.6, NA, 28.0, 1~\n$ Goal                                                 <dbl> 1.0, NA, 1.0, 0.9~\n$ Assist                                               <dbl> 2.0, NA, 1.0, 1.0~\n$ `Goal + Assist`                                      <dbl> 3.0, NA, 2.0, 0.9~\n$ `Goal+Penalty kick`                                  <dbl> 1.0, NA, 1.0, 1.9~\n$ `Penalty Kick`                                       <dbl> 0, 0, 0, 0, 0, 0,~\n$ `Penalty Kick Attempted`                             <dbl> 0, 0, 0, 0, 0, 0,~\n$ `Yellow Card`                                        <dbl> 2.0, NA, 3.0, 2.8~\n$ `Red Card`                                           <dbl> 0.00, 0.00, 0.00,~\n$ `Expected Goal`                                      <dbl> 2.9, 0.0, 1.8, 34~\n$ `Non-penalty Expected Goal`                          <dbl> 2.9, 0.0, 1.8, 84~\n$ `Expected Assisted Goal`                             <dbl> 3.7, 0.0, 0.4, 74~\n$ `Non-penalty Expected Goal + Expected Assisted Goal` <dbl> 6.60, 0.00, 2.20,~\n$ `Progressive Carries`                                <dbl> 36.00, 0.00, 20.0~\n$ `Progressive Passes`                                 <dbl> 72.00, 0.00, 147.~\n$ `Progressive Passes Receive`                         <dbl> 120.00, 0.00, 5.0~\n```\n:::\n:::\n\n\n### Check NA's\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  mutate(across(everything(), is.na)) %>% \n  summarise(across(everything(),sum))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`\n     <int>  <int>   <int> <int>   <int> <int>   <int>   <int>  <int> <int> <int>\n1        0      1       0     0       0     0       0       0      0    30    79\n# ... with 15 more variables: Goal <int>, Assist <int>, `Goal + Assist` <int>,\n#   `Goal+Penalty kick` <int>, `Penalty Kick` <int>,\n#   `Penalty Kick Attempted` <int>, `Yellow Card` <int>, `Red Card` <int>,\n#   `Expected Goal` <int>, `Non-penalty Expected Goal` <int>,\n#   `Expected Assisted Goal` <int>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <int>,\n#   `Progressive Carries` <int>, `Progressive Passes` <int>, ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  filter(is.na(Nation))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3 Age   Born ~4 Match~5 Starts   MIn `90s`\n  <chr>    <chr>  <chr>   <chr> <chr>   <chr>   <dbl>   <dbl>  <dbl> <dbl> <dbl>\n1 David O~ <NA>   FW      Crys~ Premie~ 17-3~    2005       1      1    NA    NA\n# ... with 15 more variables: Goal <dbl>, Assist <dbl>, `Goal + Assist` <dbl>,\n#   `Goal+Penalty kick` <dbl>, `Penalty Kick` <dbl>,\n#   `Penalty Kick Attempted` <dbl>, `Yellow Card` <dbl>, `Red Card` <dbl>,\n#   `Expected Goal` <dbl>, `Non-penalty Expected Goal` <dbl>,\n#   `Expected Assisted Goal` <dbl>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <dbl>,\n#   `Progressive Carries` <dbl>, `Progressive Passes` <dbl>, ...\n```\n:::\n:::\n\n\n### Check unique values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  map_df(.f = \\(x) length(unique(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 26\n  Player~1 Nation Posit~2 Squad Compi~3   Age Born ~4 Match~5 Starts   MIn `90s`\n     <int>  <int>   <int> <int>   <int> <int>   <int>   <int>  <int> <int> <int>\n1     2599    105      10    98       5  2093      27      28    117  1468   272\n# ... with 15 more variables: Goal <int>, Assist <int>, `Goal + Assist` <int>,\n#   `Goal+Penalty kick` <int>, `Penalty Kick` <int>,\n#   `Penalty Kick Attempted` <int>, `Yellow Card` <int>, `Red Card` <int>,\n#   `Expected Goal` <int>, `Non-penalty Expected Goal` <int>,\n#   `Expected Assisted Goal` <int>,\n#   `Non-penalty Expected Goal + Expected Assisted Goal` <int>,\n#   `Progressive Carries` <int>, `Progressive Passes` <int>, ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(Nation) %>%\n  count(sort = TRUE) %>%\n  mutate(prop = 100*n/nrow(data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 105 x 3\n# Groups:   Nation [105]\n   Nation     n  prop\n   <chr>  <int> <dbl>\n 1 ESP      385 13.9 \n 2 FRA      377 13.6 \n 3 GER      231  8.34\n 4 ITA      220  7.95\n 5 ENG      188  6.79\n 6 BRA      106  3.83\n 7 ARG       77  2.78\n 8 POR       72  2.60\n 9 NED       70  2.53\n10 BEL       48  1.73\n# ... with 95 more rows\n```\n:::\n:::\n\n\n## Plot Nation per league\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  select(Nation,\"League\" = Compition) %>%\n  group_by(Nation,League) %>%\n  count(sort = TRUE) %>%\n  filter(n > 20) %>%\n  ggplot(aes(fill = Nation, values = n)) +\n  geom_waffle(\n    aes(colour = Nation),\n    n_rows = 10, \n    size = .5, colour = \"grey50\", \n    flip = TRUE,\n    make_proportional = TRUE\n    ) +\n  facet_wrap(~League, ncol = 5,strip.position = \"bottom\") +\n  #expand_limits(x=c(0,0), y=c(0,0)) +\n  labs(\n    title = \"2022-2023 Top 5 Football Leagues Nationalities\",\n    subtitle = \"Source: https://www.kaggle.com/datasets/joyshil0599/2022-2023-top-5-football-leagues-player-stats\",\n    caption = \"Only countries with more than 20 player in each league\", \n    fill = NULL,\n    colour = NULL) +\n  scale_fill_manual(values = c(\"ALG\" = \"#006331\",\n                               \"ARG\" = \"#70a7d8\",\n                               \"AUT\" =  \"#e62837\",\n                               \"BRA\" = \"#f6d900\",\n                               \"ENG\" = \"white\",\n                               \"ESP\" = \"#c00b1d\",\n                               \"FRA\" = \"#002551\",\n                               \"GER\" = \"black\",\n                               \"ITA\" = \"#0b8dcd\",\n                               \"NED\" = \"orange\",\n                               \"POR\" = \"#e52011\")) + \n  theme_enhance_waffle() +\n  theme_void() +\n  theme(\n    text = element_text(family = \"Segoe UI\"),\n    strip.text.x =  element_text(family = \"Segoe UI\",face = \"italic\",size = 10),\n    strip.background = element_rect(fill = \"grey99\",\n                                    linetype = \"blank\"),\n    plot.title = element_text(family = \"Segoe UI\",hjust = .5,size = 25),\n    plot.subtitle = element_text(family = \"Segoe UI\",hjust = .5,size = 6)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(filename = \"plot_day02.png\",bg = \"white\",dpi = 400,width = 10)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 10 x 5 in image\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}